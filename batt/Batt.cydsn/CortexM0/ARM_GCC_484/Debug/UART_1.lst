ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	UART_1_initVar
  18              		.bss
  19              		.type	UART_1_initVar, %object
  20              		.size	UART_1_initVar, 1
  21              	UART_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.UART_1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	UART_1_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	UART_1_Start, %function
  29              	UART_1_Start:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\UART_1.c"
   1:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC4/UART_1.c **** * Version 2.30
   4:.\Generated_Source\PSoC4/UART_1.c **** *
   5:.\Generated_Source\PSoC4/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC4/UART_1.c **** *
   8:.\Generated_Source\PSoC4/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC4/UART_1.c **** *
  10:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/UART_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART_1.c **** 
  17:.\Generated_Source\PSoC4/UART_1.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC4/UART_1.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC4/UART_1.c **** #if(UART_1_INTERNAL_CLOCK_USED)
  20:.\Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_IntClock.h"
  21:.\Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  22:.\Generated_Source\PSoC4/UART_1.c **** 
  23:.\Generated_Source\PSoC4/UART_1.c **** 
  24:.\Generated_Source\PSoC4/UART_1.c **** /***************************************
  25:.\Generated_Source\PSoC4/UART_1.c **** * Global data allocation
  26:.\Generated_Source\PSoC4/UART_1.c **** ***************************************/
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 2


  27:.\Generated_Source\PSoC4/UART_1.c **** 
  28:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  29:.\Generated_Source\PSoC4/UART_1.c **** #if( UART_1_TX_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
  30:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TXBUFFERSIZE];
  31:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_TX_ENABLED */
  34:.\Generated_Source\PSoC4/UART_1.c **** #if( ( UART_1_RX_ENABLED || UART_1_HD_ENABLED ) && \
  35:.\Generated_Source\PSoC4/UART_1.c ****      (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
  36:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RXBUFFERSIZE];
  37:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferRead = 0u;
  38:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  39:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  40:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow = 0u;
  41:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  42:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RXADDRESSMODE;
  43:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  44:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End EnableHWAddress */
  45:.\Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_RX_ENABLED */
  46:.\Generated_Source\PSoC4/UART_1.c **** 
  47:.\Generated_Source\PSoC4/UART_1.c **** 
  48:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
  50:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  51:.\Generated_Source\PSoC4/UART_1.c **** *
  52:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  53:.\Generated_Source\PSoC4/UART_1.c **** *  Initialize and Enable the UART component.
  54:.\Generated_Source\PSoC4/UART_1.c **** *  Enable the clock input to enable operation.
  55:.\Generated_Source\PSoC4/UART_1.c **** *
  56:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
  57:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  58:.\Generated_Source\PSoC4/UART_1.c **** *
  59:.\Generated_Source\PSoC4/UART_1.c **** * Return:
  60:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  61:.\Generated_Source\PSoC4/UART_1.c **** *
  62:.\Generated_Source\PSoC4/UART_1.c **** * Global variables:
  63:.\Generated_Source\PSoC4/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  64:.\Generated_Source\PSoC4/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  65:.\Generated_Source\PSoC4/UART_1.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for
  66:.\Generated_Source\PSoC4/UART_1.c **** *  component initialization without re-initialization in all subsequent calls
  67:.\Generated_Source\PSoC4/UART_1.c **** *  to the UART_1_Start() routine.
  68:.\Generated_Source\PSoC4/UART_1.c **** *
  69:.\Generated_Source\PSoC4/UART_1.c **** * Reentrant:
  70:.\Generated_Source\PSoC4/UART_1.c **** *  No.
  71:.\Generated_Source\PSoC4/UART_1.c **** *
  72:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  73:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void) 
  74:.\Generated_Source\PSoC4/UART_1.c **** {
  32              		.loc 1 74 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  75:.\Generated_Source\PSoC4/UART_1.c ****     /* If not Initialized then initialize all required hardware and software */
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 3


  76:.\Generated_Source\PSoC4/UART_1.c ****     if(UART_1_initVar == 0u)
  40              		.loc 1 76 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  77:.\Generated_Source\PSoC4/UART_1.c ****     {
  78:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
  45              		.loc 1 78 0
  46 000c FFF7FEFF 		bl	UART_1_Init
  79:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u;
  47              		.loc 1 79 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  80:.\Generated_Source\PSoC4/UART_1.c ****     }
  81:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
  52              		.loc 1 81 0
  53 0016 FFF7FEFF 		bl	UART_1_Enable
  82:.\Generated_Source\PSoC4/UART_1.c **** }
  54              		.loc 1 82 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	UART_1_initVar
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	UART_1_Start, .-UART_1_Start
  65              		.section	.text.UART_1_Init,"ax",%progbits
  66              		.align	2
  67              		.global	UART_1_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	UART_1_Init, %function
  71              	UART_1_Init:
  72              	.LFB3:
  83:.\Generated_Source\PSoC4/UART_1.c **** 
  84:.\Generated_Source\PSoC4/UART_1.c **** 
  85:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
  87:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  88:.\Generated_Source\PSoC4/UART_1.c **** *
  89:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  90:.\Generated_Source\PSoC4/UART_1.c **** *  Initialize component's parameters to the parameters set by user in the
  91:.\Generated_Source\PSoC4/UART_1.c **** *  customizer of the component placed onto schematic. Usually called in
  92:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Start().
  93:.\Generated_Source\PSoC4/UART_1.c **** *
  94:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
  95:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  96:.\Generated_Source\PSoC4/UART_1.c **** *
  97:.\Generated_Source\PSoC4/UART_1.c **** * Return:
  98:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  99:.\Generated_Source\PSoC4/UART_1.c **** *
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 4


 100:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void) 
 102:.\Generated_Source\PSoC4/UART_1.c **** {
  73              		.loc 1 102 0
  74              		.cfi_startproc
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
 103:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 104:.\Generated_Source\PSoC4/UART_1.c **** 
 105:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RX_INTERRUPT_ENABLED && (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH))
 106:.\Generated_Source\PSoC4/UART_1.c ****             /* Set the RX Interrupt. */
 107:.\Generated_Source\PSoC4/UART_1.c ****             (void)CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 108:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 109:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 110:.\Generated_Source\PSoC4/UART_1.c **** 
 111:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 112:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RXAddressMode);
 113:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RXHWADDRESS1);
 114:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RXHWADDRESS2);
 115:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 116:.\Generated_Source\PSoC4/UART_1.c **** 
 117:.\Generated_Source\PSoC4/UART_1.c ****         /* Init Count7 period */
 118:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  81              		.loc 1 118 0
  82 0004 084B     		ldr	r3, .L6
  83 0006 7222     		mov	r2, #114
  84 0008 1A70     		strb	r2, [r3]
 119:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 120:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
  85              		.loc 1 120 0
  86 000a 084B     		ldr	r3, .L6+4
  87 000c 2022     		mov	r2, #32
  88 000e 1A70     		strb	r2, [r3]
 121:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 122:.\Generated_Source\PSoC4/UART_1.c **** 
 123:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 124:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TX_INTERRUPT_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
 125:.\Generated_Source\PSoC4/UART_1.c ****             /* Set the TX Interrupt. */
 126:.\Generated_Source\PSoC4/UART_1.c ****             (void)CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 127:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 128:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TX_INTERRUPT_ENABLED */
 129:.\Generated_Source\PSoC4/UART_1.c **** 
 130:.\Generated_Source\PSoC4/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 131:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TXCLKGEN_DP)
 132:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  89              		.loc 1 132 0
  90 0010 074B     		ldr	r3, .L6+8
  91 0012 0722     		mov	r2, #7
  92 0014 1A70     		strb	r2, [r3]
 133:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = (UART_1_NUMBER_OF_DATA_BITS +
  93              		.loc 1 133 0
  94 0016 074B     		ldr	r3, .L6+12
  95 0018 4822     		mov	r2, #72
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 5


  96 001a 1A70     		strb	r2, [r3]
 134:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT;
 135:.\Generated_Source\PSoC4/UART_1.c ****         #else
 136:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 137:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 138:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 139:.\Generated_Source\PSoC4/UART_1.c **** 
 140:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 141:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TX_INTERRUPT_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
 142:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 143:.\Generated_Source\PSoC4/UART_1.c ****         #else
 144:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  97              		.loc 1 144 0
  98 001c 064B     		ldr	r3, .L6+16
  99 001e 0022     		mov	r2, #0
 100 0020 1A70     		strb	r2, [r3]
 145:.\Generated_Source\PSoC4/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 146:.\Generated_Source\PSoC4/UART_1.c **** 
 147:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 148:.\Generated_Source\PSoC4/UART_1.c **** 
 149:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_WriteControlRegister( \
 151:.\Generated_Source\PSoC4/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 152:.\Generated_Source\PSoC4/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 153:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 154:.\Generated_Source\PSoC4/UART_1.c **** }
 101              		.loc 1 154 0
 102 0022 BD46     		mov	sp, r7
 103              		@ sp needed
 104 0024 80BD     		pop	{r7, pc}
 105              	.L7:
 106 0026 C046     		.align	2
 107              	.L6:
 108 0028 80000F40 		.word	1074724992
 109 002c 81000F40 		.word	1074724993
 110 0030 21000F40 		.word	1074724897
 111 0034 31000F40 		.word	1074724913
 112 0038 82000F40 		.word	1074724994
 113              		.cfi_endproc
 114              	.LFE3:
 115              		.size	UART_1_Init, .-UART_1_Init
 116              		.section	.text.UART_1_Enable,"ax",%progbits
 117              		.align	2
 118              		.global	UART_1_Enable
 119              		.code	16
 120              		.thumb_func
 121              		.type	UART_1_Enable, %function
 122              	UART_1_Enable:
 123              	.LFB4:
 155:.\Generated_Source\PSoC4/UART_1.c **** 
 156:.\Generated_Source\PSoC4/UART_1.c **** 
 157:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 158:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
 159:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 160:.\Generated_Source\PSoC4/UART_1.c **** *
 161:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 162:.\Generated_Source\PSoC4/UART_1.c **** *  Enables the UART block operation
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 6


 163:.\Generated_Source\PSoC4/UART_1.c **** *
 164:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 165:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 166:.\Generated_Source\PSoC4/UART_1.c **** *
 167:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 168:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 169:.\Generated_Source\PSoC4/UART_1.c **** *
 170:.\Generated_Source\PSoC4/UART_1.c **** * Global Variables:
 171:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 172:.\Generated_Source\PSoC4/UART_1.c **** *
 173:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 174:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void) 
 175:.\Generated_Source\PSoC4/UART_1.c **** {
 124              		.loc 1 175 0
 125              		.cfi_startproc
 126 0000 90B5     		push	{r4, r7, lr}
 127              		.cfi_def_cfa_offset 12
 128              		.cfi_offset 4, -12
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 83B0     		sub	sp, sp, #12
 132              		.cfi_def_cfa_offset 24
 133 0004 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
 176:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 177:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 135              		.loc 1 177 0
 136 0006 FC1D     		add	r4, r7, #7
 137 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 138 000c 031C     		mov	r3, r0
 139 000e 2370     		strb	r3, [r4]
 178:.\Generated_Source\PSoC4/UART_1.c **** 
 179:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 180:.\Generated_Source\PSoC4/UART_1.c ****         /*RX Counter (Count7) Enable */
 181:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 140              		.loc 1 181 0
 141 0010 114B     		ldr	r3, .L9
 142 0012 114A     		ldr	r2, .L9
 143 0014 1278     		ldrb	r2, [r2]
 144 0016 D2B2     		uxtb	r2, r2
 145 0018 2021     		mov	r1, #32
 146 001a 0A43     		orr	r2, r1
 147 001c D2B2     		uxtb	r2, r2
 148 001e 1A70     		strb	r2, [r3]
 182:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the RX Interrupt. */
 183:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 149              		.loc 1 183 0
 150 0020 0E4B     		ldr	r3, .L9+4
 151 0022 0E4A     		ldr	r2, .L9+4
 152 0024 1278     		ldrb	r2, [r2]
 153 0026 D2B2     		uxtb	r2, r2
 154 0028 1021     		mov	r1, #16
 155 002a 0A43     		orr	r2, r1
 156 002c D2B2     		uxtb	r2, r2
 157 002e 1A70     		strb	r2, [r3]
 184:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RX_INTERRUPT_ENABLED && (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH))
 185:.\Generated_Source\PSoC4/UART_1.c ****             CyIntEnable(UART_1_RX_VECT_NUM);
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 7


 186:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 187:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 188:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 189:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 190:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 191:.\Generated_Source\PSoC4/UART_1.c **** 
 192:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 193:.\Generated_Source\PSoC4/UART_1.c ****         /*TX Counter (DP/Count7) Enable */
 194:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 195:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 196:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 197:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the TX Interrupt. */
 198:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 158              		.loc 1 198 0
 159 0030 0B4B     		ldr	r3, .L9+8
 160 0032 0B4A     		ldr	r2, .L9+8
 161 0034 1278     		ldrb	r2, [r2]
 162 0036 D2B2     		uxtb	r2, r2
 163 0038 1021     		mov	r1, #16
 164 003a 0A43     		orr	r2, r1
 165 003c D2B2     		uxtb	r2, r2
 166 003e 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TX_INTERRUPT_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
 200:.\Generated_Source\PSoC4/UART_1.c ****             CyIntEnable(UART_1_TX_VECT_NUM);
 201:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TX_INTERRUPT_ENABLED*/
 202:.\Generated_Source\PSoC4/UART_1.c ****      #endif /* End UART_1_TX_ENABLED */
 203:.\Generated_Source\PSoC4/UART_1.c **** 
 204:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_INTERNAL_CLOCK_USED)
 205:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the clock. */
 206:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Start();
 167              		.loc 1 206 0
 168 0040 FF20     		mov	r0, #255
 169 0042 FFF7FEFF 		bl	UART_1_IntClock_StartEx
 207:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_INTERNAL_CLOCK_USED */
 208:.\Generated_Source\PSoC4/UART_1.c **** 
 209:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 170              		.loc 1 209 0
 171 0046 FB1D     		add	r3, r7, #7
 172 0048 1B78     		ldrb	r3, [r3]
 173 004a 181C     		mov	r0, r3
 174 004c FFF7FEFF 		bl	CyExitCriticalSection
 210:.\Generated_Source\PSoC4/UART_1.c **** }
 175              		.loc 1 210 0
 176 0050 BD46     		mov	sp, r7
 177 0052 03B0     		add	sp, sp, #12
 178              		@ sp needed
 179 0054 90BD     		pop	{r4, r7, pc}
 180              	.L10:
 181 0056 C046     		.align	2
 182              	.L9:
 183 0058 90000F40 		.word	1074725008
 184 005c 91000F40 		.word	1074725009
 185 0060 92000F40 		.word	1074725010
 186              		.cfi_endproc
 187              	.LFE4:
 188              		.size	UART_1_Enable, .-UART_1_Enable
 189              		.section	.text.UART_1_Stop,"ax",%progbits
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 8


 190              		.align	2
 191              		.global	UART_1_Stop
 192              		.code	16
 193              		.thumb_func
 194              		.type	UART_1_Stop, %function
 195              	UART_1_Stop:
 196              	.LFB5:
 211:.\Generated_Source\PSoC4/UART_1.c **** 
 212:.\Generated_Source\PSoC4/UART_1.c **** 
 213:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 214:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 215:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 216:.\Generated_Source\PSoC4/UART_1.c **** *
 217:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 218:.\Generated_Source\PSoC4/UART_1.c **** *  Disable the UART component
 219:.\Generated_Source\PSoC4/UART_1.c **** *
 220:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 221:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 222:.\Generated_Source\PSoC4/UART_1.c **** *
 223:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 224:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 225:.\Generated_Source\PSoC4/UART_1.c **** *
 226:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void) 
 228:.\Generated_Source\PSoC4/UART_1.c **** {
 197              		.loc 1 228 0
 198              		.cfi_startproc
 199 0000 90B5     		push	{r4, r7, lr}
 200              		.cfi_def_cfa_offset 12
 201              		.cfi_offset 4, -12
 202              		.cfi_offset 7, -8
 203              		.cfi_offset 14, -4
 204 0002 83B0     		sub	sp, sp, #12
 205              		.cfi_def_cfa_offset 24
 206 0004 00AF     		add	r7, sp, #0
 207              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 230:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 208              		.loc 1 230 0
 209 0006 FC1D     		add	r4, r7, #7
 210 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 211 000c 031C     		mov	r3, r0
 212 000e 2370     		strb	r3, [r4]
 231:.\Generated_Source\PSoC4/UART_1.c **** 
 232:.\Generated_Source\PSoC4/UART_1.c ****     /* Write Bit Counter Disable */
 233:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 234:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8)~UART_1_CNTR_ENABLE;
 213              		.loc 1 234 0
 214 0010 104B     		ldr	r3, .L12
 215 0012 104A     		ldr	r2, .L12
 216 0014 1278     		ldrb	r2, [r2]
 217 0016 D2B2     		uxtb	r2, r2
 218 0018 2021     		mov	r1, #32
 219 001a 8A43     		bic	r2, r1
 220 001c D2B2     		uxtb	r2, r2
 221 001e 1A70     		strb	r2, [r3]
 235:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED */
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 9


 236:.\Generated_Source\PSoC4/UART_1.c **** 
 237:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 238:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 239:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8)~UART_1_CNTR_ENABLE;
 240:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 241:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_TX_ENABLED */
 242:.\Generated_Source\PSoC4/UART_1.c **** 
 243:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_INTERNAL_CLOCK_USED)
 244:.\Generated_Source\PSoC4/UART_1.c ****         /* Disable the clock. */
 245:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Stop();
 222              		.loc 1 245 0
 223 0020 FFF7FEFF 		bl	UART_1_IntClock_Stop
 246:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_INTERNAL_CLOCK_USED */
 247:.\Generated_Source\PSoC4/UART_1.c **** 
 248:.\Generated_Source\PSoC4/UART_1.c ****     /* Disable internal interrupt component */
 249:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 250:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8)~UART_1_INT_ENABLE;
 224              		.loc 1 250 0
 225 0024 0C4B     		ldr	r3, .L12+4
 226 0026 0C4A     		ldr	r2, .L12+4
 227 0028 1278     		ldrb	r2, [r2]
 228 002a D2B2     		uxtb	r2, r2
 229 002c 1021     		mov	r1, #16
 230 002e 8A43     		bic	r2, r1
 231 0030 D2B2     		uxtb	r2, r2
 232 0032 1A70     		strb	r2, [r3]
 251:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RX_INTERRUPT_ENABLED && (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH))
 252:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableRxInt();
 253:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 254:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED */
 255:.\Generated_Source\PSoC4/UART_1.c **** 
 256:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 257:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8)~UART_1_INT_ENABLE;
 233              		.loc 1 257 0
 234 0034 094B     		ldr	r3, .L12+8
 235 0036 094A     		ldr	r2, .L12+8
 236 0038 1278     		ldrb	r2, [r2]
 237 003a D2B2     		uxtb	r2, r2
 238 003c 1021     		mov	r1, #16
 239 003e 8A43     		bic	r2, r1
 240 0040 D2B2     		uxtb	r2, r2
 241 0042 1A70     		strb	r2, [r3]
 258:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TX_INTERRUPT_ENABLED && (UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH))
 259:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 260:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TX_INTERRUPT_ENABLED */
 261:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 262:.\Generated_Source\PSoC4/UART_1.c **** 
 263:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 242              		.loc 1 263 0
 243 0044 FB1D     		add	r3, r7, #7
 244 0046 1B78     		ldrb	r3, [r3]
 245 0048 181C     		mov	r0, r3
 246 004a FFF7FEFF 		bl	CyExitCriticalSection
 264:.\Generated_Source\PSoC4/UART_1.c **** }
 247              		.loc 1 264 0
 248 004e BD46     		mov	sp, r7
 249 0050 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 10


 250              		@ sp needed
 251 0052 90BD     		pop	{r4, r7, pc}
 252              	.L13:
 253              		.align	2
 254              	.L12:
 255 0054 90000F40 		.word	1074725008
 256 0058 91000F40 		.word	1074725009
 257 005c 92000F40 		.word	1074725010
 258              		.cfi_endproc
 259              	.LFE5:
 260              		.size	UART_1_Stop, .-UART_1_Stop
 261              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 262              		.align	2
 263              		.global	UART_1_ReadControlRegister
 264              		.code	16
 265              		.thumb_func
 266              		.type	UART_1_ReadControlRegister, %function
 267              	UART_1_ReadControlRegister:
 268              	.LFB6:
 265:.\Generated_Source\PSoC4/UART_1.c **** 
 266:.\Generated_Source\PSoC4/UART_1.c **** 
 267:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 268:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 269:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 270:.\Generated_Source\PSoC4/UART_1.c **** *
 271:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 272:.\Generated_Source\PSoC4/UART_1.c **** *  Read the current state of the control register
 273:.\Generated_Source\PSoC4/UART_1.c **** *
 274:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 275:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 276:.\Generated_Source\PSoC4/UART_1.c **** *
 277:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 278:.\Generated_Source\PSoC4/UART_1.c **** *  Current state of the control register.
 279:.\Generated_Source\PSoC4/UART_1.c **** *
 280:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 282:.\Generated_Source\PSoC4/UART_1.c **** {
 269              		.loc 1 282 0
 270              		.cfi_startproc
 271 0000 80B5     		push	{r7, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 7, -8
 274              		.cfi_offset 14, -4
 275 0002 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 283:.\Generated_Source\PSoC4/UART_1.c ****     #if( UART_1_CONTROL_REG_REMOVED )
 284:.\Generated_Source\PSoC4/UART_1.c ****         return(0u);
 277              		.loc 1 284 0
 278 0004 0023     		mov	r3, #0
 285:.\Generated_Source\PSoC4/UART_1.c ****     #else
 286:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_CONTROL_REG);
 287:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_CONTROL_REG_REMOVED */
 288:.\Generated_Source\PSoC4/UART_1.c **** }
 279              		.loc 1 288 0
 280 0006 181C     		mov	r0, r3
 281 0008 BD46     		mov	sp, r7
 282              		@ sp needed
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 11


 283 000a 80BD     		pop	{r7, pc}
 284              		.cfi_endproc
 285              	.LFE6:
 286              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 287              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 288              		.align	2
 289              		.global	UART_1_WriteControlRegister
 290              		.code	16
 291              		.thumb_func
 292              		.type	UART_1_WriteControlRegister, %function
 293              	UART_1_WriteControlRegister:
 294              	.LFB7:
 289:.\Generated_Source\PSoC4/UART_1.c **** 
 290:.\Generated_Source\PSoC4/UART_1.c **** 
 291:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 292:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 293:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 294:.\Generated_Source\PSoC4/UART_1.c **** *
 295:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 296:.\Generated_Source\PSoC4/UART_1.c **** *  Writes an 8-bit value into the control register
 297:.\Generated_Source\PSoC4/UART_1.c **** *
 298:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 299:.\Generated_Source\PSoC4/UART_1.c **** *  control:  control register value
 300:.\Generated_Source\PSoC4/UART_1.c **** *
 301:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 302:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 303:.\Generated_Source\PSoC4/UART_1.c **** *
 304:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 305:.\Generated_Source\PSoC4/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 306:.\Generated_Source\PSoC4/UART_1.c **** {
 295              		.loc 1 306 0
 296              		.cfi_startproc
 297 0000 80B5     		push	{r7, lr}
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 7, -8
 300              		.cfi_offset 14, -4
 301 0002 82B0     		sub	sp, sp, #8
 302              		.cfi_def_cfa_offset 16
 303 0004 00AF     		add	r7, sp, #0
 304              		.cfi_def_cfa_register 7
 305 0006 021C     		mov	r2, r0
 306 0008 FB1D     		add	r3, r7, #7
 307 000a 1A70     		strb	r2, [r3]
 307:.\Generated_Source\PSoC4/UART_1.c ****     #if( UART_1_CONTROL_REG_REMOVED )
 308:.\Generated_Source\PSoC4/UART_1.c ****         if(control != 0u) { }      /* release compiler warning */
 309:.\Generated_Source\PSoC4/UART_1.c ****     #else
 310:.\Generated_Source\PSoC4/UART_1.c ****        UART_1_CONTROL_REG = control;
 311:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_CONTROL_REG_REMOVED */
 312:.\Generated_Source\PSoC4/UART_1.c **** }
 308              		.loc 1 312 0
 309 000c BD46     		mov	sp, r7
 310 000e 02B0     		add	sp, sp, #8
 311              		@ sp needed
 312 0010 80BD     		pop	{r7, pc}
 313              		.cfi_endproc
 314              	.LFE7:
 315              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 12


 316 0012 C046     		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 317              		.align	2
 318              		.global	UART_1_SetRxInterruptMode
 319              		.code	16
 320              		.thumb_func
 321              		.type	UART_1_SetRxInterruptMode, %function
 322              	UART_1_SetRxInterruptMode:
 323              	.LFB8:
 313:.\Generated_Source\PSoC4/UART_1.c **** 
 314:.\Generated_Source\PSoC4/UART_1.c **** 
 315:.\Generated_Source\PSoC4/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 316:.\Generated_Source\PSoC4/UART_1.c **** 
 317:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_INTERRUPT_ENABLED)
 318:.\Generated_Source\PSoC4/UART_1.c **** 
 319:.\Generated_Source\PSoC4/UART_1.c ****         /*******************************************************************************
 320:.\Generated_Source\PSoC4/UART_1.c ****         * Function Name: UART_1_EnableRxInt
 321:.\Generated_Source\PSoC4/UART_1.c ****         ********************************************************************************
 322:.\Generated_Source\PSoC4/UART_1.c ****         *
 323:.\Generated_Source\PSoC4/UART_1.c ****         * Summary:
 324:.\Generated_Source\PSoC4/UART_1.c ****         *  Enable RX interrupt generation
 325:.\Generated_Source\PSoC4/UART_1.c ****         *
 326:.\Generated_Source\PSoC4/UART_1.c ****         * Parameters:
 327:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 328:.\Generated_Source\PSoC4/UART_1.c ****         *
 329:.\Generated_Source\PSoC4/UART_1.c ****         * Return:
 330:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 331:.\Generated_Source\PSoC4/UART_1.c ****         *
 332:.\Generated_Source\PSoC4/UART_1.c ****         * Theory:
 333:.\Generated_Source\PSoC4/UART_1.c ****         *  Enable the interrupt output -or- the interrupt component itself
 334:.\Generated_Source\PSoC4/UART_1.c ****         *
 335:.\Generated_Source\PSoC4/UART_1.c ****         *******************************************************************************/
 336:.\Generated_Source\PSoC4/UART_1.c ****         void UART_1_EnableRxInt(void) 
 337:.\Generated_Source\PSoC4/UART_1.c ****         {
 338:.\Generated_Source\PSoC4/UART_1.c ****             CyIntEnable(UART_1_RX_VECT_NUM);
 339:.\Generated_Source\PSoC4/UART_1.c ****         }
 340:.\Generated_Source\PSoC4/UART_1.c **** 
 341:.\Generated_Source\PSoC4/UART_1.c **** 
 342:.\Generated_Source\PSoC4/UART_1.c ****         /*******************************************************************************
 343:.\Generated_Source\PSoC4/UART_1.c ****         * Function Name: UART_1_DisableRxInt
 344:.\Generated_Source\PSoC4/UART_1.c ****         ********************************************************************************
 345:.\Generated_Source\PSoC4/UART_1.c ****         *
 346:.\Generated_Source\PSoC4/UART_1.c ****         * Summary:
 347:.\Generated_Source\PSoC4/UART_1.c ****         *  Disable RX interrupt generation
 348:.\Generated_Source\PSoC4/UART_1.c ****         *
 349:.\Generated_Source\PSoC4/UART_1.c ****         * Parameters:
 350:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 351:.\Generated_Source\PSoC4/UART_1.c ****         *
 352:.\Generated_Source\PSoC4/UART_1.c ****         * Return:
 353:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 354:.\Generated_Source\PSoC4/UART_1.c ****         *
 355:.\Generated_Source\PSoC4/UART_1.c ****         * Theory:
 356:.\Generated_Source\PSoC4/UART_1.c ****         *  Disable the interrupt output -or- the interrupt component itself
 357:.\Generated_Source\PSoC4/UART_1.c ****         *
 358:.\Generated_Source\PSoC4/UART_1.c ****         *******************************************************************************/
 359:.\Generated_Source\PSoC4/UART_1.c ****         void UART_1_DisableRxInt(void) 
 360:.\Generated_Source\PSoC4/UART_1.c ****         {
 361:.\Generated_Source\PSoC4/UART_1.c ****             CyIntDisable(UART_1_RX_VECT_NUM);
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 13


 362:.\Generated_Source\PSoC4/UART_1.c ****         }
 363:.\Generated_Source\PSoC4/UART_1.c **** 
 364:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 365:.\Generated_Source\PSoC4/UART_1.c **** 
 366:.\Generated_Source\PSoC4/UART_1.c **** 
 367:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 368:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 369:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 370:.\Generated_Source\PSoC4/UART_1.c ****     *
 371:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 372:.\Generated_Source\PSoC4/UART_1.c ****     *  Configure which status bits trigger an interrupt event
 373:.\Generated_Source\PSoC4/UART_1.c ****     *
 374:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 375:.\Generated_Source\PSoC4/UART_1.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 376:.\Generated_Source\PSoC4/UART_1.c ****     *           the header file)
 377:.\Generated_Source\PSoC4/UART_1.c ****     *
 378:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 379:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 380:.\Generated_Source\PSoC4/UART_1.c ****     *
 381:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 382:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 383:.\Generated_Source\PSoC4/UART_1.c ****     *
 384:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 386:.\Generated_Source\PSoC4/UART_1.c ****     {
 324              		.loc 1 386 0
 325              		.cfi_startproc
 326 0000 80B5     		push	{r7, lr}
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 82B0     		sub	sp, sp, #8
 331              		.cfi_def_cfa_offset 16
 332 0004 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 334 0006 021C     		mov	r2, r0
 335 0008 FB1D     		add	r3, r7, #7
 336 000a 1A70     		strb	r2, [r3]
 387:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 337              		.loc 1 387 0
 338 000c 034B     		ldr	r3, .L18
 339 000e FA1D     		add	r2, r7, #7
 340 0010 1278     		ldrb	r2, [r2]
 341 0012 1A70     		strb	r2, [r3]
 388:.\Generated_Source\PSoC4/UART_1.c ****     }
 342              		.loc 1 388 0
 343 0014 BD46     		mov	sp, r7
 344 0016 02B0     		add	sp, sp, #8
 345              		@ sp needed
 346 0018 80BD     		pop	{r7, pc}
 347              	.L19:
 348 001a C046     		.align	2
 349              	.L18:
 350 001c 81000F40 		.word	1074724993
 351              		.cfi_endproc
 352              	.LFE8:
 353              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 14


 354              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 355              		.align	2
 356              		.global	UART_1_ReadRxData
 357              		.code	16
 358              		.thumb_func
 359              		.type	UART_1_ReadRxData, %function
 360              	UART_1_ReadRxData:
 361              	.LFB9:
 389:.\Generated_Source\PSoC4/UART_1.c **** 
 390:.\Generated_Source\PSoC4/UART_1.c **** 
 391:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxData
 393:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC4/UART_1.c ****     *
 395:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 396:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns data in RX Data register without checking status register to
 397:.\Generated_Source\PSoC4/UART_1.c ****     *  determine if data is valid
 398:.\Generated_Source\PSoC4/UART_1.c ****     *
 399:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 400:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 401:.\Generated_Source\PSoC4/UART_1.c ****     *
 402:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 403:.\Generated_Source\PSoC4/UART_1.c ****     *  Received data from RX register
 404:.\Generated_Source\PSoC4/UART_1.c ****     *
 405:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 406:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 407:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 408:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 409:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 410:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 411:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - creared if loop condition was detected
 412:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 413:.\Generated_Source\PSoC4/UART_1.c ****     *
 414:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 415:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 416:.\Generated_Source\PSoC4/UART_1.c ****     *
 417:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 418:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 419:.\Generated_Source\PSoC4/UART_1.c ****     {
 362              		.loc 1 419 0
 363              		.cfi_startproc
 364 0000 80B5     		push	{r7, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 82B0     		sub	sp, sp, #8
 369              		.cfi_def_cfa_offset 16
 370 0004 00AF     		add	r7, sp, #0
 371              		.cfi_def_cfa_register 7
 420:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData;
 421:.\Generated_Source\PSoC4/UART_1.c **** 
 422:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 423:.\Generated_Source\PSoC4/UART_1.c ****             uint8 loc_rxBufferRead;
 424:.\Generated_Source\PSoC4/UART_1.c ****             uint8 loc_rxBufferWrite;
 425:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 426:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Rx interrupt. */
 427:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 15


 428:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableRxInt();
 429:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* UART_1_RX_INTERRUPT_ENABLED */
 430:.\Generated_Source\PSoC4/UART_1.c ****             loc_rxBufferRead = UART_1_rxBufferRead;
 431:.\Generated_Source\PSoC4/UART_1.c ****             loc_rxBufferWrite = UART_1_rxBufferWrite;
 432:.\Generated_Source\PSoC4/UART_1.c **** 
 433:.\Generated_Source\PSoC4/UART_1.c ****             if( (UART_1_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 434:.\Generated_Source\PSoC4/UART_1.c ****             {
 435:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_rxBuffer[loc_rxBufferRead];
 436:.\Generated_Source\PSoC4/UART_1.c ****                 loc_rxBufferRead++;
 437:.\Generated_Source\PSoC4/UART_1.c **** 
 438:.\Generated_Source\PSoC4/UART_1.c ****                 if(loc_rxBufferRead >= UART_1_RXBUFFERSIZE)
 439:.\Generated_Source\PSoC4/UART_1.c ****                 {
 440:.\Generated_Source\PSoC4/UART_1.c ****                     loc_rxBufferRead = 0u;
 441:.\Generated_Source\PSoC4/UART_1.c ****                 }
 442:.\Generated_Source\PSoC4/UART_1.c ****                 /* Update the real pointer */
 443:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferRead = loc_rxBufferRead;
 444:.\Generated_Source\PSoC4/UART_1.c **** 
 445:.\Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_rxBufferLoopDetect != 0u )
 446:.\Generated_Source\PSoC4/UART_1.c ****                 {
 447:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxBufferLoopDetect = 0u;
 448:.\Generated_Source\PSoC4/UART_1.c ****                     #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) && \
 449:.\Generated_Source\PSoC4/UART_1.c ****                          (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 450:.\Generated_Source\PSoC4/UART_1.c ****                         /* When Hardware Flow Control selected - return RX mask */
 451:.\Generated_Source\PSoC4/UART_1.c ****                         #if( UART_1_HD_ENABLED )
 452:.\Generated_Source\PSoC4/UART_1.c ****                             if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 453:.\Generated_Source\PSoC4/UART_1.c ****                             {   /* In Half duplex mode return RX mask only in RX
 454:.\Generated_Source\PSoC4/UART_1.c ****                                 *  configuration set, otherwise
 455:.\Generated_Source\PSoC4/UART_1.c ****                                 *  mask will be returned in LoadRxConfig() API.
 456:.\Generated_Source\PSoC4/UART_1.c ****                                 */
 457:.\Generated_Source\PSoC4/UART_1.c ****                                 UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 458:.\Generated_Source\PSoC4/UART_1.c ****                             }
 459:.\Generated_Source\PSoC4/UART_1.c ****                         #else
 460:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 461:.\Generated_Source\PSoC4/UART_1.c ****                         #endif /* end UART_1_HD_ENABLED */
 462:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 463:.\Generated_Source\PSoC4/UART_1.c ****                 }
 464:.\Generated_Source\PSoC4/UART_1.c ****             }
 465:.\Generated_Source\PSoC4/UART_1.c ****             else
 466:.\Generated_Source\PSoC4/UART_1.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 467:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 468:.\Generated_Source\PSoC4/UART_1.c ****             }
 469:.\Generated_Source\PSoC4/UART_1.c **** 
 470:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Rx interrupt. */
 471:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 472:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableRxInt();
 473:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 474:.\Generated_Source\PSoC4/UART_1.c **** 
 475:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 476:.\Generated_Source\PSoC4/UART_1.c **** 
 477:.\Generated_Source\PSoC4/UART_1.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 478:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 372              		.loc 1 478 0
 373 0006 054A     		ldr	r2, .L22
 374 0008 FB1D     		add	r3, r7, #7
 375 000a 1278     		ldrb	r2, [r2]
 376 000c 1A70     		strb	r2, [r3]
 479:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 16


 480:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 481:.\Generated_Source\PSoC4/UART_1.c **** 
 482:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 377              		.loc 1 482 0
 378 000e FB1D     		add	r3, r7, #7
 379 0010 1B78     		ldrb	r3, [r3]
 483:.\Generated_Source\PSoC4/UART_1.c ****     }
 380              		.loc 1 483 0
 381 0012 181C     		mov	r0, r3
 382 0014 BD46     		mov	sp, r7
 383 0016 02B0     		add	sp, sp, #8
 384              		@ sp needed
 385 0018 80BD     		pop	{r7, pc}
 386              	.L23:
 387 001a C046     		.align	2
 388              	.L22:
 389 001c 43000F40 		.word	1074724931
 390              		.cfi_endproc
 391              	.LFE9:
 392              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 393              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 394              		.align	2
 395              		.global	UART_1_ReadRxStatus
 396              		.code	16
 397              		.thumb_func
 398              		.type	UART_1_ReadRxStatus, %function
 399              	UART_1_ReadRxStatus:
 400              	.LFB10:
 484:.\Generated_Source\PSoC4/UART_1.c **** 
 485:.\Generated_Source\PSoC4/UART_1.c **** 
 486:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 487:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 488:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 489:.\Generated_Source\PSoC4/UART_1.c ****     *
 490:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 491:.\Generated_Source\PSoC4/UART_1.c ****     *  Read the current state of the status register
 492:.\Generated_Source\PSoC4/UART_1.c ****     *  And detect software buffer overflow.
 493:.\Generated_Source\PSoC4/UART_1.c ****     *
 494:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 495:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 496:.\Generated_Source\PSoC4/UART_1.c ****     *
 497:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 498:.\Generated_Source\PSoC4/UART_1.c ****     *  Current state of the status register.
 499:.\Generated_Source\PSoC4/UART_1.c ****     *
 500:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 501:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 502:.\Generated_Source\PSoC4/UART_1.c ****     *   It set to one in RX interrupt when there isn?t free space in
 503:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 504:.\Generated_Source\PSoC4/UART_1.c ****     *   and cleared to zero by this API as an
 505:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 506:.\Generated_Source\PSoC4/UART_1.c ****     *   bits.
 507:.\Generated_Source\PSoC4/UART_1.c ****     *
 508:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 509:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 510:.\Generated_Source\PSoC4/UART_1.c ****     {
 401              		.loc 1 510 0
 402              		.cfi_startproc
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 17


 403 0000 80B5     		push	{r7, lr}
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 82B0     		sub	sp, sp, #8
 408              		.cfi_def_cfa_offset 16
 409 0004 00AF     		add	r7, sp, #0
 410              		.cfi_def_cfa_register 7
 511:.\Generated_Source\PSoC4/UART_1.c ****         uint8 status;
 512:.\Generated_Source\PSoC4/UART_1.c **** 
 513:.\Generated_Source\PSoC4/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 411              		.loc 1 513 0
 412 0006 064B     		ldr	r3, .L26
 413 0008 1B78     		ldrb	r3, [r3]
 414 000a D9B2     		uxtb	r1, r3
 415 000c FB1D     		add	r3, r7, #7
 416 000e 7F22     		mov	r2, #127
 417 0010 0A40     		and	r2, r1
 418 0012 1A70     		strb	r2, [r3]
 514:.\Generated_Source\PSoC4/UART_1.c **** 
 515:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 516:.\Generated_Source\PSoC4/UART_1.c ****             if( UART_1_rxBufferOverflow != 0u )
 517:.\Generated_Source\PSoC4/UART_1.c ****             {
 518:.\Generated_Source\PSoC4/UART_1.c ****                 status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 519:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferOverflow = 0u;
 520:.\Generated_Source\PSoC4/UART_1.c ****             }
 521:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* UART_1_RXBUFFERSIZE */
 522:.\Generated_Source\PSoC4/UART_1.c **** 
 523:.\Generated_Source\PSoC4/UART_1.c ****         return(status);
 419              		.loc 1 523 0
 420 0014 FB1D     		add	r3, r7, #7
 421 0016 1B78     		ldrb	r3, [r3]
 524:.\Generated_Source\PSoC4/UART_1.c ****     }
 422              		.loc 1 524 0
 423 0018 181C     		mov	r0, r3
 424 001a BD46     		mov	sp, r7
 425 001c 02B0     		add	sp, sp, #8
 426              		@ sp needed
 427 001e 80BD     		pop	{r7, pc}
 428              	.L27:
 429              		.align	2
 430              	.L26:
 431 0020 61000F40 		.word	1074724961
 432              		.cfi_endproc
 433              	.LFE10:
 434              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 435              		.section	.text.UART_1_GetChar,"ax",%progbits
 436              		.align	2
 437              		.global	UART_1_GetChar
 438              		.code	16
 439              		.thumb_func
 440              		.type	UART_1_GetChar, %function
 441              	UART_1_GetChar:
 442              	.LFB11:
 525:.\Generated_Source\PSoC4/UART_1.c **** 
 526:.\Generated_Source\PSoC4/UART_1.c **** 
 527:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 18


 528:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetChar
 529:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 530:.\Generated_Source\PSoC4/UART_1.c ****     *
 531:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 532:.\Generated_Source\PSoC4/UART_1.c ****     *  Reads UART RX buffer immediately, if data is not available or an error
 533:.\Generated_Source\PSoC4/UART_1.c ****     *  condition exists, zero is returned; otherwise, character is read and
 534:.\Generated_Source\PSoC4/UART_1.c ****     *  returned.
 535:.\Generated_Source\PSoC4/UART_1.c ****     *
 536:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 537:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 538:.\Generated_Source\PSoC4/UART_1.c ****     *
 539:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 540:.\Generated_Source\PSoC4/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 541:.\Generated_Source\PSoC4/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 542:.\Generated_Source\PSoC4/UART_1.c ****     *
 543:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 544:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 545:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 546:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 547:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 548:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 549:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - creared if loop condition was detected
 550:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 551:.\Generated_Source\PSoC4/UART_1.c ****     *
 552:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 553:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 554:.\Generated_Source\PSoC4/UART_1.c ****     *
 555:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 556:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetChar(void) 
 557:.\Generated_Source\PSoC4/UART_1.c ****     {
 443              		.loc 1 557 0
 444              		.cfi_startproc
 445 0000 80B5     		push	{r7, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 7, -8
 448              		.cfi_offset 14, -4
 449 0002 82B0     		sub	sp, sp, #8
 450              		.cfi_def_cfa_offset 16
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 558:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData = 0u;
 453              		.loc 1 558 0
 454 0006 FB1D     		add	r3, r7, #7
 455 0008 0022     		mov	r2, #0
 456 000a 1A70     		strb	r2, [r3]
 559:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxStatus;
 560:.\Generated_Source\PSoC4/UART_1.c **** 
 561:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 562:.\Generated_Source\PSoC4/UART_1.c ****             uint8 loc_rxBufferRead;
 563:.\Generated_Source\PSoC4/UART_1.c ****             uint8 loc_rxBufferWrite;
 564:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 565:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Rx interrupt. */
 566:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 567:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableRxInt();
 568:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* UART_1_RX_INTERRUPT_ENABLED */
 569:.\Generated_Source\PSoC4/UART_1.c ****             loc_rxBufferRead = UART_1_rxBufferRead;
 570:.\Generated_Source\PSoC4/UART_1.c ****             loc_rxBufferWrite = UART_1_rxBufferWrite;
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 19


 571:.\Generated_Source\PSoC4/UART_1.c **** 
 572:.\Generated_Source\PSoC4/UART_1.c ****             if( (UART_1_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 573:.\Generated_Source\PSoC4/UART_1.c ****             {
 574:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_rxBuffer[loc_rxBufferRead];
 575:.\Generated_Source\PSoC4/UART_1.c ****                 loc_rxBufferRead++;
 576:.\Generated_Source\PSoC4/UART_1.c ****                 if(loc_rxBufferRead >= UART_1_RXBUFFERSIZE)
 577:.\Generated_Source\PSoC4/UART_1.c ****                 {
 578:.\Generated_Source\PSoC4/UART_1.c ****                     loc_rxBufferRead = 0u;
 579:.\Generated_Source\PSoC4/UART_1.c ****                 }
 580:.\Generated_Source\PSoC4/UART_1.c ****                 /* Update the real pointer */
 581:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferRead = loc_rxBufferRead;
 582:.\Generated_Source\PSoC4/UART_1.c **** 
 583:.\Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_rxBufferLoopDetect > 0u )
 584:.\Generated_Source\PSoC4/UART_1.c ****                 {
 585:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxBufferLoopDetect = 0u;
 586:.\Generated_Source\PSoC4/UART_1.c ****                     #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 587:.\Generated_Source\PSoC4/UART_1.c ****                         /* When Hardware Flow Control selected - return RX mask */
 588:.\Generated_Source\PSoC4/UART_1.c ****                         #if( UART_1_HD_ENABLED )
 589:.\Generated_Source\PSoC4/UART_1.c ****                             if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 590:.\Generated_Source\PSoC4/UART_1.c ****                             {   /* In Half duplex mode return RX mask only if
 591:.\Generated_Source\PSoC4/UART_1.c ****                                 *  RX configuration set, otherwise
 592:.\Generated_Source\PSoC4/UART_1.c ****                                 *  mask will be returned in LoadRxConfig() API.
 593:.\Generated_Source\PSoC4/UART_1.c ****                                 */
 594:.\Generated_Source\PSoC4/UART_1.c ****                                 UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 595:.\Generated_Source\PSoC4/UART_1.c ****                             }
 596:.\Generated_Source\PSoC4/UART_1.c ****                         #else
 597:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 598:.\Generated_Source\PSoC4/UART_1.c ****                         #endif /* end UART_1_HD_ENABLED */
 599:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 600:.\Generated_Source\PSoC4/UART_1.c ****                 }
 601:.\Generated_Source\PSoC4/UART_1.c **** 
 602:.\Generated_Source\PSoC4/UART_1.c ****             }
 603:.\Generated_Source\PSoC4/UART_1.c ****             else
 604:.\Generated_Source\PSoC4/UART_1.c ****             {   rxStatus = UART_1_RXSTATUS_REG;
 605:.\Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 606:.\Generated_Source\PSoC4/UART_1.c ****                 {   /* Read received data from FIFO*/
 607:.\Generated_Source\PSoC4/UART_1.c ****                     rxData = UART_1_RXDATA_REG;
 608:.\Generated_Source\PSoC4/UART_1.c ****                     /*Check status on error*/
 609:.\Generated_Source\PSoC4/UART_1.c ****                     if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 610:.\Generated_Source\PSoC4/UART_1.c ****                                    UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 611:.\Generated_Source\PSoC4/UART_1.c ****                     {
 612:.\Generated_Source\PSoC4/UART_1.c ****                         rxData = 0u;
 613:.\Generated_Source\PSoC4/UART_1.c ****                     }
 614:.\Generated_Source\PSoC4/UART_1.c ****                 }
 615:.\Generated_Source\PSoC4/UART_1.c ****             }
 616:.\Generated_Source\PSoC4/UART_1.c **** 
 617:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Rx interrupt. */
 618:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 619:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableRxInt();
 620:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* UART_1_RX_INTERRUPT_ENABLED */
 621:.\Generated_Source\PSoC4/UART_1.c **** 
 622:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 623:.\Generated_Source\PSoC4/UART_1.c **** 
 624:.\Generated_Source\PSoC4/UART_1.c ****             rxStatus =UART_1_RXSTATUS_REG;
 457              		.loc 1 624 0
 458 000c 0D4A     		ldr	r2, .L31
 459 000e BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 20


 460 0010 1278     		ldrb	r2, [r2]
 461 0012 1A70     		strb	r2, [r3]
 625:.\Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 462              		.loc 1 625 0
 463 0014 BB1D     		add	r3, r7, #6
 464 0016 1A78     		ldrb	r2, [r3]
 465 0018 2023     		mov	r3, #32
 466 001a 1340     		and	r3, r2
 467 001c 0BD0     		beq	.L29
 626:.\Generated_Source\PSoC4/UART_1.c ****             {   /* Read received data from FIFO*/
 627:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 468              		.loc 1 627 0
 469 001e 0A4A     		ldr	r2, .L31+4
 470 0020 FB1D     		add	r3, r7, #7
 471 0022 1278     		ldrb	r2, [r2]
 472 0024 1A70     		strb	r2, [r3]
 628:.\Generated_Source\PSoC4/UART_1.c ****                 /*Check status on error*/
 629:.\Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 630:.\Generated_Source\PSoC4/UART_1.c ****                                UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 473              		.loc 1 630 0
 474 0026 BB1D     		add	r3, r7, #6
 475 0028 1A78     		ldrb	r2, [r3]
 476 002a 1E23     		mov	r3, #30
 477 002c 1340     		and	r3, r2
 629:.\Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 478              		.loc 1 629 0
 479 002e 02D0     		beq	.L29
 631:.\Generated_Source\PSoC4/UART_1.c ****                 {
 632:.\Generated_Source\PSoC4/UART_1.c ****                     rxData = 0u;
 480              		.loc 1 632 0
 481 0030 FB1D     		add	r3, r7, #7
 482 0032 0022     		mov	r2, #0
 483 0034 1A70     		strb	r2, [r3]
 484              	.L29:
 633:.\Generated_Source\PSoC4/UART_1.c ****                 }
 634:.\Generated_Source\PSoC4/UART_1.c ****             }
 635:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 636:.\Generated_Source\PSoC4/UART_1.c **** 
 637:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 485              		.loc 1 637 0
 486 0036 FB1D     		add	r3, r7, #7
 487 0038 1B78     		ldrb	r3, [r3]
 638:.\Generated_Source\PSoC4/UART_1.c ****     }
 488              		.loc 1 638 0
 489 003a 181C     		mov	r0, r3
 490 003c BD46     		mov	sp, r7
 491 003e 02B0     		add	sp, sp, #8
 492              		@ sp needed
 493 0040 80BD     		pop	{r7, pc}
 494              	.L32:
 495 0042 C046     		.align	2
 496              	.L31:
 497 0044 61000F40 		.word	1074724961
 498 0048 43000F40 		.word	1074724931
 499              		.cfi_endproc
 500              	.LFE11:
 501              		.size	UART_1_GetChar, .-UART_1_GetChar
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 21


 502              		.section	.text.UART_1_GetByte,"ax",%progbits
 503              		.align	2
 504              		.global	UART_1_GetByte
 505              		.code	16
 506              		.thumb_func
 507              		.type	UART_1_GetByte, %function
 508              	UART_1_GetByte:
 509              	.LFB12:
 639:.\Generated_Source\PSoC4/UART_1.c **** 
 640:.\Generated_Source\PSoC4/UART_1.c **** 
 641:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 642:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetByte
 643:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 644:.\Generated_Source\PSoC4/UART_1.c ****     *
 645:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 646:.\Generated_Source\PSoC4/UART_1.c ****     *  Grab the next available byte of data from the recieve FIFO
 647:.\Generated_Source\PSoC4/UART_1.c ****     *
 648:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 649:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 650:.\Generated_Source\PSoC4/UART_1.c ****     *
 651:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 652:.\Generated_Source\PSoC4/UART_1.c ****     *  MSB contains Status Register and LSB contains UART RX data
 653:.\Generated_Source\PSoC4/UART_1.c ****     *
 654:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 655:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 656:.\Generated_Source\PSoC4/UART_1.c ****     *
 657:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 658:.\Generated_Source\PSoC4/UART_1.c ****     uint16 UART_1_GetByte(void) 
 659:.\Generated_Source\PSoC4/UART_1.c ****     {
 510              		.loc 1 659 0
 511              		.cfi_startproc
 512 0000 98B5     		push	{r3, r4, r7, lr}
 513              		.cfi_def_cfa_offset 16
 514              		.cfi_offset 3, -16
 515              		.cfi_offset 4, -12
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 660:.\Generated_Source\PSoC4/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 520              		.loc 1 660 0
 521 0004 FFF7FEFF 		bl	UART_1_ReadRxStatus
 522 0008 031C     		mov	r3, r0
 523 000a 1B02     		lsl	r3, r3, #8
 524 000c 9CB2     		uxth	r4, r3
 525 000e FFF7FEFF 		bl	UART_1_ReadRxData
 526 0012 031C     		mov	r3, r0
 527 0014 221C     		add	r2, r4, #0
 528 0016 1343     		orr	r3, r2
 529 0018 9BB2     		uxth	r3, r3
 530 001a 9BB2     		uxth	r3, r3
 661:.\Generated_Source\PSoC4/UART_1.c ****     }
 531              		.loc 1 661 0
 532 001c 181C     		mov	r0, r3
 533 001e BD46     		mov	sp, r7
 534              		@ sp needed
 535 0020 98BD     		pop	{r3, r4, r7, pc}
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 22


 536              		.cfi_endproc
 537              	.LFE12:
 538              		.size	UART_1_GetByte, .-UART_1_GetByte
 539 0022 C046     		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 540              		.align	2
 541              		.global	UART_1_GetRxBufferSize
 542              		.code	16
 543              		.thumb_func
 544              		.type	UART_1_GetRxBufferSize, %function
 545              	UART_1_GetRxBufferSize:
 546              	.LFB13:
 662:.\Generated_Source\PSoC4/UART_1.c **** 
 663:.\Generated_Source\PSoC4/UART_1.c **** 
 664:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 665:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 666:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 667:.\Generated_Source\PSoC4/UART_1.c ****     *
 668:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 669:.\Generated_Source\PSoC4/UART_1.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 670:.\Generated_Source\PSoC4/UART_1.c ****     *  bytes
 671:.\Generated_Source\PSoC4/UART_1.c ****     *
 672:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 673:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 674:.\Generated_Source\PSoC4/UART_1.c ****     *
 675:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 676:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8: Integer count of the number of bytes left
 677:.\Generated_Source\PSoC4/UART_1.c ****     *  in the RX buffer
 678:.\Generated_Source\PSoC4/UART_1.c ****     *
 679:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 680:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 681:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 682:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 683:.\Generated_Source\PSoC4/UART_1.c ****     *
 684:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 685:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 686:.\Generated_Source\PSoC4/UART_1.c ****     *
 687:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 688:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 689:.\Generated_Source\PSoC4/UART_1.c ****     *
 690:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 692:.\Generated_Source\PSoC4/UART_1.c ****                                                             
 693:.\Generated_Source\PSoC4/UART_1.c ****     {
 547              		.loc 1 693 0
 548              		.cfi_startproc
 549 0000 80B5     		push	{r7, lr}
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 7, -8
 552              		.cfi_offset 14, -4
 553 0002 82B0     		sub	sp, sp, #8
 554              		.cfi_def_cfa_offset 16
 555 0004 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 694:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
 695:.\Generated_Source\PSoC4/UART_1.c **** 
 696:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 697:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 23


 698:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Rx interrupt. */
 699:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 700:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 701:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableRxInt();
 702:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* UART_1_RX_INTERRUPT_ENABLED */
 703:.\Generated_Source\PSoC4/UART_1.c **** 
 704:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 705:.\Generated_Source\PSoC4/UART_1.c ****             {
 706:.\Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_rxBufferLoopDetect > 0u)
 707:.\Generated_Source\PSoC4/UART_1.c ****                 {
 708:.\Generated_Source\PSoC4/UART_1.c ****                     size = UART_1_RXBUFFERSIZE;
 709:.\Generated_Source\PSoC4/UART_1.c ****                 }
 710:.\Generated_Source\PSoC4/UART_1.c ****                 else
 711:.\Generated_Source\PSoC4/UART_1.c ****                 {
 712:.\Generated_Source\PSoC4/UART_1.c ****                     size = 0u;
 713:.\Generated_Source\PSoC4/UART_1.c ****                 }
 714:.\Generated_Source\PSoC4/UART_1.c ****             }
 715:.\Generated_Source\PSoC4/UART_1.c ****             else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 716:.\Generated_Source\PSoC4/UART_1.c ****             {
 717:.\Generated_Source\PSoC4/UART_1.c ****                 size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 718:.\Generated_Source\PSoC4/UART_1.c ****             }
 719:.\Generated_Source\PSoC4/UART_1.c ****             else
 720:.\Generated_Source\PSoC4/UART_1.c ****             {
 721:.\Generated_Source\PSoC4/UART_1.c ****                 size = (UART_1_RXBUFFERSIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 722:.\Generated_Source\PSoC4/UART_1.c ****             }
 723:.\Generated_Source\PSoC4/UART_1.c **** 
 724:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Rx interrupt. */
 725:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 726:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableRxInt();
 727:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 728:.\Generated_Source\PSoC4/UART_1.c **** 
 729:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 730:.\Generated_Source\PSoC4/UART_1.c **** 
 731:.\Generated_Source\PSoC4/UART_1.c ****             /* We can only know if there is data in the fifo. */
 732:.\Generated_Source\PSoC4/UART_1.c ****             size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 557              		.loc 1 732 0
 558 0006 094B     		ldr	r3, .L39
 559 0008 1B78     		ldrb	r3, [r3]
 560 000a DBB2     		uxtb	r3, r3
 561 000c 1A1C     		mov	r2, r3
 562 000e 2023     		mov	r3, #32
 563 0010 1340     		and	r3, r2
 564 0012 01D0     		beq	.L36
 565              		.loc 1 732 0 is_stmt 0 discriminator 1
 566 0014 0123     		mov	r3, #1
 567 0016 00E0     		b	.L37
 568              	.L36:
 569              		.loc 1 732 0 discriminator 2
 570 0018 0023     		mov	r3, #0
 571              	.L37:
 572              		.loc 1 732 0 discriminator 3
 573 001a FA1D     		add	r2, r7, #7
 574 001c 1370     		strb	r3, [r2]
 733:.\Generated_Source\PSoC4/UART_1.c **** 
 734:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 735:.\Generated_Source\PSoC4/UART_1.c **** 
 736:.\Generated_Source\PSoC4/UART_1.c ****         return(size);
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 24


 575              		.loc 1 736 0 is_stmt 1 discriminator 3
 576 001e FB1D     		add	r3, r7, #7
 577 0020 1B78     		ldrb	r3, [r3]
 737:.\Generated_Source\PSoC4/UART_1.c ****     }
 578              		.loc 1 737 0 discriminator 3
 579 0022 181C     		mov	r0, r3
 580 0024 BD46     		mov	sp, r7
 581 0026 02B0     		add	sp, sp, #8
 582              		@ sp needed
 583 0028 80BD     		pop	{r7, pc}
 584              	.L40:
 585 002a C046     		.align	2
 586              	.L39:
 587 002c 61000F40 		.word	1074724961
 588              		.cfi_endproc
 589              	.LFE13:
 590              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 591              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 592              		.align	2
 593              		.global	UART_1_ClearRxBuffer
 594              		.code	16
 595              		.thumb_func
 596              		.type	UART_1_ClearRxBuffer, %function
 597              	UART_1_ClearRxBuffer:
 598              	.LFB14:
 738:.\Generated_Source\PSoC4/UART_1.c **** 
 739:.\Generated_Source\PSoC4/UART_1.c **** 
 740:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 742:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC4/UART_1.c ****     *
 744:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 745:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears the RX RAM buffer by setting the read and write pointers both to zero.
 746:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears hardware RX FIFO.
 747:.\Generated_Source\PSoC4/UART_1.c ****     *
 748:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 749:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 750:.\Generated_Source\PSoC4/UART_1.c ****     *
 751:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 752:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 753:.\Generated_Source\PSoC4/UART_1.c ****     *
 754:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 755:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 756:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 757:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 758:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 759:.\Generated_Source\PSoC4/UART_1.c ****     *
 760:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 761:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 762:.\Generated_Source\PSoC4/UART_1.c ****     *
 763:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 764:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 765:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 766:.\Generated_Source\PSoC4/UART_1.c ****     *  have remained in the RAM.
 767:.\Generated_Source\PSoC4/UART_1.c ****     *
 768:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
 769:.\Generated_Source\PSoC4/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 25


 770:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 772:.\Generated_Source\PSoC4/UART_1.c ****     {
 599              		.loc 1 772 0
 600              		.cfi_startproc
 601 0000 90B5     		push	{r4, r7, lr}
 602              		.cfi_def_cfa_offset 12
 603              		.cfi_offset 4, -12
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 83B0     		sub	sp, sp, #12
 607              		.cfi_def_cfa_offset 24
 608 0004 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 773:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
 774:.\Generated_Source\PSoC4/UART_1.c **** 
 775:.\Generated_Source\PSoC4/UART_1.c ****         /* clear the HW FIFO */
 776:.\Generated_Source\PSoC4/UART_1.c ****         /* Enter critical section */
 777:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 610              		.loc 1 777 0
 611 0006 FC1D     		add	r4, r7, #7
 612 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 613 000c 031C     		mov	r3, r0
 614 000e 2370     		strb	r3, [r4]
 778:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |=  UART_1_RX_FIFO_CLR;
 615              		.loc 1 778 0
 616 0010 0B4B     		ldr	r3, .L42
 617 0012 0B4A     		ldr	r2, .L42
 618 0014 1278     		ldrb	r2, [r2]
 619 0016 D2B2     		uxtb	r2, r2
 620 0018 0121     		mov	r1, #1
 621 001a 0A43     		orr	r2, r1
 622 001c D2B2     		uxtb	r2, r2
 623 001e 1A70     		strb	r2, [r3]
 779:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8)~UART_1_RX_FIFO_CLR;
 624              		.loc 1 779 0
 625 0020 074B     		ldr	r3, .L42
 626 0022 074A     		ldr	r2, .L42
 627 0024 1278     		ldrb	r2, [r2]
 628 0026 D2B2     		uxtb	r2, r2
 629 0028 0121     		mov	r1, #1
 630 002a 8A43     		bic	r2, r1
 631 002c D2B2     		uxtb	r2, r2
 632 002e 1A70     		strb	r2, [r3]
 780:.\Generated_Source\PSoC4/UART_1.c ****         /* Exit critical section */
 781:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 633              		.loc 1 781 0
 634 0030 FB1D     		add	r3, r7, #7
 635 0032 1B78     		ldrb	r3, [r3]
 636 0034 181C     		mov	r0, r3
 637 0036 FFF7FEFF 		bl	CyExitCriticalSection
 782:.\Generated_Source\PSoC4/UART_1.c **** 
 783:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH)
 784:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Rx interrupt. */
 785:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 786:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 787:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableRxInt();
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 26


 788:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 789:.\Generated_Source\PSoC4/UART_1.c **** 
 790:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = 0u;
 791:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferWrite = 0u;
 792:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferLoopDetect = 0u;
 793:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 794:.\Generated_Source\PSoC4/UART_1.c **** 
 795:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Rx interrupt. */
 796:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_RX_INTERRUPT_ENABLED)
 797:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableRxInt();
 798:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_RX_INTERRUPT_ENABLED */
 799:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH */
 800:.\Generated_Source\PSoC4/UART_1.c **** 
 801:.\Generated_Source\PSoC4/UART_1.c ****     }
 638              		.loc 1 801 0
 639 003a BD46     		mov	sp, r7
 640 003c 03B0     		add	sp, sp, #12
 641              		@ sp needed
 642 003e 90BD     		pop	{r4, r7, pc}
 643              	.L43:
 644              		.align	2
 645              	.L42:
 646 0040 93000F40 		.word	1074725011
 647              		.cfi_endproc
 648              	.LFE14:
 649              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 650              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 651              		.align	2
 652              		.global	UART_1_SetRxAddressMode
 653              		.code	16
 654              		.thumb_func
 655              		.type	UART_1_SetRxAddressMode, %function
 656              	UART_1_SetRxAddressMode:
 657              	.LFB15:
 802:.\Generated_Source\PSoC4/UART_1.c **** 
 803:.\Generated_Source\PSoC4/UART_1.c **** 
 804:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 805:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 806:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 807:.\Generated_Source\PSoC4/UART_1.c ****     *
 808:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 809:.\Generated_Source\PSoC4/UART_1.c ****     *  Set the receive addressing mode
 810:.\Generated_Source\PSoC4/UART_1.c ****     *
 811:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 812:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 813:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 814:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 815:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 816:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 817:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 818:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 819:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 820:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 821:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 822:.\Generated_Source\PSoC4/UART_1.c ****     *
 823:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 824:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 27


 825:.\Generated_Source\PSoC4/UART_1.c ****     *
 826:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 827:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 828:.\Generated_Source\PSoC4/UART_1.c ****     *   the farther usage in RX ISR.
 829:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 830:.\Generated_Source\PSoC4/UART_1.c ****     *
 831:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 832:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 833:.\Generated_Source\PSoC4/UART_1.c ****                                                         
 834:.\Generated_Source\PSoC4/UART_1.c ****     {
 658              		.loc 1 834 0
 659              		.cfi_startproc
 660 0000 80B5     		push	{r7, lr}
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 7, -8
 663              		.cfi_offset 14, -4
 664 0002 82B0     		sub	sp, sp, #8
 665              		.cfi_def_cfa_offset 16
 666 0004 00AF     		add	r7, sp, #0
 667              		.cfi_def_cfa_register 7
 668 0006 021C     		mov	r2, r0
 669 0008 FB1D     		add	r3, r7, #7
 670 000a 1A70     		strb	r2, [r3]
 835:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 836:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 837:.\Generated_Source\PSoC4/UART_1.c ****                 if(addressMode != 0u) { }     /* release compiler warning */
 838:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 839:.\Generated_Source\PSoC4/UART_1.c ****                 uint8 tmpCtrl;
 840:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 841:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 842:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 843:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 844:.\Generated_Source\PSoC4/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 845:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 846:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 847:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 848:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 849:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 850:.\Generated_Source\PSoC4/UART_1.c ****             if(addressMode != 0u) { }     /* release compiler warning */
 851:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 852:.\Generated_Source\PSoC4/UART_1.c ****     }
 671              		.loc 1 852 0
 672 000c BD46     		mov	sp, r7
 673 000e 02B0     		add	sp, sp, #8
 674              		@ sp needed
 675 0010 80BD     		pop	{r7, pc}
 676              		.cfi_endproc
 677              	.LFE15:
 678              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 679 0012 C046     		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 680              		.align	2
 681              		.global	UART_1_SetRxAddress1
 682              		.code	16
 683              		.thumb_func
 684              		.type	UART_1_SetRxAddress1, %function
 685              	UART_1_SetRxAddress1:
 686              	.LFB16:
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 28


 853:.\Generated_Source\PSoC4/UART_1.c **** 
 854:.\Generated_Source\PSoC4/UART_1.c **** 
 855:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 856:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 857:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 858:.\Generated_Source\PSoC4/UART_1.c ****     *
 859:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 860:.\Generated_Source\PSoC4/UART_1.c ****     *  Set the first hardware address compare value
 861:.\Generated_Source\PSoC4/UART_1.c ****     *
 862:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 863:.\Generated_Source\PSoC4/UART_1.c ****     *  address
 864:.\Generated_Source\PSoC4/UART_1.c ****     *
 865:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 866:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 867:.\Generated_Source\PSoC4/UART_1.c ****     *
 868:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 869:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 870:.\Generated_Source\PSoC4/UART_1.c **** 
 871:.\Generated_Source\PSoC4/UART_1.c ****     {
 687              		.loc 1 871 0
 688              		.cfi_startproc
 689 0000 80B5     		push	{r7, lr}
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 82B0     		sub	sp, sp, #8
 694              		.cfi_def_cfa_offset 16
 695 0004 00AF     		add	r7, sp, #0
 696              		.cfi_def_cfa_register 7
 697 0006 021C     		mov	r2, r0
 698 0008 FB1D     		add	r3, r7, #7
 699 000a 1A70     		strb	r2, [r3]
 872:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 700              		.loc 1 872 0
 701 000c 034B     		ldr	r3, .L46
 702 000e FA1D     		add	r2, r7, #7
 703 0010 1278     		ldrb	r2, [r2]
 704 0012 1A70     		strb	r2, [r3]
 873:.\Generated_Source\PSoC4/UART_1.c ****     }
 705              		.loc 1 873 0
 706 0014 BD46     		mov	sp, r7
 707 0016 02B0     		add	sp, sp, #8
 708              		@ sp needed
 709 0018 80BD     		pop	{r7, pc}
 710              	.L47:
 711 001a C046     		.align	2
 712              	.L46:
 713 001c 23000F40 		.word	1074724899
 714              		.cfi_endproc
 715              	.LFE16:
 716              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 717              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 718              		.align	2
 719              		.global	UART_1_SetRxAddress2
 720              		.code	16
 721              		.thumb_func
 722              		.type	UART_1_SetRxAddress2, %function
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 29


 723              	UART_1_SetRxAddress2:
 724              	.LFB17:
 874:.\Generated_Source\PSoC4/UART_1.c **** 
 875:.\Generated_Source\PSoC4/UART_1.c **** 
 876:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 877:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 878:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 879:.\Generated_Source\PSoC4/UART_1.c ****     *
 880:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 881:.\Generated_Source\PSoC4/UART_1.c ****     *  Set the second hardware address compare value
 882:.\Generated_Source\PSoC4/UART_1.c ****     *
 883:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 884:.\Generated_Source\PSoC4/UART_1.c ****     *  address
 885:.\Generated_Source\PSoC4/UART_1.c ****     *
 886:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 887:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 888:.\Generated_Source\PSoC4/UART_1.c ****     *
 889:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 890:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 891:.\Generated_Source\PSoC4/UART_1.c ****     {
 725              		.loc 1 891 0
 726              		.cfi_startproc
 727 0000 80B5     		push	{r7, lr}
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 7, -8
 730              		.cfi_offset 14, -4
 731 0002 82B0     		sub	sp, sp, #8
 732              		.cfi_def_cfa_offset 16
 733 0004 00AF     		add	r7, sp, #0
 734              		.cfi_def_cfa_register 7
 735 0006 021C     		mov	r2, r0
 736 0008 FB1D     		add	r3, r7, #7
 737 000a 1A70     		strb	r2, [r3]
 892:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 738              		.loc 1 892 0
 739 000c 034B     		ldr	r3, .L49
 740 000e FA1D     		add	r2, r7, #7
 741 0010 1278     		ldrb	r2, [r2]
 742 0012 1A70     		strb	r2, [r3]
 893:.\Generated_Source\PSoC4/UART_1.c ****     }
 743              		.loc 1 893 0
 744 0014 BD46     		mov	sp, r7
 745 0016 02B0     		add	sp, sp, #8
 746              		@ sp needed
 747 0018 80BD     		pop	{r7, pc}
 748              	.L50:
 749 001a C046     		.align	2
 750              	.L49:
 751 001c 33000F40 		.word	1074724915
 752              		.cfi_endproc
 753              	.LFE17:
 754              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 755              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 756              		.align	2
 757              		.global	UART_1_SetTxInterruptMode
 758              		.code	16
 759              		.thumb_func
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 30


 760              		.type	UART_1_SetTxInterruptMode, %function
 761              	UART_1_SetTxInterruptMode:
 762              	.LFB18:
 894:.\Generated_Source\PSoC4/UART_1.c **** 
 895:.\Generated_Source\PSoC4/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 896:.\Generated_Source\PSoC4/UART_1.c **** 
 897:.\Generated_Source\PSoC4/UART_1.c **** 
 898:.\Generated_Source\PSoC4/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 899:.\Generated_Source\PSoC4/UART_1.c **** 
 900:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_INTERRUPT_ENABLED)
 901:.\Generated_Source\PSoC4/UART_1.c **** 
 902:.\Generated_Source\PSoC4/UART_1.c ****         /*******************************************************************************
 903:.\Generated_Source\PSoC4/UART_1.c ****         * Function Name: UART_1_EnableTxInt
 904:.\Generated_Source\PSoC4/UART_1.c ****         ********************************************************************************
 905:.\Generated_Source\PSoC4/UART_1.c ****         *
 906:.\Generated_Source\PSoC4/UART_1.c ****         * Summary:
 907:.\Generated_Source\PSoC4/UART_1.c ****         *  Enable TX interrupt generation
 908:.\Generated_Source\PSoC4/UART_1.c ****         *
 909:.\Generated_Source\PSoC4/UART_1.c ****         * Parameters:
 910:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 911:.\Generated_Source\PSoC4/UART_1.c ****         *
 912:.\Generated_Source\PSoC4/UART_1.c ****         * Return:
 913:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 914:.\Generated_Source\PSoC4/UART_1.c ****         *
 915:.\Generated_Source\PSoC4/UART_1.c ****         * Theory:
 916:.\Generated_Source\PSoC4/UART_1.c ****         *  Enable the interrupt output -or- the interrupt component itself
 917:.\Generated_Source\PSoC4/UART_1.c ****         *
 918:.\Generated_Source\PSoC4/UART_1.c ****         *******************************************************************************/
 919:.\Generated_Source\PSoC4/UART_1.c ****         void UART_1_EnableTxInt(void) 
 920:.\Generated_Source\PSoC4/UART_1.c ****         {
 921:.\Generated_Source\PSoC4/UART_1.c ****             CyIntEnable(UART_1_TX_VECT_NUM);
 922:.\Generated_Source\PSoC4/UART_1.c ****         }
 923:.\Generated_Source\PSoC4/UART_1.c **** 
 924:.\Generated_Source\PSoC4/UART_1.c **** 
 925:.\Generated_Source\PSoC4/UART_1.c ****         /*******************************************************************************
 926:.\Generated_Source\PSoC4/UART_1.c ****         * Function Name: UART_1_DisableTxInt
 927:.\Generated_Source\PSoC4/UART_1.c ****         ********************************************************************************
 928:.\Generated_Source\PSoC4/UART_1.c ****         *
 929:.\Generated_Source\PSoC4/UART_1.c ****         * Summary:
 930:.\Generated_Source\PSoC4/UART_1.c ****         *  Disable TX interrupt generation
 931:.\Generated_Source\PSoC4/UART_1.c ****         *
 932:.\Generated_Source\PSoC4/UART_1.c ****         * Parameters:
 933:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 934:.\Generated_Source\PSoC4/UART_1.c ****         *
 935:.\Generated_Source\PSoC4/UART_1.c ****         * Return:
 936:.\Generated_Source\PSoC4/UART_1.c ****         *  None.
 937:.\Generated_Source\PSoC4/UART_1.c ****         *
 938:.\Generated_Source\PSoC4/UART_1.c ****         * Theory:
 939:.\Generated_Source\PSoC4/UART_1.c ****         *  Disable the interrupt output -or- the interrupt component itself
 940:.\Generated_Source\PSoC4/UART_1.c ****         *
 941:.\Generated_Source\PSoC4/UART_1.c ****         *******************************************************************************/
 942:.\Generated_Source\PSoC4/UART_1.c ****         void UART_1_DisableTxInt(void) 
 943:.\Generated_Source\PSoC4/UART_1.c ****         {
 944:.\Generated_Source\PSoC4/UART_1.c ****             CyIntDisable(UART_1_TX_VECT_NUM);
 945:.\Generated_Source\PSoC4/UART_1.c ****         }
 946:.\Generated_Source\PSoC4/UART_1.c **** 
 947:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 31


 948:.\Generated_Source\PSoC4/UART_1.c **** 
 949:.\Generated_Source\PSoC4/UART_1.c **** 
 950:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 951:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 952:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 953:.\Generated_Source\PSoC4/UART_1.c ****     *
 954:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 955:.\Generated_Source\PSoC4/UART_1.c ****     *  Configure which status bits trigger an interrupt event
 956:.\Generated_Source\PSoC4/UART_1.c ****     *
 957:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 958:.\Generated_Source\PSoC4/UART_1.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 959:.\Generated_Source\PSoC4/UART_1.c ****     *          the header file)
 960:.\Generated_Source\PSoC4/UART_1.c ****     *
 961:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 962:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 963:.\Generated_Source\PSoC4/UART_1.c ****     *
 964:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 965:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 966:.\Generated_Source\PSoC4/UART_1.c ****     *
 967:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 968:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 969:.\Generated_Source\PSoC4/UART_1.c ****     {
 763              		.loc 1 969 0
 764              		.cfi_startproc
 765 0000 80B5     		push	{r7, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 82B0     		sub	sp, sp, #8
 770              		.cfi_def_cfa_offset 16
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 773 0006 021C     		mov	r2, r0
 774 0008 FB1D     		add	r3, r7, #7
 775 000a 1A70     		strb	r2, [r3]
 970:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 776              		.loc 1 970 0
 777 000c 034B     		ldr	r3, .L52
 778 000e FA1D     		add	r2, r7, #7
 779 0010 1278     		ldrb	r2, [r2]
 780 0012 1A70     		strb	r2, [r3]
 971:.\Generated_Source\PSoC4/UART_1.c ****     }
 781              		.loc 1 971 0
 782 0014 BD46     		mov	sp, r7
 783 0016 02B0     		add	sp, sp, #8
 784              		@ sp needed
 785 0018 80BD     		pop	{r7, pc}
 786              	.L53:
 787 001a C046     		.align	2
 788              	.L52:
 789 001c 82000F40 		.word	1074724994
 790              		.cfi_endproc
 791              	.LFE18:
 792              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 793              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 794              		.align	2
 795              		.global	UART_1_WriteTxData
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 32


 796              		.code	16
 797              		.thumb_func
 798              		.type	UART_1_WriteTxData, %function
 799              	UART_1_WriteTxData:
 800              	.LFB19:
 972:.\Generated_Source\PSoC4/UART_1.c **** 
 973:.\Generated_Source\PSoC4/UART_1.c **** 
 974:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 975:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_WriteTxData
 976:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 977:.\Generated_Source\PSoC4/UART_1.c ****     *
 978:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 979:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the
 980:.\Generated_Source\PSoC4/UART_1.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room
 981:.\Generated_Source\PSoC4/UART_1.c ****     *  or status. It is up to the user to separately check status.
 982:.\Generated_Source\PSoC4/UART_1.c ****     *
 983:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 984:.\Generated_Source\PSoC4/UART_1.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 985:.\Generated_Source\PSoC4/UART_1.c ****     *
 986:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 987:.\Generated_Source\PSoC4/UART_1.c ****     * void
 988:.\Generated_Source\PSoC4/UART_1.c ****     *
 989:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 990:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 991:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 992:.\Generated_Source\PSoC4/UART_1.c ****     *    incremented after each byte saved to buffer.
 993:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 994:.\Generated_Source\PSoC4/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 995:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 996:.\Generated_Source\PSoC4/UART_1.c ****     *    initialized.
 997:.\Generated_Source\PSoC4/UART_1.c ****     *
 998:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 999:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1000:.\Generated_Source\PSoC4/UART_1.c ****     *
1001:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1002:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
1003:.\Generated_Source\PSoC4/UART_1.c ****     {
 801              		.loc 1 1003 0
 802              		.cfi_startproc
 803 0000 80B5     		push	{r7, lr}
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 7, -8
 806              		.cfi_offset 14, -4
 807 0002 82B0     		sub	sp, sp, #8
 808              		.cfi_def_cfa_offset 16
 809 0004 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
 811 0006 021C     		mov	r2, r0
 812 0008 FB1D     		add	r3, r7, #7
 813 000a 1A70     		strb	r2, [r3]
1004:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1005:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 814              		.loc 1 1005 0
 815 000c 054B     		ldr	r3, .L56
 816 000e 1B78     		ldrb	r3, [r3]
 817 0010 002B     		cmp	r3, #0
 818 0012 03D0     		beq	.L54
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 33


1006:.\Generated_Source\PSoC4/UART_1.c ****         {
1007:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH)
1008:.\Generated_Source\PSoC4/UART_1.c **** 
1009:.\Generated_Source\PSoC4/UART_1.c ****                 /* Disable Tx interrupt. */
1010:.\Generated_Source\PSoC4/UART_1.c ****                 /* Protect variables that could change on interrupt. */
1011:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_TX_INTERRUPT_ENABLED)
1012:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_DisableTxInt();
1013:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1014:.\Generated_Source\PSoC4/UART_1.c **** 
1015:.\Generated_Source\PSoC4/UART_1.c ****                 if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
1016:.\Generated_Source\PSoC4/UART_1.c ****                     ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1017:.\Generated_Source\PSoC4/UART_1.c ****                 {
1018:.\Generated_Source\PSoC4/UART_1.c ****                     /* Add directly to the FIFO. */
1019:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXDATA_REG = txDataByte;
1020:.\Generated_Source\PSoC4/UART_1.c ****                 }
1021:.\Generated_Source\PSoC4/UART_1.c ****                 else
1022:.\Generated_Source\PSoC4/UART_1.c ****                 {
1023:.\Generated_Source\PSoC4/UART_1.c ****                     if(UART_1_txBufferWrite >= UART_1_TXBUFFERSIZE)
1024:.\Generated_Source\PSoC4/UART_1.c ****                     {
1025:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_txBufferWrite = 0u;
1026:.\Generated_Source\PSoC4/UART_1.c ****                     }
1027:.\Generated_Source\PSoC4/UART_1.c **** 
1028:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
1029:.\Generated_Source\PSoC4/UART_1.c **** 
1030:.\Generated_Source\PSoC4/UART_1.c ****                     /* Add to the software buffer. */
1031:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite++;
1032:.\Generated_Source\PSoC4/UART_1.c **** 
1033:.\Generated_Source\PSoC4/UART_1.c ****                 }
1034:.\Generated_Source\PSoC4/UART_1.c **** 
1035:.\Generated_Source\PSoC4/UART_1.c ****                 /* Enable Tx interrupt. */
1036:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_TX_INTERRUPT_ENABLED)
1037:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_EnableTxInt();
1038:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1039:.\Generated_Source\PSoC4/UART_1.c **** 
1040:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1041:.\Generated_Source\PSoC4/UART_1.c **** 
1042:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add directly to the FIFO. */
1043:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 819              		.loc 1 1043 0
 820 0014 044B     		ldr	r3, .L56+4
 821 0016 FA1D     		add	r2, r7, #7
 822 0018 1278     		ldrb	r2, [r2]
 823 001a 1A70     		strb	r2, [r3]
 824              	.L54:
1044:.\Generated_Source\PSoC4/UART_1.c **** 
1045:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1046:.\Generated_Source\PSoC4/UART_1.c ****         }
1047:.\Generated_Source\PSoC4/UART_1.c ****     }
 825              		.loc 1 1047 0
 826 001c BD46     		mov	sp, r7
 827 001e 02B0     		add	sp, sp, #8
 828              		@ sp needed
 829 0020 80BD     		pop	{r7, pc}
 830              	.L57:
 831 0022 C046     		.align	2
 832              	.L56:
 833 0024 00000000 		.word	UART_1_initVar
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 34


 834 0028 42000F40 		.word	1074724930
 835              		.cfi_endproc
 836              	.LFE19:
 837              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 838              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 839              		.align	2
 840              		.global	UART_1_ReadTxStatus
 841              		.code	16
 842              		.thumb_func
 843              		.type	UART_1_ReadTxStatus, %function
 844              	UART_1_ReadTxStatus:
 845              	.LFB20:
1048:.\Generated_Source\PSoC4/UART_1.c **** 
1049:.\Generated_Source\PSoC4/UART_1.c **** 
1050:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1051:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
1052:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1053:.\Generated_Source\PSoC4/UART_1.c ****     *
1054:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1055:.\Generated_Source\PSoC4/UART_1.c ****     *  Read the status register for the component
1056:.\Generated_Source\PSoC4/UART_1.c ****     *
1057:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1058:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1059:.\Generated_Source\PSoC4/UART_1.c ****     *
1060:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1061:.\Generated_Source\PSoC4/UART_1.c ****     *  Contents of the status register
1062:.\Generated_Source\PSoC4/UART_1.c ****     *
1063:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1064:.\Generated_Source\PSoC4/UART_1.c ****     *  This function reads the status register which is clear on read. It is up to
1065:.\Generated_Source\PSoC4/UART_1.c ****     *  the user to handle all bits in this return value accordingly, even if the bit
1066:.\Generated_Source\PSoC4/UART_1.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1067:.\Generated_Source\PSoC4/UART_1.c ****     *  accordingly.
1068:.\Generated_Source\PSoC4/UART_1.c ****     *
1069:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1071:.\Generated_Source\PSoC4/UART_1.c ****     {
 846              		.loc 1 1071 0
 847              		.cfi_startproc
 848 0000 80B5     		push	{r7, lr}
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 7, -8
 851              		.cfi_offset 14, -4
 852 0002 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
1072:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 854              		.loc 1 1072 0
 855 0004 024B     		ldr	r3, .L60
 856 0006 1B78     		ldrb	r3, [r3]
 857 0008 DBB2     		uxtb	r3, r3
1073:.\Generated_Source\PSoC4/UART_1.c ****     }
 858              		.loc 1 1073 0
 859 000a 181C     		mov	r0, r3
 860 000c BD46     		mov	sp, r7
 861              		@ sp needed
 862 000e 80BD     		pop	{r7, pc}
 863              	.L61:
 864              		.align	2
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 35


 865              	.L60:
 866 0010 62000F40 		.word	1074724962
 867              		.cfi_endproc
 868              	.LFE20:
 869              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 870              		.section	.text.UART_1_PutChar,"ax",%progbits
 871              		.align	2
 872              		.global	UART_1_PutChar
 873              		.code	16
 874              		.thumb_func
 875              		.type	UART_1_PutChar, %function
 876              	UART_1_PutChar:
 877              	.LFB21:
1074:.\Generated_Source\PSoC4/UART_1.c **** 
1075:.\Generated_Source\PSoC4/UART_1.c **** 
1076:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1077:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutChar
1078:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1079:.\Generated_Source\PSoC4/UART_1.c ****     *
1080:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1081:.\Generated_Source\PSoC4/UART_1.c ****     *  Wait to send byte until TX register or buffer has room.
1082:.\Generated_Source\PSoC4/UART_1.c ****     *
1083:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1084:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1085:.\Generated_Source\PSoC4/UART_1.c ****     *
1086:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1087:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1088:.\Generated_Source\PSoC4/UART_1.c ****     *
1089:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1090:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1091:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1092:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1093:.\Generated_Source\PSoC4/UART_1.c ****     *     saved to buffer.
1094:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1095:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer.
1096:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1097:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1098:.\Generated_Source\PSoC4/UART_1.c ****     *
1099:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1100:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1101:.\Generated_Source\PSoC4/UART_1.c ****     *
1102:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1103:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1104:.\Generated_Source\PSoC4/UART_1.c ****     *
1105:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1106:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1107:.\Generated_Source\PSoC4/UART_1.c ****     {
 878              		.loc 1 1107 0
 879              		.cfi_startproc
 880 0000 80B5     		push	{r7, lr}
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 7, -8
 883              		.cfi_offset 14, -4
 884 0002 82B0     		sub	sp, sp, #8
 885              		.cfi_def_cfa_offset 16
 886 0004 00AF     		add	r7, sp, #0
 887              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 36


 888 0006 021C     		mov	r2, r0
 889 0008 FB1D     		add	r3, r7, #7
 890 000a 1A70     		strb	r2, [r3]
1108:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH)
1109:.\Generated_Source\PSoC4/UART_1.c ****                 /* The temporary output pointer is used since it takes two instructions
1110:.\Generated_Source\PSoC4/UART_1.c ****                 *  to increment with a wrap, and we can't risk doing that with the real
1111:.\Generated_Source\PSoC4/UART_1.c ****                 *  pointer and getting an interrupt in between instructions.
1112:.\Generated_Source\PSoC4/UART_1.c ****                 */
1113:.\Generated_Source\PSoC4/UART_1.c ****                 uint8 loc_txBufferWrite;
1114:.\Generated_Source\PSoC4/UART_1.c ****                 uint8 loc_txBufferRead;
1115:.\Generated_Source\PSoC4/UART_1.c **** 
1116:.\Generated_Source\PSoC4/UART_1.c ****                 do{
1117:.\Generated_Source\PSoC4/UART_1.c ****                     /* Block if software buffer is full, so we don't overwrite. */
1118:.\Generated_Source\PSoC4/UART_1.c ****                     #if ((UART_1_TXBUFFERSIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1119:.\Generated_Source\PSoC4/UART_1.c ****                         /* Disable TX interrupt to protect variables that could change on interrupt
1120:.\Generated_Source\PSoC4/UART_1.c ****                         CyIntDisable(UART_1_TX_VECT_NUM);
1121:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1122:.\Generated_Source\PSoC4/UART_1.c ****                     loc_txBufferWrite = UART_1_txBufferWrite;
1123:.\Generated_Source\PSoC4/UART_1.c ****                     loc_txBufferRead = UART_1_txBufferRead;
1124:.\Generated_Source\PSoC4/UART_1.c ****                     #if ((UART_1_TXBUFFERSIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1125:.\Generated_Source\PSoC4/UART_1.c ****                         /* Enable interrupt to continue transmission */
1126:.\Generated_Source\PSoC4/UART_1.c ****                         CyIntEnable(UART_1_TX_VECT_NUM);
1127:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1128:.\Generated_Source\PSoC4/UART_1.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
1129:.\Generated_Source\PSoC4/UART_1.c ****                                         ((loc_txBufferWrite - loc_txBufferRead) ==
1130:.\Generated_Source\PSoC4/UART_1.c ****                                         (uint8)(UART_1_TXBUFFERSIZE - 1u)) );
1131:.\Generated_Source\PSoC4/UART_1.c **** 
1132:.\Generated_Source\PSoC4/UART_1.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
1133:.\Generated_Source\PSoC4/UART_1.c ****                     ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1134:.\Generated_Source\PSoC4/UART_1.c ****                 {
1135:.\Generated_Source\PSoC4/UART_1.c ****                     /* Add directly to the FIFO. */
1136:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXDATA_REG = txDataByte;
1137:.\Generated_Source\PSoC4/UART_1.c ****                 }
1138:.\Generated_Source\PSoC4/UART_1.c ****                 else
1139:.\Generated_Source\PSoC4/UART_1.c ****                 {
1140:.\Generated_Source\PSoC4/UART_1.c ****                     if(loc_txBufferWrite >= UART_1_TXBUFFERSIZE)
1141:.\Generated_Source\PSoC4/UART_1.c ****                     {
1142:.\Generated_Source\PSoC4/UART_1.c ****                         loc_txBufferWrite = 0u;
1143:.\Generated_Source\PSoC4/UART_1.c ****                     }
1144:.\Generated_Source\PSoC4/UART_1.c ****                     /* Add to the software buffer. */
1145:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBuffer[loc_txBufferWrite] = txDataByte;
1146:.\Generated_Source\PSoC4/UART_1.c ****                     loc_txBufferWrite++;
1147:.\Generated_Source\PSoC4/UART_1.c **** 
1148:.\Generated_Source\PSoC4/UART_1.c ****                     /* Finally, update the real output pointer */
1149:.\Generated_Source\PSoC4/UART_1.c ****                     #if ((UART_1_TXBUFFERSIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1150:.\Generated_Source\PSoC4/UART_1.c ****                         CyIntDisable(UART_1_TX_VECT_NUM);
1151:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1152:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite = loc_txBufferWrite;
1153:.\Generated_Source\PSoC4/UART_1.c ****                     #if ((UART_1_TXBUFFERSIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1154:.\Generated_Source\PSoC4/UART_1.c ****                         CyIntEnable(UART_1_TX_VECT_NUM);
1155:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1156:.\Generated_Source\PSoC4/UART_1.c ****                 }
1157:.\Generated_Source\PSoC4/UART_1.c **** 
1158:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1159:.\Generated_Source\PSoC4/UART_1.c **** 
1160:.\Generated_Source\PSoC4/UART_1.c ****                 while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 891              		.loc 1 1160 0
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 37


 892 000c C046     		mov	r8, r8
 893              	.L63:
 894              		.loc 1 1160 0 is_stmt 0 discriminator 1
 895 000e 074B     		ldr	r3, .L64
 896 0010 1B78     		ldrb	r3, [r3]
 897 0012 DBB2     		uxtb	r3, r3
 898 0014 1A1C     		mov	r2, r3
 899 0016 0423     		mov	r3, #4
 900 0018 1340     		and	r3, r2
 901 001a F8D1     		bne	.L63
1161:.\Generated_Source\PSoC4/UART_1.c ****                 {
1162:.\Generated_Source\PSoC4/UART_1.c ****                     ; /* Wait for room in the FIFO. */
1163:.\Generated_Source\PSoC4/UART_1.c ****                 }
1164:.\Generated_Source\PSoC4/UART_1.c **** 
1165:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add directly to the FIFO. */
1166:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 902              		.loc 1 1166 0 is_stmt 1
 903 001c 044B     		ldr	r3, .L64+4
 904 001e FA1D     		add	r2, r7, #7
 905 0020 1278     		ldrb	r2, [r2]
 906 0022 1A70     		strb	r2, [r3]
1167:.\Generated_Source\PSoC4/UART_1.c **** 
1168:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1169:.\Generated_Source\PSoC4/UART_1.c ****     }
 907              		.loc 1 1169 0
 908 0024 BD46     		mov	sp, r7
 909 0026 02B0     		add	sp, sp, #8
 910              		@ sp needed
 911 0028 80BD     		pop	{r7, pc}
 912              	.L65:
 913 002a C046     		.align	2
 914              	.L64:
 915 002c 62000F40 		.word	1074724962
 916 0030 42000F40 		.word	1074724930
 917              		.cfi_endproc
 918              	.LFE21:
 919              		.size	UART_1_PutChar, .-UART_1_PutChar
 920              		.section	.text.UART_1_PutString,"ax",%progbits
 921              		.align	2
 922              		.global	UART_1_PutString
 923              		.code	16
 924              		.thumb_func
 925              		.type	UART_1_PutString, %function
 926              	UART_1_PutString:
 927              	.LFB22:
1170:.\Generated_Source\PSoC4/UART_1.c **** 
1171:.\Generated_Source\PSoC4/UART_1.c **** 
1172:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1173:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutString
1174:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1175:.\Generated_Source\PSoC4/UART_1.c ****     *
1176:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1177:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1178:.\Generated_Source\PSoC4/UART_1.c ****     *
1179:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1180:.\Generated_Source\PSoC4/UART_1.c ****     *  string: char pointer to character string of Data to Send.
1181:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 38


1182:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1183:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1184:.\Generated_Source\PSoC4/UART_1.c ****     *
1185:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1186:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1187:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1188:.\Generated_Source\PSoC4/UART_1.c ****     *
1189:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1190:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1191:.\Generated_Source\PSoC4/UART_1.c ****     *
1192:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1193:.\Generated_Source\PSoC4/UART_1.c ****     *  This function will block if there is not enough memory to place the whole
1194:.\Generated_Source\PSoC4/UART_1.c ****     *  string, it will block until the entire string has been written to the
1195:.\Generated_Source\PSoC4/UART_1.c ****     *  transmit buffer.
1196:.\Generated_Source\PSoC4/UART_1.c ****     *
1197:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1198:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1199:.\Generated_Source\PSoC4/UART_1.c ****     {
 928              		.loc 1 1199 0
 929              		.cfi_startproc
 930 0000 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 84B0     		sub	sp, sp, #16
 935              		.cfi_def_cfa_offset 24
 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
 938 0006 7860     		str	r0, [r7, #4]
1200:.\Generated_Source\PSoC4/UART_1.c ****         uint16 buf_index = 0u;
 939              		.loc 1 1200 0
 940 0008 3B1C     		mov	r3, r7
 941 000a 0E33     		add	r3, r3, #14
 942 000c 0022     		mov	r2, #0
 943 000e 1A80     		strh	r2, [r3]
1201:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1202:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 944              		.loc 1 1202 0
 945 0010 0F4B     		ldr	r3, .L70
 946 0012 1B78     		ldrb	r3, [r3]
 947 0014 002B     		cmp	r3, #0
 948 0016 18D0     		beq	.L66
1203:.\Generated_Source\PSoC4/UART_1.c ****         {
1204:.\Generated_Source\PSoC4/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1205:.\Generated_Source\PSoC4/UART_1.c ****             while(string[buf_index] != (char8)0)
 949              		.loc 1 1205 0
 950 0018 0FE0     		b	.L68
 951              	.L69:
1206:.\Generated_Source\PSoC4/UART_1.c ****             {
1207:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar((uint8)string[buf_index]);
 952              		.loc 1 1207 0
 953 001a 3B1C     		mov	r3, r7
 954 001c 0E33     		add	r3, r3, #14
 955 001e 1B88     		ldrh	r3, [r3]
 956 0020 7A68     		ldr	r2, [r7, #4]
 957 0022 D318     		add	r3, r2, r3
 958 0024 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 39


 959 0026 181C     		mov	r0, r3
 960 0028 FFF7FEFF 		bl	UART_1_PutChar
1208:.\Generated_Source\PSoC4/UART_1.c ****                 buf_index++;
 961              		.loc 1 1208 0
 962 002c 3B1C     		mov	r3, r7
 963 002e 0E33     		add	r3, r3, #14
 964 0030 1A88     		ldrh	r2, [r3]
 965 0032 3B1C     		mov	r3, r7
 966 0034 0E33     		add	r3, r3, #14
 967 0036 0132     		add	r2, r2, #1
 968 0038 1A80     		strh	r2, [r3]
 969              	.L68:
1205:.\Generated_Source\PSoC4/UART_1.c ****             while(string[buf_index] != (char8)0)
 970              		.loc 1 1205 0 discriminator 1
 971 003a 3B1C     		mov	r3, r7
 972 003c 0E33     		add	r3, r3, #14
 973 003e 1B88     		ldrh	r3, [r3]
 974 0040 7A68     		ldr	r2, [r7, #4]
 975 0042 D318     		add	r3, r2, r3
 976 0044 1B78     		ldrb	r3, [r3]
 977 0046 002B     		cmp	r3, #0
 978 0048 E7D1     		bne	.L69
 979              	.L66:
1209:.\Generated_Source\PSoC4/UART_1.c ****             }
1210:.\Generated_Source\PSoC4/UART_1.c ****         }
1211:.\Generated_Source\PSoC4/UART_1.c ****     }
 980              		.loc 1 1211 0
 981 004a BD46     		mov	sp, r7
 982 004c 04B0     		add	sp, sp, #16
 983              		@ sp needed
 984 004e 80BD     		pop	{r7, pc}
 985              	.L71:
 986              		.align	2
 987              	.L70:
 988 0050 00000000 		.word	UART_1_initVar
 989              		.cfi_endproc
 990              	.LFE22:
 991              		.size	UART_1_PutString, .-UART_1_PutString
 992              		.section	.text.UART_1_PutArray,"ax",%progbits
 993              		.align	2
 994              		.global	UART_1_PutArray
 995              		.code	16
 996              		.thumb_func
 997              		.type	UART_1_PutArray, %function
 998              	UART_1_PutArray:
 999              	.LFB23:
1212:.\Generated_Source\PSoC4/UART_1.c **** 
1213:.\Generated_Source\PSoC4/UART_1.c **** 
1214:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1215:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutArray
1216:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1217:.\Generated_Source\PSoC4/UART_1.c ****     *
1218:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1219:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1220:.\Generated_Source\PSoC4/UART_1.c ****     *
1221:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1222:.\Generated_Source\PSoC4/UART_1.c ****     *  string: Address of the memory array residing in RAM or ROM.
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 40


1223:.\Generated_Source\PSoC4/UART_1.c ****     *  byteCount: Number of Bytes to be transmitted.
1224:.\Generated_Source\PSoC4/UART_1.c ****     *
1225:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1226:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1227:.\Generated_Source\PSoC4/UART_1.c ****     *
1228:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1229:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1230:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1231:.\Generated_Source\PSoC4/UART_1.c ****     *
1232:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1233:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1234:.\Generated_Source\PSoC4/UART_1.c ****     *
1235:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1236:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1237:.\Generated_Source\PSoC4/UART_1.c ****                                                                     
1238:.\Generated_Source\PSoC4/UART_1.c ****     {
 1000              		.loc 1 1238 0
 1001              		.cfi_startproc
 1002 0000 80B5     		push	{r7, lr}
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
 1006 0002 84B0     		sub	sp, sp, #16
 1007              		.cfi_def_cfa_offset 24
 1008 0004 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 1010 0006 7860     		str	r0, [r7, #4]
 1011 0008 0A1C     		mov	r2, r1
 1012 000a FB1C     		add	r3, r7, #3
 1013 000c 1A70     		strb	r2, [r3]
1239:.\Generated_Source\PSoC4/UART_1.c ****         uint8 buf_index = 0u;
 1014              		.loc 1 1239 0
 1015 000e 3B1C     		mov	r3, r7
 1016 0010 0F33     		add	r3, r3, #15
 1017 0012 0022     		mov	r2, #0
 1018 0014 1A70     		strb	r2, [r3]
1240:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1241:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1019              		.loc 1 1241 0
 1020 0016 0F4B     		ldr	r3, .L75
 1021 0018 1B78     		ldrb	r3, [r3]
 1022 001a 002B     		cmp	r3, #0
 1023 001c 16D0     		beq	.L72
 1024              	.L74:
1242:.\Generated_Source\PSoC4/UART_1.c ****         {
1243:.\Generated_Source\PSoC4/UART_1.c ****             do
1244:.\Generated_Source\PSoC4/UART_1.c ****             {
1245:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar(string[buf_index]);
 1025              		.loc 1 1245 0 discriminator 1
 1026 001e 3B1C     		mov	r3, r7
 1027 0020 0F33     		add	r3, r3, #15
 1028 0022 1B78     		ldrb	r3, [r3]
 1029 0024 7A68     		ldr	r2, [r7, #4]
 1030 0026 D318     		add	r3, r2, r3
 1031 0028 1B78     		ldrb	r3, [r3]
 1032 002a 181C     		mov	r0, r3
 1033 002c FFF7FEFF 		bl	UART_1_PutChar
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 41


1246:.\Generated_Source\PSoC4/UART_1.c ****                 buf_index++;
 1034              		.loc 1 1246 0 discriminator 1
 1035 0030 3B1C     		mov	r3, r7
 1036 0032 0F33     		add	r3, r3, #15
 1037 0034 1A78     		ldrb	r2, [r3]
 1038 0036 3B1C     		mov	r3, r7
 1039 0038 0F33     		add	r3, r3, #15
 1040 003a 0132     		add	r2, r2, #1
 1041 003c 1A70     		strb	r2, [r3]
1247:.\Generated_Source\PSoC4/UART_1.c ****             }while(buf_index < byteCount);
 1042              		.loc 1 1247 0 discriminator 1
 1043 003e 3A1C     		mov	r2, r7
 1044 0040 0F32     		add	r2, r2, #15
 1045 0042 FB1C     		add	r3, r7, #3
 1046 0044 1278     		ldrb	r2, [r2]
 1047 0046 1B78     		ldrb	r3, [r3]
 1048 0048 9A42     		cmp	r2, r3
 1049 004a E8D3     		bcc	.L74
 1050              	.L72:
1248:.\Generated_Source\PSoC4/UART_1.c ****         }
1249:.\Generated_Source\PSoC4/UART_1.c ****     }
 1051              		.loc 1 1249 0
 1052 004c BD46     		mov	sp, r7
 1053 004e 04B0     		add	sp, sp, #16
 1054              		@ sp needed
 1055 0050 80BD     		pop	{r7, pc}
 1056              	.L76:
 1057 0052 C046     		.align	2
 1058              	.L75:
 1059 0054 00000000 		.word	UART_1_initVar
 1060              		.cfi_endproc
 1061              	.LFE23:
 1062              		.size	UART_1_PutArray, .-UART_1_PutArray
 1063              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 1064              		.align	2
 1065              		.global	UART_1_PutCRLF
 1066              		.code	16
 1067              		.thumb_func
 1068              		.type	UART_1_PutCRLF, %function
 1069              	UART_1_PutCRLF:
 1070              	.LFB24:
1250:.\Generated_Source\PSoC4/UART_1.c **** 
1251:.\Generated_Source\PSoC4/UART_1.c **** 
1252:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1253:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutCRLF
1254:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1255:.\Generated_Source\PSoC4/UART_1.c ****     *
1256:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1257:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a character and then carriage return and line feed.
1258:.\Generated_Source\PSoC4/UART_1.c ****     *
1259:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1260:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: uint8 Character to send.
1261:.\Generated_Source\PSoC4/UART_1.c ****     *
1262:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1263:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1264:.\Generated_Source\PSoC4/UART_1.c ****     *
1265:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 42


1266:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1267:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1268:.\Generated_Source\PSoC4/UART_1.c ****     *
1269:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1270:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1271:.\Generated_Source\PSoC4/UART_1.c ****     *
1272:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1274:.\Generated_Source\PSoC4/UART_1.c ****     {
 1071              		.loc 1 1274 0
 1072              		.cfi_startproc
 1073 0000 80B5     		push	{r7, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 7, -8
 1076              		.cfi_offset 14, -4
 1077 0002 82B0     		sub	sp, sp, #8
 1078              		.cfi_def_cfa_offset 16
 1079 0004 00AF     		add	r7, sp, #0
 1080              		.cfi_def_cfa_register 7
 1081 0006 021C     		mov	r2, r0
 1082 0008 FB1D     		add	r3, r7, #7
 1083 000a 1A70     		strb	r2, [r3]
1275:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1276:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1084              		.loc 1 1276 0
 1085 000c 084B     		ldr	r3, .L79
 1086 000e 1B78     		ldrb	r3, [r3]
 1087 0010 002B     		cmp	r3, #0
 1088 0012 0AD0     		beq	.L77
1277:.\Generated_Source\PSoC4/UART_1.c ****         {
1278:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(txDataByte);
 1089              		.loc 1 1278 0
 1090 0014 FB1D     		add	r3, r7, #7
 1091 0016 1B78     		ldrb	r3, [r3]
 1092 0018 181C     		mov	r0, r3
 1093 001a FFF7FEFF 		bl	UART_1_PutChar
1279:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Du);
 1094              		.loc 1 1279 0
 1095 001e 0D20     		mov	r0, #13
 1096 0020 FFF7FEFF 		bl	UART_1_PutChar
1280:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Au);
 1097              		.loc 1 1280 0
 1098 0024 0A20     		mov	r0, #10
 1099 0026 FFF7FEFF 		bl	UART_1_PutChar
 1100              	.L77:
1281:.\Generated_Source\PSoC4/UART_1.c ****         }
1282:.\Generated_Source\PSoC4/UART_1.c ****     }
 1101              		.loc 1 1282 0
 1102 002a BD46     		mov	sp, r7
 1103 002c 02B0     		add	sp, sp, #8
 1104              		@ sp needed
 1105 002e 80BD     		pop	{r7, pc}
 1106              	.L80:
 1107              		.align	2
 1108              	.L79:
 1109 0030 00000000 		.word	UART_1_initVar
 1110              		.cfi_endproc
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 43


 1111              	.LFE24:
 1112              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 1113              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 1114              		.align	2
 1115              		.global	UART_1_GetTxBufferSize
 1116              		.code	16
 1117              		.thumb_func
 1118              		.type	UART_1_GetTxBufferSize, %function
 1119              	UART_1_GetTxBufferSize:
 1120              	.LFB25:
1283:.\Generated_Source\PSoC4/UART_1.c **** 
1284:.\Generated_Source\PSoC4/UART_1.c **** 
1285:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1286:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1287:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1288:.\Generated_Source\PSoC4/UART_1.c ****     *
1289:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1290:.\Generated_Source\PSoC4/UART_1.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1291:.\Generated_Source\PSoC4/UART_1.c ****     *  bytes
1292:.\Generated_Source\PSoC4/UART_1.c ****     *
1293:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1294:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1295:.\Generated_Source\PSoC4/UART_1.c ****     *
1296:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1297:.\Generated_Source\PSoC4/UART_1.c ****     *  Integer count of the number of bytes left in the TX buffer
1298:.\Generated_Source\PSoC4/UART_1.c ****     *
1299:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1300:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1301:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1302:.\Generated_Source\PSoC4/UART_1.c ****     *
1303:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1304:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1305:.\Generated_Source\PSoC4/UART_1.c ****     *
1306:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1307:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1308:.\Generated_Source\PSoC4/UART_1.c ****     *
1309:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1310:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1311:.\Generated_Source\PSoC4/UART_1.c ****                                                             
1312:.\Generated_Source\PSoC4/UART_1.c ****     {
 1121              		.loc 1 1312 0
 1122              		.cfi_startproc
 1123 0000 80B5     		push	{r7, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 82B0     		sub	sp, sp, #8
 1128              		.cfi_def_cfa_offset 16
 1129 0004 00AF     		add	r7, sp, #0
 1130              		.cfi_def_cfa_register 7
1313:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
1314:.\Generated_Source\PSoC4/UART_1.c **** 
1315:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH)
1316:.\Generated_Source\PSoC4/UART_1.c **** 
1317:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Tx interrupt. */
1318:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
1319:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 44


1320:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableTxInt();
1321:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1322:.\Generated_Source\PSoC4/UART_1.c **** 
1323:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_txBufferRead == UART_1_txBufferWrite)
1324:.\Generated_Source\PSoC4/UART_1.c ****             {
1325:.\Generated_Source\PSoC4/UART_1.c ****                 size = 0u;
1326:.\Generated_Source\PSoC4/UART_1.c ****             }
1327:.\Generated_Source\PSoC4/UART_1.c ****             else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1328:.\Generated_Source\PSoC4/UART_1.c ****             {
1329:.\Generated_Source\PSoC4/UART_1.c ****                 size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1330:.\Generated_Source\PSoC4/UART_1.c ****             }
1331:.\Generated_Source\PSoC4/UART_1.c ****             else
1332:.\Generated_Source\PSoC4/UART_1.c ****             {
1333:.\Generated_Source\PSoC4/UART_1.c ****                 size = (UART_1_TXBUFFERSIZE - UART_1_txBufferRead) + UART_1_txBufferWrite;
1334:.\Generated_Source\PSoC4/UART_1.c ****             }
1335:.\Generated_Source\PSoC4/UART_1.c **** 
1336:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Tx interrupt. */
1337:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TX_INTERRUPT_ENABLED)
1338:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableTxInt();
1339:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1340:.\Generated_Source\PSoC4/UART_1.c **** 
1341:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1342:.\Generated_Source\PSoC4/UART_1.c **** 
1343:.\Generated_Source\PSoC4/UART_1.c ****             size = UART_1_TXSTATUS_REG;
 1131              		.loc 1 1343 0
 1132 0006 0F4A     		ldr	r2, .L86
 1133 0008 FB1D     		add	r3, r7, #7
 1134 000a 1278     		ldrb	r2, [r2]
 1135 000c 1A70     		strb	r2, [r3]
1344:.\Generated_Source\PSoC4/UART_1.c **** 
1345:.\Generated_Source\PSoC4/UART_1.c ****             /* Is the fifo is full. */
1346:.\Generated_Source\PSoC4/UART_1.c ****             if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 1136              		.loc 1 1346 0
 1137 000e FB1D     		add	r3, r7, #7
 1138 0010 1A78     		ldrb	r2, [r3]
 1139 0012 0423     		mov	r3, #4
 1140 0014 1340     		and	r3, r2
 1141 0016 03D0     		beq	.L82
1347:.\Generated_Source\PSoC4/UART_1.c ****             {
1348:.\Generated_Source\PSoC4/UART_1.c ****                 size = UART_1_FIFO_LENGTH;
 1142              		.loc 1 1348 0
 1143 0018 FB1D     		add	r3, r7, #7
 1144 001a 0422     		mov	r2, #4
 1145 001c 1A70     		strb	r2, [r3]
 1146 001e 0BE0     		b	.L83
 1147              	.L82:
1349:.\Generated_Source\PSoC4/UART_1.c ****             }
1350:.\Generated_Source\PSoC4/UART_1.c ****             else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 1148              		.loc 1 1350 0
 1149 0020 FB1D     		add	r3, r7, #7
 1150 0022 1A78     		ldrb	r2, [r3]
 1151 0024 0223     		mov	r3, #2
 1152 0026 1340     		and	r3, r2
 1153 0028 03D0     		beq	.L84
1351:.\Generated_Source\PSoC4/UART_1.c ****             {
1352:.\Generated_Source\PSoC4/UART_1.c ****                 size = 0u;
 1154              		.loc 1 1352 0
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 45


 1155 002a FB1D     		add	r3, r7, #7
 1156 002c 0022     		mov	r2, #0
 1157 002e 1A70     		strb	r2, [r3]
 1158 0030 02E0     		b	.L83
 1159              	.L84:
1353:.\Generated_Source\PSoC4/UART_1.c ****             }
1354:.\Generated_Source\PSoC4/UART_1.c ****             else
1355:.\Generated_Source\PSoC4/UART_1.c ****             {
1356:.\Generated_Source\PSoC4/UART_1.c ****                 /* We only know there is data in the fifo. */
1357:.\Generated_Source\PSoC4/UART_1.c ****                 size = 1u;
 1160              		.loc 1 1357 0
 1161 0032 FB1D     		add	r3, r7, #7
 1162 0034 0122     		mov	r2, #1
 1163 0036 1A70     		strb	r2, [r3]
 1164              	.L83:
1358:.\Generated_Source\PSoC4/UART_1.c ****             }
1359:.\Generated_Source\PSoC4/UART_1.c **** 
1360:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1361:.\Generated_Source\PSoC4/UART_1.c **** 
1362:.\Generated_Source\PSoC4/UART_1.c ****         return(size);
 1165              		.loc 1 1362 0
 1166 0038 FB1D     		add	r3, r7, #7
 1167 003a 1B78     		ldrb	r3, [r3]
1363:.\Generated_Source\PSoC4/UART_1.c ****     }
 1168              		.loc 1 1363 0
 1169 003c 181C     		mov	r0, r3
 1170 003e BD46     		mov	sp, r7
 1171 0040 02B0     		add	sp, sp, #8
 1172              		@ sp needed
 1173 0042 80BD     		pop	{r7, pc}
 1174              	.L87:
 1175              		.align	2
 1176              	.L86:
 1177 0044 62000F40 		.word	1074724962
 1178              		.cfi_endproc
 1179              	.LFE25:
 1180              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 1181              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 1182              		.align	2
 1183              		.global	UART_1_ClearTxBuffer
 1184              		.code	16
 1185              		.thumb_func
 1186              		.type	UART_1_ClearTxBuffer, %function
 1187              	UART_1_ClearTxBuffer:
 1188              	.LFB26:
1364:.\Generated_Source\PSoC4/UART_1.c **** 
1365:.\Generated_Source\PSoC4/UART_1.c **** 
1366:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1367:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1368:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1369:.\Generated_Source\PSoC4/UART_1.c ****     *
1370:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1371:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears the TX RAM buffer by setting the read and write pointers both to zero.
1372:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears the hardware TX FIFO.  Any data present in the FIFO will not be sent.
1373:.\Generated_Source\PSoC4/UART_1.c ****     *
1374:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1375:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 46


1376:.\Generated_Source\PSoC4/UART_1.c ****     *
1377:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1378:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1379:.\Generated_Source\PSoC4/UART_1.c ****     *
1380:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1381:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1382:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1383:.\Generated_Source\PSoC4/UART_1.c ****     *
1384:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1385:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1386:.\Generated_Source\PSoC4/UART_1.c ****     *
1387:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1388:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1389:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1390:.\Generated_Source\PSoC4/UART_1.c ****     *  remained in the RAM.
1391:.\Generated_Source\PSoC4/UART_1.c ****     *
1392:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1393:.\Generated_Source\PSoC4/UART_1.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1394:.\Generated_Source\PSoC4/UART_1.c ****     *
1395:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1397:.\Generated_Source\PSoC4/UART_1.c ****     {
 1189              		.loc 1 1397 0
 1190              		.cfi_startproc
 1191 0000 90B5     		push	{r4, r7, lr}
 1192              		.cfi_def_cfa_offset 12
 1193              		.cfi_offset 4, -12
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 83B0     		sub	sp, sp, #12
 1197              		.cfi_def_cfa_offset 24
 1198 0004 00AF     		add	r7, sp, #0
 1199              		.cfi_def_cfa_register 7
1398:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
1399:.\Generated_Source\PSoC4/UART_1.c **** 
1400:.\Generated_Source\PSoC4/UART_1.c ****         /* Enter critical section */
1401:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 1200              		.loc 1 1401 0
 1201 0006 FC1D     		add	r4, r7, #7
 1202 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1203 000c 031C     		mov	r3, r0
 1204 000e 2370     		strb	r3, [r4]
1402:.\Generated_Source\PSoC4/UART_1.c ****         /* clear the HW FIFO */
1403:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |=  UART_1_TX_FIFO_CLR;
 1205              		.loc 1 1403 0
 1206 0010 0B4B     		ldr	r3, .L89
 1207 0012 0B4A     		ldr	r2, .L89
 1208 0014 1278     		ldrb	r2, [r2]
 1209 0016 D2B2     		uxtb	r2, r2
 1210 0018 0121     		mov	r1, #1
 1211 001a 0A43     		orr	r2, r1
 1212 001c D2B2     		uxtb	r2, r2
 1213 001e 1A70     		strb	r2, [r3]
1404:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8)~UART_1_TX_FIFO_CLR;
 1214              		.loc 1 1404 0
 1215 0020 074B     		ldr	r3, .L89
 1216 0022 074A     		ldr	r2, .L89
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 47


 1217 0024 1278     		ldrb	r2, [r2]
 1218 0026 D2B2     		uxtb	r2, r2
 1219 0028 0121     		mov	r1, #1
 1220 002a 8A43     		bic	r2, r1
 1221 002c D2B2     		uxtb	r2, r2
 1222 002e 1A70     		strb	r2, [r3]
1405:.\Generated_Source\PSoC4/UART_1.c ****         /* Exit critical section */
1406:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 1223              		.loc 1 1406 0
 1224 0030 FB1D     		add	r3, r7, #7
 1225 0032 1B78     		ldrb	r3, [r3]
 1226 0034 181C     		mov	r0, r3
 1227 0036 FFF7FEFF 		bl	CyExitCriticalSection
1407:.\Generated_Source\PSoC4/UART_1.c **** 
1408:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH)
1409:.\Generated_Source\PSoC4/UART_1.c **** 
1410:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable Tx interrupt. */
1411:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
1412:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TX_INTERRUPT_ENABLED)
1413:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_DisableTxInt();
1414:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1415:.\Generated_Source\PSoC4/UART_1.c **** 
1416:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBufferRead = 0u;
1417:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBufferWrite = 0u;
1418:.\Generated_Source\PSoC4/UART_1.c **** 
1419:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable Tx interrupt. */
1420:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TX_INTERRUPT_ENABLED)
1421:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_EnableTxInt();
1422:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TX_INTERRUPT_ENABLED */
1423:.\Generated_Source\PSoC4/UART_1.c **** 
1424:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXBUFFERSIZE > UART_1_FIFO_LENGTH */
1425:.\Generated_Source\PSoC4/UART_1.c ****     }
 1228              		.loc 1 1425 0
 1229 003a BD46     		mov	sp, r7
 1230 003c 03B0     		add	sp, sp, #12
 1231              		@ sp needed
 1232 003e 90BD     		pop	{r4, r7, pc}
 1233              	.L90:
 1234              		.align	2
 1235              	.L89:
 1236 0040 92000F40 		.word	1074725010
 1237              		.cfi_endproc
 1238              	.LFE26:
 1239              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 1240              		.section	.text.UART_1_SendBreak,"ax",%progbits
 1241              		.align	2
 1242              		.global	UART_1_SendBreak
 1243              		.code	16
 1244              		.thumb_func
 1245              		.type	UART_1_SendBreak, %function
 1246              	UART_1_SendBreak:
 1247              	.LFB27:
1426:.\Generated_Source\PSoC4/UART_1.c **** 
1427:.\Generated_Source\PSoC4/UART_1.c **** 
1428:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1429:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SendBreak
1430:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 48


1431:.\Generated_Source\PSoC4/UART_1.c ****     *
1432:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1433:.\Generated_Source\PSoC4/UART_1.c ****     *  Write a Break command to the UART
1434:.\Generated_Source\PSoC4/UART_1.c ****     *
1435:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1436:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8 retMode:  Wait mode,
1437:.\Generated_Source\PSoC4/UART_1.c ****     *   0 - Initialize registers for Break, sends the Break signal and return
1438:.\Generated_Source\PSoC4/UART_1.c ****     *       imediately.
1439:.\Generated_Source\PSoC4/UART_1.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1440:.\Generated_Source\PSoC4/UART_1.c ****     *       transmission mode then return.
1441:.\Generated_Source\PSoC4/UART_1.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1442:.\Generated_Source\PSoC4/UART_1.c ****     *   3 - both steps: 0 and 1
1443:.\Generated_Source\PSoC4/UART_1.c ****     *       init registers for Break, send Break signal
1444:.\Generated_Source\PSoC4/UART_1.c ****     *       wait until Break sending is complete, reinit registers to normal
1445:.\Generated_Source\PSoC4/UART_1.c ****     *       transmission mode then return.
1446:.\Generated_Source\PSoC4/UART_1.c ****     *
1447:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1448:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1449:.\Generated_Source\PSoC4/UART_1.c ****     *
1450:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1451:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1452:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1453:.\Generated_Source\PSoC4/UART_1.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1454:.\Generated_Source\PSoC4/UART_1.c ****     *
1455:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1456:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1457:.\Generated_Source\PSoC4/UART_1.c ****     *
1458:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1459:.\Generated_Source\PSoC4/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1460:.\Generated_Source\PSoC4/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1461:.\Generated_Source\PSoC4/UART_1.c ****     *  operation.
1462:.\Generated_Source\PSoC4/UART_1.c ****     *  Trere are 3 variants for this API usage:
1463:.\Generated_Source\PSoC4/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1464:.\Generated_Source\PSoC4/UART_1.c ****     *     configuration returning. Funcition will block CPU untill transmition
1465:.\Generated_Source\PSoC4/UART_1.c ****     *     complete.
1466:.\Generated_Source\PSoC4/UART_1.c ****     *  2) User may want to use bloking time if UART configured to the low speed
1467:.\Generated_Source\PSoC4/UART_1.c ****     *     operation
1468:.\Generated_Source\PSoC4/UART_1.c ****     *     Emample for this case:
1469:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - init Break signal transmition
1470:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1471:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1472:.\Generated_Source\PSoC4/UART_1.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete
1473:.\Generated_Source\PSoC4/UART_1.c ****     *     break operation.
1474:.\Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1475:.\Generated_Source\PSoC4/UART_1.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
1476:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - init Break signal transmition
1477:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1478:.\Generated_Source\PSoC4/UART_1.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1479:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1480:.\Generated_Source\PSoC4/UART_1.c ****     *
1481:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1482:.\Generated_Source\PSoC4/UART_1.c ****     *   Uses static variable to keep registers configuration.
1483:.\Generated_Source\PSoC4/UART_1.c ****     *
1484:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1485:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1486:.\Generated_Source\PSoC4/UART_1.c ****     {
 1248              		.loc 1 1486 0
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 49


 1249              		.cfi_startproc
 1250 0000 80B5     		push	{r7, lr}
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
 1254 0002 84B0     		sub	sp, sp, #16
 1255              		.cfi_def_cfa_offset 24
 1256 0004 00AF     		add	r7, sp, #0
 1257              		.cfi_def_cfa_register 7
 1258 0006 021C     		mov	r2, r0
 1259 0008 FB1D     		add	r3, r7, #7
 1260 000a 1A70     		strb	r2, [r3]
1487:.\Generated_Source\PSoC4/UART_1.c **** 
1488:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1489:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1261              		.loc 1 1489 0
 1262 000c 254B     		ldr	r3, .L99
 1263 000e 1B78     		ldrb	r3, [r3]
 1264 0010 002B     		cmp	r3, #0
 1265 0012 43D0     		beq	.L91
 1266              	.LBB2:
1490:.\Generated_Source\PSoC4/UART_1.c ****         {
1491:.\Generated_Source\PSoC4/UART_1.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1492:.\Generated_Source\PSoC4/UART_1.c ****             /*When that is done then reset the counter value back*/
1493:.\Generated_Source\PSoC4/UART_1.c ****             uint8 tmpStat;
1494:.\Generated_Source\PSoC4/UART_1.c **** 
1495:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1496:.\Generated_Source\PSoC4/UART_1.c **** 
1497:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_SEND_BREAK) ||
1498:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT ) )
1499:.\Generated_Source\PSoC4/UART_1.c ****                 {
1500:.\Generated_Source\PSoC4/UART_1.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1501:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1502:.\Generated_Source\PSoC4/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1503:.\Generated_Source\PSoC4/UART_1.c ****                     /* Send zeros*/
1504:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXDATA_REG = 0u;
1505:.\Generated_Source\PSoC4/UART_1.c **** 
1506:.\Generated_Source\PSoC4/UART_1.c ****                     do /*wait until transmit starts*/
1507:.\Generated_Source\PSoC4/UART_1.c ****                     {
1508:.\Generated_Source\PSoC4/UART_1.c ****                         tmpStat = UART_1_TXSTATUS_REG;
1509:.\Generated_Source\PSoC4/UART_1.c ****                     }while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1510:.\Generated_Source\PSoC4/UART_1.c ****                 }
1511:.\Generated_Source\PSoC4/UART_1.c **** 
1512:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1513:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1514:.\Generated_Source\PSoC4/UART_1.c ****                 {
1515:.\Generated_Source\PSoC4/UART_1.c ****                     do /*wait until transmit complete*/
1516:.\Generated_Source\PSoC4/UART_1.c ****                     {
1517:.\Generated_Source\PSoC4/UART_1.c ****                         tmpStat = UART_1_TXSTATUS_REG;
1518:.\Generated_Source\PSoC4/UART_1.c ****                     }while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1519:.\Generated_Source\PSoC4/UART_1.c ****                 }
1520:.\Generated_Source\PSoC4/UART_1.c **** 
1521:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1522:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_REINIT) ||
1523:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1524:.\Generated_Source\PSoC4/UART_1.c ****                 {
1525:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 50


1526:.\Generated_Source\PSoC4/UART_1.c ****                                                   (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1527:.\Generated_Source\PSoC4/UART_1.c ****                 }
1528:.\Generated_Source\PSoC4/UART_1.c **** 
1529:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_HD_ENABLED Full Duplex mode */
1530:.\Generated_Source\PSoC4/UART_1.c **** 
1531:.\Generated_Source\PSoC4/UART_1.c ****                 static uint8 tx_period;
1532:.\Generated_Source\PSoC4/UART_1.c **** 
1533:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_SEND_BREAK) ||
 1267              		.loc 1 1533 0
 1268 0014 FB1D     		add	r3, r7, #7
 1269 0016 1B78     		ldrb	r3, [r3]
 1270 0018 002B     		cmp	r3, #0
 1271 001a 03D0     		beq	.L93
 1272              		.loc 1 1533 0 is_stmt 0 discriminator 1
 1273 001c FB1D     		add	r3, r7, #7
 1274 001e 1B78     		ldrb	r3, [r3]
 1275 0020 032B     		cmp	r3, #3
 1276 0022 15D1     		bne	.L94
 1277              	.L93:
1534:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1535:.\Generated_Source\PSoC4/UART_1.c ****                 {
1536:.\Generated_Source\PSoC4/UART_1.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex 
1537:.\Generated_Source\PSoC4/UART_1.c ****                     #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1538:.\Generated_Source\PSoC4/UART_1.c ****                                         (UART_1_PARITY_TYPE_SW != 0u) )
1539:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1540:.\Generated_Source\PSoC4/UART_1.c ****                                                               UART_1_CTRL_HD_SEND_BREAK);
1541:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1542:.\Generated_Source\PSoC4/UART_1.c **** 
1543:.\Generated_Source\PSoC4/UART_1.c ****                     #if(UART_1_TXCLKGEN_DP)
1544:.\Generated_Source\PSoC4/UART_1.c ****                         tx_period = UART_1_TXBITCLKTX_COMPLETE_REG;
 1278              		.loc 1 1544 0 is_stmt 1
 1279 0024 204B     		ldr	r3, .L99+4
 1280 0026 1B78     		ldrb	r3, [r3]
 1281 0028 DAB2     		uxtb	r2, r3
 1282 002a 204B     		ldr	r3, .L99+8
 1283 002c 1A70     		strb	r2, [r3]
1545:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 1284              		.loc 1 1545 0
 1285 002e 1E4B     		ldr	r3, .L99+4
 1286 0030 6722     		mov	r2, #103
 1287 0032 1A70     		strb	r2, [r3]
1546:.\Generated_Source\PSoC4/UART_1.c ****                     #else
1547:.\Generated_Source\PSoC4/UART_1.c ****                         tx_period = UART_1_TXBITCTR_PERIOD_REG;
1548:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1549:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End UART_1_TXCLKGEN_DP */
1550:.\Generated_Source\PSoC4/UART_1.c **** 
1551:.\Generated_Source\PSoC4/UART_1.c ****                     /* Send zeros*/
1552:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXDATA_REG = 0u;
 1288              		.loc 1 1552 0
 1289 0034 1E4B     		ldr	r3, .L99+12
 1290 0036 0022     		mov	r2, #0
 1291 0038 1A70     		strb	r2, [r3]
 1292              	.L95:
1553:.\Generated_Source\PSoC4/UART_1.c **** 
1554:.\Generated_Source\PSoC4/UART_1.c ****                     do /* wait until transmit starts */
1555:.\Generated_Source\PSoC4/UART_1.c ****                     {
1556:.\Generated_Source\PSoC4/UART_1.c ****                         tmpStat = UART_1_TXSTATUS_REG;
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 51


 1293              		.loc 1 1556 0 discriminator 1
 1294 003a 1E4A     		ldr	r2, .L99+16
 1295 003c 3B1C     		mov	r3, r7
 1296 003e 0F33     		add	r3, r3, #15
 1297 0040 1278     		ldrb	r2, [r2]
 1298 0042 1A70     		strb	r2, [r3]
1557:.\Generated_Source\PSoC4/UART_1.c ****                     }while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 1299              		.loc 1 1557 0 discriminator 1
 1300 0044 3B1C     		mov	r3, r7
 1301 0046 0F33     		add	r3, r3, #15
 1302 0048 1A78     		ldrb	r2, [r3]
 1303 004a 0223     		mov	r3, #2
 1304 004c 1340     		and	r3, r2
 1305 004e F4D1     		bne	.L95
 1306              	.L94:
1558:.\Generated_Source\PSoC4/UART_1.c ****                 }
1559:.\Generated_Source\PSoC4/UART_1.c **** 
1560:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1307              		.loc 1 1560 0
 1308 0050 FB1D     		add	r3, r7, #7
 1309 0052 1B78     		ldrb	r3, [r3]
 1310 0054 012B     		cmp	r3, #1
 1311 0056 03D0     		beq	.L96
 1312              		.loc 1 1560 0 is_stmt 0 discriminator 1
 1313 0058 FB1D     		add	r3, r7, #7
 1314 005a 1B78     		ldrb	r3, [r3]
 1315 005c 032B     		cmp	r3, #3
 1316 005e 0DD1     		bne	.L97
 1317              	.L96:
1561:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1562:.\Generated_Source\PSoC4/UART_1.c ****                 {
1563:.\Generated_Source\PSoC4/UART_1.c ****                     do /*wait until transmit complete*/
1564:.\Generated_Source\PSoC4/UART_1.c ****                     {
1565:.\Generated_Source\PSoC4/UART_1.c ****                         tmpStat = UART_1_TXSTATUS_REG;
 1318              		.loc 1 1565 0 is_stmt 1 discriminator 1
 1319 0060 144A     		ldr	r2, .L99+16
 1320 0062 3B1C     		mov	r3, r7
 1321 0064 0F33     		add	r3, r3, #15
 1322 0066 1278     		ldrb	r2, [r2]
 1323 0068 1A70     		strb	r2, [r3]
1566:.\Generated_Source\PSoC4/UART_1.c ****                     }while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 1324              		.loc 1 1566 0 discriminator 1
 1325 006a 3B1C     		mov	r3, r7
 1326 006c 0F33     		add	r3, r3, #15
 1327 006e 1B78     		ldrb	r3, [r3]
 1328 0070 DB43     		mvn	r3, r3
 1329 0072 DBB2     		uxtb	r3, r3
 1330 0074 1A1C     		mov	r2, r3
 1331 0076 0123     		mov	r3, #1
 1332 0078 1340     		and	r3, r2
 1333 007a F1D1     		bne	.L96
 1334              	.L97:
1567:.\Generated_Source\PSoC4/UART_1.c ****                 }
1568:.\Generated_Source\PSoC4/UART_1.c **** 
1569:.\Generated_Source\PSoC4/UART_1.c ****                 if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1335              		.loc 1 1569 0
 1336 007c FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 52


 1337 007e 1B78     		ldrb	r3, [r3]
 1338 0080 012B     		cmp	r3, #1
 1339 0082 07D0     		beq	.L98
 1340              		.loc 1 1569 0 is_stmt 0 discriminator 1
 1341 0084 FB1D     		add	r3, r7, #7
 1342 0086 1B78     		ldrb	r3, [r3]
 1343 0088 022B     		cmp	r3, #2
 1344 008a 03D0     		beq	.L98
1570:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_REINIT) ||
 1345              		.loc 1 1570 0 is_stmt 1
 1346 008c FB1D     		add	r3, r7, #7
 1347 008e 1B78     		ldrb	r3, [r3]
 1348 0090 032B     		cmp	r3, #3
 1349 0092 03D1     		bne	.L91
 1350              	.L98:
1571:.\Generated_Source\PSoC4/UART_1.c ****                     (retMode == UART_1_SEND_WAIT_REINIT) )
1572:.\Generated_Source\PSoC4/UART_1.c ****                 {
1573:.\Generated_Source\PSoC4/UART_1.c **** 
1574:.\Generated_Source\PSoC4/UART_1.c ****                     #if(UART_1_TXCLKGEN_DP)
1575:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_TXBITCLKTX_COMPLETE_REG = tx_period;
 1351              		.loc 1 1575 0
 1352 0094 044B     		ldr	r3, .L99+4
 1353 0096 054A     		ldr	r2, .L99+8
 1354 0098 1278     		ldrb	r2, [r2]
 1355 009a 1A70     		strb	r2, [r3]
 1356              	.L91:
 1357              	.LBE2:
1576:.\Generated_Source\PSoC4/UART_1.c ****                     #else
1577:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_TXBITCTR_PERIOD_REG = tx_period;
1578:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End UART_1_TXCLKGEN_DP */
1579:.\Generated_Source\PSoC4/UART_1.c **** 
1580:.\Generated_Source\PSoC4/UART_1.c ****                     #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1581:.\Generated_Source\PSoC4/UART_1.c ****                          (UART_1_PARITY_TYPE_SW != 0u) )
1582:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1583:.\Generated_Source\PSoC4/UART_1.c ****                                                       (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1584:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* End UART_1_PARITY_TYPE != NONE */
1585:.\Generated_Source\PSoC4/UART_1.c ****                 }
1586:.\Generated_Source\PSoC4/UART_1.c ****             #endif    /* End UART_1_HD_ENABLED */
1587:.\Generated_Source\PSoC4/UART_1.c ****         }
1588:.\Generated_Source\PSoC4/UART_1.c ****     }
 1358              		.loc 1 1588 0
 1359 009c BD46     		mov	sp, r7
 1360 009e 04B0     		add	sp, sp, #16
 1361              		@ sp needed
 1362 00a0 80BD     		pop	{r7, pc}
 1363              	.L100:
 1364 00a2 C046     		.align	2
 1365              	.L99:
 1366 00a4 00000000 		.word	UART_1_initVar
 1367 00a8 31000F40 		.word	1074724913
 1368 00ac 01000000 		.word	tx_period.4858
 1369 00b0 42000F40 		.word	1074724930
 1370 00b4 62000F40 		.word	1074724962
 1371              		.cfi_endproc
 1372              	.LFE27:
 1373              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1374              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 53


 1375              		.align	2
 1376              		.global	UART_1_SetTxAddressMode
 1377              		.code	16
 1378              		.thumb_func
 1379              		.type	UART_1_SetTxAddressMode, %function
 1380              	UART_1_SetTxAddressMode:
 1381              	.LFB28:
1589:.\Generated_Source\PSoC4/UART_1.c **** 
1590:.\Generated_Source\PSoC4/UART_1.c **** 
1591:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1592:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1593:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1594:.\Generated_Source\PSoC4/UART_1.c ****     *
1595:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1596:.\Generated_Source\PSoC4/UART_1.c ****     *  Set the transmit addressing mode
1597:.\Generated_Source\PSoC4/UART_1.c ****     *
1598:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1599:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: 0 -> Space
1600:.\Generated_Source\PSoC4/UART_1.c ****     *               1 -> Mark
1601:.\Generated_Source\PSoC4/UART_1.c ****     *
1602:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1603:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1604:.\Generated_Source\PSoC4/UART_1.c ****     *
1605:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1607:.\Generated_Source\PSoC4/UART_1.c ****     {
 1382              		.loc 1 1607 0
 1383              		.cfi_startproc
 1384 0000 80B5     		push	{r7, lr}
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 7, -8
 1387              		.cfi_offset 14, -4
 1388 0002 82B0     		sub	sp, sp, #8
 1389              		.cfi_def_cfa_offset 16
 1390 0004 00AF     		add	r7, sp, #0
 1391              		.cfi_def_cfa_register 7
 1392 0006 021C     		mov	r2, r0
 1393 0008 FB1D     		add	r3, r7, #7
 1394 000a 1A70     		strb	r2, [r3]
1608:.\Generated_Source\PSoC4/UART_1.c ****         /* Mark/Space sending enable*/
1609:.\Generated_Source\PSoC4/UART_1.c ****         if(addressMode != 0u)
1610:.\Generated_Source\PSoC4/UART_1.c ****         {
1611:.\Generated_Source\PSoC4/UART_1.c ****             #if( UART_1_CONTROL_REG_REMOVED == 0u )
1612:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1613:.\Generated_Source\PSoC4/UART_1.c ****                                                       UART_1_CTRL_MARK);
1614:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1615:.\Generated_Source\PSoC4/UART_1.c ****         }
1616:.\Generated_Source\PSoC4/UART_1.c ****         else
1617:.\Generated_Source\PSoC4/UART_1.c ****         {
1618:.\Generated_Source\PSoC4/UART_1.c ****             #if( UART_1_CONTROL_REG_REMOVED == 0u )
1619:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1620:.\Generated_Source\PSoC4/UART_1.c ****                                                     (uint8)~UART_1_CTRL_MARK);
1621:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1622:.\Generated_Source\PSoC4/UART_1.c ****         }
1623:.\Generated_Source\PSoC4/UART_1.c ****     }
 1395              		.loc 1 1623 0
 1396 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 54


 1397 000e 02B0     		add	sp, sp, #8
 1398              		@ sp needed
 1399 0010 80BD     		pop	{r7, pc}
 1400              		.cfi_endproc
 1401              	.LFE28:
 1402              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1403 0012 C046     		.bss
 1404              	tx_period.4858:
 1405 0001 00       		.space	1
 1406              		.text
 1407              	.Letext0:
 1408              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1409              		.section	.debug_info,"",%progbits
 1410              	.Ldebug_info0:
 1411 0000 FC040000 		.4byte	0x4fc
 1412 0004 0400     		.2byte	0x4
 1413 0006 00000000 		.4byte	.Ldebug_abbrev0
 1414 000a 04       		.byte	0x4
 1415 000b 01       		.uleb128 0x1
 1416 000c C1020000 		.4byte	.LASF60
 1417 0010 01       		.byte	0x1
 1418 0011 E6000000 		.4byte	.LASF61
 1419 0015 16020000 		.4byte	.LASF62
 1420 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1421 001d 00000000 		.4byte	0
 1422 0021 00000000 		.4byte	.Ldebug_line0
 1423 0025 02       		.uleb128 0x2
 1424 0026 01       		.byte	0x1
 1425 0027 06       		.byte	0x6
 1426 0028 9C000000 		.4byte	.LASF0
 1427 002c 02       		.uleb128 0x2
 1428 002d 01       		.byte	0x1
 1429 002e 08       		.byte	0x8
 1430 002f 6F030000 		.4byte	.LASF1
 1431 0033 02       		.uleb128 0x2
 1432 0034 02       		.byte	0x2
 1433 0035 05       		.byte	0x5
 1434 0036 7D030000 		.4byte	.LASF2
 1435 003a 02       		.uleb128 0x2
 1436 003b 02       		.byte	0x2
 1437 003c 07       		.byte	0x7
 1438 003d 6A010000 		.4byte	.LASF3
 1439 0041 02       		.uleb128 0x2
 1440 0042 04       		.byte	0x4
 1441 0043 05       		.byte	0x5
 1442 0044 B7000000 		.4byte	.LASF4
 1443 0048 02       		.uleb128 0x2
 1444 0049 04       		.byte	0x4
 1445 004a 07       		.byte	0x7
 1446 004b 53010000 		.4byte	.LASF5
 1447 004f 02       		.uleb128 0x2
 1448 0050 08       		.byte	0x8
 1449 0051 05       		.byte	0x5
 1450 0052 8E000000 		.4byte	.LASF6
 1451 0056 02       		.uleb128 0x2
 1452 0057 08       		.byte	0x8
 1453 0058 07       		.byte	0x7
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 55


 1454 0059 60000000 		.4byte	.LASF7
 1455 005d 03       		.uleb128 0x3
 1456 005e 04       		.byte	0x4
 1457 005f 05       		.byte	0x5
 1458 0060 696E7400 		.ascii	"int\000"
 1459 0064 02       		.uleb128 0x2
 1460 0065 04       		.byte	0x4
 1461 0066 07       		.byte	0x7
 1462 0067 32010000 		.4byte	.LASF8
 1463 006b 04       		.uleb128 0x4
 1464 006c CD000000 		.4byte	.LASF9
 1465 0070 02       		.byte	0x2
 1466 0071 A1       		.byte	0xa1
 1467 0072 2C000000 		.4byte	0x2c
 1468 0076 04       		.uleb128 0x4
 1469 0077 00000000 		.4byte	.LASF10
 1470 007b 02       		.byte	0x2
 1471 007c A2       		.byte	0xa2
 1472 007d 3A000000 		.4byte	0x3a
 1473 0081 02       		.uleb128 0x2
 1474 0082 04       		.byte	0x4
 1475 0083 04       		.byte	0x4
 1476 0084 BB020000 		.4byte	.LASF11
 1477 0088 02       		.uleb128 0x2
 1478 0089 08       		.byte	0x8
 1479 008a 04       		.byte	0x4
 1480 008b D3000000 		.4byte	.LASF12
 1481 008f 04       		.uleb128 0x4
 1482 0090 DF030000 		.4byte	.LASF13
 1483 0094 02       		.byte	0x2
 1484 0095 B2       		.byte	0xb2
 1485 0096 9A000000 		.4byte	0x9a
 1486 009a 02       		.uleb128 0x2
 1487 009b 01       		.byte	0x1
 1488 009c 08       		.byte	0x8
 1489 009d DA030000 		.4byte	.LASF14
 1490 00a1 05       		.uleb128 0x5
 1491 00a2 6A030000 		.4byte	.LASF15
 1492 00a6 02       		.byte	0x2
 1493 00a7 4B01     		.2byte	0x14b
 1494 00a9 AD000000 		.4byte	0xad
 1495 00ad 06       		.uleb128 0x6
 1496 00ae 6B000000 		.4byte	0x6b
 1497 00b2 02       		.uleb128 0x2
 1498 00b3 04       		.byte	0x4
 1499 00b4 07       		.byte	0x7
 1500 00b5 5D020000 		.4byte	.LASF16
 1501 00b9 07       		.uleb128 0x7
 1502 00ba C0000000 		.4byte	.LASF17
 1503 00be 01       		.byte	0x1
 1504 00bf 49       		.byte	0x49
 1505 00c0 00000000 		.4byte	.LFB2
 1506 00c4 24000000 		.4byte	.LFE2-.LFB2
 1507 00c8 01       		.uleb128 0x1
 1508 00c9 9C       		.byte	0x9c
 1509 00ca 08       		.uleb128 0x8
 1510 00cb E5030000 		.4byte	.LASF18
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 56


 1511 00cf 01       		.byte	0x1
 1512 00d0 65       		.byte	0x65
 1513 00d1 00000000 		.4byte	.LFB3
 1514 00d5 3C000000 		.4byte	.LFE3-.LFB3
 1515 00d9 01       		.uleb128 0x1
 1516 00da 9C       		.byte	0x9c
 1517 00db 09       		.uleb128 0x9
 1518 00dc 7D010000 		.4byte	.LASF19
 1519 00e0 01       		.byte	0x1
 1520 00e1 AE       		.byte	0xae
 1521 00e2 00000000 		.4byte	.LFB4
 1522 00e6 64000000 		.4byte	.LFE4-.LFB4
 1523 00ea 01       		.uleb128 0x1
 1524 00eb 9C       		.byte	0x9c
 1525 00ec FF000000 		.4byte	0xff
 1526 00f0 0A       		.uleb128 0xa
 1527 00f1 F1030000 		.4byte	.LASF21
 1528 00f5 01       		.byte	0x1
 1529 00f6 B0       		.byte	0xb0
 1530 00f7 6B000000 		.4byte	0x6b
 1531 00fb 02       		.uleb128 0x2
 1532 00fc 91       		.byte	0x91
 1533 00fd 6F       		.sleb128 -17
 1534 00fe 00       		.byte	0
 1535 00ff 09       		.uleb128 0x9
 1536 0100 CF010000 		.4byte	.LASF20
 1537 0104 01       		.byte	0x1
 1538 0105 E3       		.byte	0xe3
 1539 0106 00000000 		.4byte	.LFB5
 1540 010a 60000000 		.4byte	.LFE5-.LFB5
 1541 010e 01       		.uleb128 0x1
 1542 010f 9C       		.byte	0x9c
 1543 0110 23010000 		.4byte	0x123
 1544 0114 0A       		.uleb128 0xa
 1545 0115 F1030000 		.4byte	.LASF21
 1546 0119 01       		.byte	0x1
 1547 011a E5       		.byte	0xe5
 1548 011b 6B000000 		.4byte	0x6b
 1549 011f 02       		.uleb128 0x2
 1550 0120 91       		.byte	0x91
 1551 0121 6F       		.sleb128 -17
 1552 0122 00       		.byte	0
 1553 0123 0B       		.uleb128 0xb
 1554 0124 B4010000 		.4byte	.LASF32
 1555 0128 01       		.byte	0x1
 1556 0129 1901     		.2byte	0x119
 1557 012b 6B000000 		.4byte	0x6b
 1558 012f 00000000 		.4byte	.LFB6
 1559 0133 0C000000 		.4byte	.LFE6-.LFB6
 1560 0137 01       		.uleb128 0x1
 1561 0138 9C       		.byte	0x9c
 1562 0139 0C       		.uleb128 0xc
 1563 013a 87030000 		.4byte	.LASF22
 1564 013e 01       		.byte	0x1
 1565 013f 3101     		.2byte	0x131
 1566 0141 00000000 		.4byte	.LFB7
 1567 0145 12000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 57


 1568 0149 01       		.uleb128 0x1
 1569 014a 9C       		.byte	0x9c
 1570 014b 5F010000 		.4byte	0x15f
 1571 014f 0D       		.uleb128 0xd
 1572 0150 08010000 		.4byte	.LASF24
 1573 0154 01       		.byte	0x1
 1574 0155 3101     		.2byte	0x131
 1575 0157 6B000000 		.4byte	0x6b
 1576 015b 02       		.uleb128 0x2
 1577 015c 91       		.byte	0x91
 1578 015d 77       		.sleb128 -9
 1579 015e 00       		.byte	0
 1580 015f 0C       		.uleb128 0xc
 1581 0160 10010000 		.4byte	.LASF23
 1582 0164 01       		.byte	0x1
 1583 0165 8101     		.2byte	0x181
 1584 0167 00000000 		.4byte	.LFB8
 1585 016b 20000000 		.4byte	.LFE8-.LFB8
 1586 016f 01       		.uleb128 0x1
 1587 0170 9C       		.byte	0x9c
 1588 0171 85010000 		.4byte	0x185
 1589 0175 0D       		.uleb128 0xd
 1590 0176 AD010000 		.4byte	.LASF25
 1591 017a 01       		.byte	0x1
 1592 017b 8101     		.2byte	0x181
 1593 017d 6B000000 		.4byte	0x6b
 1594 0181 02       		.uleb128 0x2
 1595 0182 91       		.byte	0x91
 1596 0183 77       		.sleb128 -9
 1597 0184 00       		.byte	0
 1598 0185 0E       		.uleb128 0xe
 1599 0186 4E000000 		.4byte	.LASF27
 1600 018a 01       		.byte	0x1
 1601 018b A201     		.2byte	0x1a2
 1602 018d 6B000000 		.4byte	0x6b
 1603 0191 00000000 		.4byte	.LFB9
 1604 0195 20000000 		.4byte	.LFE9-.LFB9
 1605 0199 01       		.uleb128 0x1
 1606 019a 9C       		.byte	0x9c
 1607 019b AF010000 		.4byte	0x1af
 1608 019f 0F       		.uleb128 0xf
 1609 01a0 D3030000 		.4byte	.LASF26
 1610 01a4 01       		.byte	0x1
 1611 01a5 A401     		.2byte	0x1a4
 1612 01a7 6B000000 		.4byte	0x6b
 1613 01ab 02       		.uleb128 0x2
 1614 01ac 91       		.byte	0x91
 1615 01ad 77       		.sleb128 -9
 1616 01ae 00       		.byte	0
 1617 01af 0E       		.uleb128 0xe
 1618 01b0 09040000 		.4byte	.LASF28
 1619 01b4 01       		.byte	0x1
 1620 01b5 FD01     		.2byte	0x1fd
 1621 01b7 6B000000 		.4byte	0x6b
 1622 01bb 00000000 		.4byte	.LFB10
 1623 01bf 24000000 		.4byte	.LFE10-.LFB10
 1624 01c3 01       		.uleb128 0x1
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 58


 1625 01c4 9C       		.byte	0x9c
 1626 01c5 D9010000 		.4byte	0x1d9
 1627 01c9 0F       		.uleb128 0xf
 1628 01ca 02040000 		.4byte	.LASF29
 1629 01ce 01       		.byte	0x1
 1630 01cf FF01     		.2byte	0x1ff
 1631 01d1 6B000000 		.4byte	0x6b
 1632 01d5 02       		.uleb128 0x2
 1633 01d6 91       		.byte	0x91
 1634 01d7 77       		.sleb128 -9
 1635 01d8 00       		.byte	0
 1636 01d9 0E       		.uleb128 0xe
 1637 01da 1D040000 		.4byte	.LASF30
 1638 01de 01       		.byte	0x1
 1639 01df 2C02     		.2byte	0x22c
 1640 01e1 6B000000 		.4byte	0x6b
 1641 01e5 00000000 		.4byte	.LFB11
 1642 01e9 4C000000 		.4byte	.LFE11-.LFB11
 1643 01ed 01       		.uleb128 0x1
 1644 01ee 9C       		.byte	0x9c
 1645 01ef 12020000 		.4byte	0x212
 1646 01f3 0F       		.uleb128 0xf
 1647 01f4 D3030000 		.4byte	.LASF26
 1648 01f8 01       		.byte	0x1
 1649 01f9 2E02     		.2byte	0x22e
 1650 01fb 6B000000 		.4byte	0x6b
 1651 01ff 02       		.uleb128 0x2
 1652 0200 91       		.byte	0x91
 1653 0201 77       		.sleb128 -9
 1654 0202 0F       		.uleb128 0xf
 1655 0203 98020000 		.4byte	.LASF31
 1656 0207 01       		.byte	0x1
 1657 0208 2F02     		.2byte	0x22f
 1658 020a 6B000000 		.4byte	0x6b
 1659 020e 02       		.uleb128 0x2
 1660 020f 91       		.byte	0x91
 1661 0210 76       		.sleb128 -10
 1662 0211 00       		.byte	0
 1663 0212 10       		.uleb128 0x10
 1664 0213 DB010000 		.4byte	.LASF33
 1665 0217 01       		.byte	0x1
 1666 0218 9202     		.2byte	0x292
 1667 021a 76000000 		.4byte	0x76
 1668 021e 00000000 		.4byte	.LFB12
 1669 0222 22000000 		.4byte	.LFE12-.LFB12
 1670 0226 01       		.uleb128 0x1
 1671 0227 9C       		.byte	0x9c
 1672 0228 0E       		.uleb128 0xe
 1673 0229 BC030000 		.4byte	.LASF34
 1674 022d 01       		.byte	0x1
 1675 022e B302     		.2byte	0x2b3
 1676 0230 6B000000 		.4byte	0x6b
 1677 0234 00000000 		.4byte	.LFB13
 1678 0238 30000000 		.4byte	.LFE13-.LFB13
 1679 023c 01       		.uleb128 0x1
 1680 023d 9C       		.byte	0x9c
 1681 023e 52020000 		.4byte	0x252
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 59


 1682 0242 0F       		.uleb128 0xf
 1683 0243 65010000 		.4byte	.LASF35
 1684 0247 01       		.byte	0x1
 1685 0248 B602     		.2byte	0x2b6
 1686 024a 6B000000 		.4byte	0x6b
 1687 024e 02       		.uleb128 0x2
 1688 024f 91       		.byte	0x91
 1689 0250 77       		.sleb128 -9
 1690 0251 00       		.byte	0
 1691 0252 11       		.uleb128 0x11
 1692 0253 3D030000 		.4byte	.LASF36
 1693 0257 01       		.byte	0x1
 1694 0258 0303     		.2byte	0x303
 1695 025a 00000000 		.4byte	.LFB14
 1696 025e 44000000 		.4byte	.LFE14-.LFB14
 1697 0262 01       		.uleb128 0x1
 1698 0263 9C       		.byte	0x9c
 1699 0264 78020000 		.4byte	0x278
 1700 0268 0F       		.uleb128 0xf
 1701 0269 F1030000 		.4byte	.LASF21
 1702 026d 01       		.byte	0x1
 1703 026e 0503     		.2byte	0x305
 1704 0270 6B000000 		.4byte	0x6b
 1705 0274 02       		.uleb128 0x2
 1706 0275 91       		.byte	0x91
 1707 0276 6F       		.sleb128 -17
 1708 0277 00       		.byte	0
 1709 0278 0C       		.uleb128 0xc
 1710 0279 52030000 		.4byte	.LASF37
 1711 027d 01       		.byte	0x1
 1712 027e 4003     		.2byte	0x340
 1713 0280 00000000 		.4byte	.LFB15
 1714 0284 12000000 		.4byte	.LFE15-.LFB15
 1715 0288 01       		.uleb128 0x1
 1716 0289 9C       		.byte	0x9c
 1717 028a 9E020000 		.4byte	0x29e
 1718 028e 0D       		.uleb128 0xd
 1719 028f DA000000 		.4byte	.LASF38
 1720 0293 01       		.byte	0x1
 1721 0294 4003     		.2byte	0x340
 1722 0296 6B000000 		.4byte	0x6b
 1723 029a 02       		.uleb128 0x2
 1724 029b 91       		.byte	0x91
 1725 029c 77       		.sleb128 -9
 1726 029d 00       		.byte	0
 1727 029e 0C       		.uleb128 0xc
 1728 029f 66020000 		.4byte	.LASF39
 1729 02a3 01       		.byte	0x1
 1730 02a4 6503     		.2byte	0x365
 1731 02a6 00000000 		.4byte	.LFB16
 1732 02aa 20000000 		.4byte	.LFE16-.LFB16
 1733 02ae 01       		.uleb128 0x1
 1734 02af 9C       		.byte	0x9c
 1735 02b0 C4020000 		.4byte	0x2c4
 1736 02b4 0D       		.uleb128 0xd
 1737 02b5 90020000 		.4byte	.LASF40
 1738 02b9 01       		.byte	0x1
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 60


 1739 02ba 6503     		.2byte	0x365
 1740 02bc 6B000000 		.4byte	0x6b
 1741 02c0 02       		.uleb128 0x2
 1742 02c1 91       		.byte	0x91
 1743 02c2 77       		.sleb128 -9
 1744 02c3 00       		.byte	0
 1745 02c4 0C       		.uleb128 0xc
 1746 02c5 7B020000 		.4byte	.LASF41
 1747 02c9 01       		.byte	0x1
 1748 02ca 7A03     		.2byte	0x37a
 1749 02cc 00000000 		.4byte	.LFB17
 1750 02d0 20000000 		.4byte	.LFE17-.LFB17
 1751 02d4 01       		.uleb128 0x1
 1752 02d5 9C       		.byte	0x9c
 1753 02d6 EA020000 		.4byte	0x2ea
 1754 02da 0D       		.uleb128 0xd
 1755 02db 90020000 		.4byte	.LASF40
 1756 02df 01       		.byte	0x1
 1757 02e0 7A03     		.2byte	0x37a
 1758 02e2 6B000000 		.4byte	0x6b
 1759 02e6 02       		.uleb128 0x2
 1760 02e7 91       		.byte	0x91
 1761 02e8 77       		.sleb128 -9
 1762 02e9 00       		.byte	0
 1763 02ea 0C       		.uleb128 0xc
 1764 02eb A1020000 		.4byte	.LASF42
 1765 02ef 01       		.byte	0x1
 1766 02f0 C803     		.2byte	0x3c8
 1767 02f2 00000000 		.4byte	.LFB18
 1768 02f6 20000000 		.4byte	.LFE18-.LFB18
 1769 02fa 01       		.uleb128 0x1
 1770 02fb 9C       		.byte	0x9c
 1771 02fc 10030000 		.4byte	0x310
 1772 0300 0D       		.uleb128 0xd
 1773 0301 AD010000 		.4byte	.LASF25
 1774 0305 01       		.byte	0x1
 1775 0306 C803     		.2byte	0x3c8
 1776 0308 6B000000 		.4byte	0x6b
 1777 030c 02       		.uleb128 0x2
 1778 030d 91       		.byte	0x91
 1779 030e 77       		.sleb128 -9
 1780 030f 00       		.byte	0
 1781 0310 0C       		.uleb128 0xc
 1782 0311 FB010000 		.4byte	.LASF43
 1783 0315 01       		.byte	0x1
 1784 0316 EA03     		.2byte	0x3ea
 1785 0318 00000000 		.4byte	.LFB19
 1786 031c 2C000000 		.4byte	.LFE19-.LFB19
 1787 0320 01       		.uleb128 0x1
 1788 0321 9C       		.byte	0x9c
 1789 0322 36030000 		.4byte	0x336
 1790 0326 0D       		.uleb128 0xd
 1791 0327 1C000000 		.4byte	.LASF44
 1792 032b 01       		.byte	0x1
 1793 032c EA03     		.2byte	0x3ea
 1794 032e 6B000000 		.4byte	0x6b
 1795 0332 02       		.uleb128 0x2
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 61


 1796 0333 91       		.byte	0x91
 1797 0334 77       		.sleb128 -9
 1798 0335 00       		.byte	0
 1799 0336 0B       		.uleb128 0xb
 1800 0337 3F010000 		.4byte	.LASF45
 1801 033b 01       		.byte	0x1
 1802 033c 2E04     		.2byte	0x42e
 1803 033e 6B000000 		.4byte	0x6b
 1804 0342 00000000 		.4byte	.LFB20
 1805 0346 14000000 		.4byte	.LFE20-.LFB20
 1806 034a 01       		.uleb128 0x1
 1807 034b 9C       		.byte	0x9c
 1808 034c 0C       		.uleb128 0xc
 1809 034d 27000000 		.4byte	.LASF46
 1810 0351 01       		.byte	0x1
 1811 0352 5204     		.2byte	0x452
 1812 0354 00000000 		.4byte	.LFB21
 1813 0358 34000000 		.4byte	.LFE21-.LFB21
 1814 035c 01       		.uleb128 0x1
 1815 035d 9C       		.byte	0x9c
 1816 035e 72030000 		.4byte	0x372
 1817 0362 0D       		.uleb128 0xd
 1818 0363 1C000000 		.4byte	.LASF44
 1819 0367 01       		.byte	0x1
 1820 0368 5204     		.2byte	0x452
 1821 036a 6B000000 		.4byte	0x6b
 1822 036e 02       		.uleb128 0x2
 1823 036f 91       		.byte	0x91
 1824 0370 77       		.sleb128 -9
 1825 0371 00       		.byte	0
 1826 0372 11       		.uleb128 0x11
 1827 0373 EA010000 		.4byte	.LASF47
 1828 0377 01       		.byte	0x1
 1829 0378 AE04     		.2byte	0x4ae
 1830 037a 00000000 		.4byte	.LFB22
 1831 037e 54000000 		.4byte	.LFE22-.LFB22
 1832 0382 01       		.uleb128 0x1
 1833 0383 9C       		.byte	0x9c
 1834 0384 A7030000 		.4byte	0x3a7
 1835 0388 0D       		.uleb128 0xd
 1836 0389 36000000 		.4byte	.LASF48
 1837 038d 01       		.byte	0x1
 1838 038e AE04     		.2byte	0x4ae
 1839 0390 A7030000 		.4byte	0x3a7
 1840 0394 02       		.uleb128 0x2
 1841 0395 91       		.byte	0x91
 1842 0396 6C       		.sleb128 -20
 1843 0397 0F       		.uleb128 0xf
 1844 0398 2C040000 		.4byte	.LASF49
 1845 039c 01       		.byte	0x1
 1846 039d B004     		.2byte	0x4b0
 1847 039f 76000000 		.4byte	0x76
 1848 03a3 02       		.uleb128 0x2
 1849 03a4 91       		.byte	0x91
 1850 03a5 76       		.sleb128 -10
 1851 03a6 00       		.byte	0
 1852 03a7 12       		.uleb128 0x12
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 62


 1853 03a8 04       		.byte	0x4
 1854 03a9 AD030000 		.4byte	0x3ad
 1855 03ad 13       		.uleb128 0x13
 1856 03ae 8F000000 		.4byte	0x8f
 1857 03b2 11       		.uleb128 0x11
 1858 03b3 36040000 		.4byte	.LASF50
 1859 03b7 01       		.byte	0x1
 1860 03b8 D404     		.2byte	0x4d4
 1861 03ba 00000000 		.4byte	.LFB23
 1862 03be 58000000 		.4byte	.LFE23-.LFB23
 1863 03c2 01       		.uleb128 0x1
 1864 03c3 9C       		.byte	0x9c
 1865 03c4 F6030000 		.4byte	0x3f6
 1866 03c8 0D       		.uleb128 0xd
 1867 03c9 36000000 		.4byte	.LASF48
 1868 03cd 01       		.byte	0x1
 1869 03ce D404     		.2byte	0x4d4
 1870 03d0 F6030000 		.4byte	0x3f6
 1871 03d4 02       		.uleb128 0x2
 1872 03d5 91       		.byte	0x91
 1873 03d6 6C       		.sleb128 -20
 1874 03d7 0D       		.uleb128 0xd
 1875 03d8 B2030000 		.4byte	.LASF51
 1876 03dc 01       		.byte	0x1
 1877 03dd D404     		.2byte	0x4d4
 1878 03df 6B000000 		.4byte	0x6b
 1879 03e3 02       		.uleb128 0x2
 1880 03e4 91       		.byte	0x91
 1881 03e5 6B       		.sleb128 -21
 1882 03e6 0F       		.uleb128 0xf
 1883 03e7 2C040000 		.4byte	.LASF49
 1884 03eb 01       		.byte	0x1
 1885 03ec D704     		.2byte	0x4d7
 1886 03ee 6B000000 		.4byte	0x6b
 1887 03f2 02       		.uleb128 0x2
 1888 03f3 91       		.byte	0x91
 1889 03f4 77       		.sleb128 -9
 1890 03f5 00       		.byte	0
 1891 03f6 12       		.uleb128 0x12
 1892 03f7 04       		.byte	0x4
 1893 03f8 FC030000 		.4byte	0x3fc
 1894 03fc 13       		.uleb128 0x13
 1895 03fd 6B000000 		.4byte	0x6b
 1896 0401 11       		.uleb128 0x11
 1897 0402 A8000000 		.4byte	.LASF52
 1898 0406 01       		.byte	0x1
 1899 0407 F904     		.2byte	0x4f9
 1900 0409 00000000 		.4byte	.LFB24
 1901 040d 34000000 		.4byte	.LFE24-.LFB24
 1902 0411 01       		.uleb128 0x1
 1903 0412 9C       		.byte	0x9c
 1904 0413 27040000 		.4byte	0x427
 1905 0417 0D       		.uleb128 0xd
 1906 0418 1C000000 		.4byte	.LASF44
 1907 041c 01       		.byte	0x1
 1908 041d F904     		.2byte	0x4f9
 1909 041f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 63


 1910 0423 02       		.uleb128 0x2
 1911 0424 91       		.byte	0x91
 1912 0425 77       		.sleb128 -9
 1913 0426 00       		.byte	0
 1914 0427 0E       		.uleb128 0xe
 1915 0428 77000000 		.4byte	.LASF53
 1916 042c 01       		.byte	0x1
 1917 042d 1E05     		.2byte	0x51e
 1918 042f 6B000000 		.4byte	0x6b
 1919 0433 00000000 		.4byte	.LFB25
 1920 0437 48000000 		.4byte	.LFE25-.LFB25
 1921 043b 01       		.uleb128 0x1
 1922 043c 9C       		.byte	0x9c
 1923 043d 51040000 		.4byte	0x451
 1924 0441 0F       		.uleb128 0xf
 1925 0442 65010000 		.4byte	.LASF35
 1926 0446 01       		.byte	0x1
 1927 0447 2105     		.2byte	0x521
 1928 0449 6B000000 		.4byte	0x6b
 1929 044d 02       		.uleb128 0x2
 1930 044e 91       		.byte	0x91
 1931 044f 77       		.sleb128 -9
 1932 0450 00       		.byte	0
 1933 0451 11       		.uleb128 0x11
 1934 0452 07000000 		.4byte	.LASF54
 1935 0456 01       		.byte	0x1
 1936 0457 7405     		.2byte	0x574
 1937 0459 00000000 		.4byte	.LFB26
 1938 045d 44000000 		.4byte	.LFE26-.LFB26
 1939 0461 01       		.uleb128 0x1
 1940 0462 9C       		.byte	0x9c
 1941 0463 77040000 		.4byte	0x477
 1942 0467 0F       		.uleb128 0xf
 1943 0468 F1030000 		.4byte	.LASF21
 1944 046c 01       		.byte	0x1
 1945 046d 7605     		.2byte	0x576
 1946 046f 6B000000 		.4byte	0x6b
 1947 0473 02       		.uleb128 0x2
 1948 0474 91       		.byte	0x91
 1949 0475 6F       		.sleb128 -17
 1950 0476 00       		.byte	0
 1951 0477 0C       		.uleb128 0xc
 1952 0478 3D000000 		.4byte	.LASF55
 1953 047c 01       		.byte	0x1
 1954 047d CD05     		.2byte	0x5cd
 1955 047f 00000000 		.4byte	.LFB27
 1956 0483 B8000000 		.4byte	.LFE27-.LFB27
 1957 0487 01       		.uleb128 0x1
 1958 0488 9C       		.byte	0x9c
 1959 0489 C8040000 		.4byte	0x4c8
 1960 048d 0D       		.uleb128 0xd
 1961 048e 2A010000 		.4byte	.LASF56
 1962 0492 01       		.byte	0x1
 1963 0493 CD05     		.2byte	0x5cd
 1964 0495 6B000000 		.4byte	0x6b
 1965 0499 02       		.uleb128 0x2
 1966 049a 91       		.byte	0x91
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 64


 1967 049b 6F       		.sleb128 -17
 1968 049c 14       		.uleb128 0x14
 1969 049d 14000000 		.4byte	.LBB2
 1970 04a1 88000000 		.4byte	.LBE2-.LBB2
 1971 04a5 0F       		.uleb128 0xf
 1972 04a6 0E020000 		.4byte	.LASF57
 1973 04aa 01       		.byte	0x1
 1974 04ab D505     		.2byte	0x5d5
 1975 04ad 6B000000 		.4byte	0x6b
 1976 04b1 02       		.uleb128 0x2
 1977 04b2 91       		.byte	0x91
 1978 04b3 77       		.sleb128 -9
 1979 04b4 0F       		.uleb128 0xf
 1980 04b5 A3010000 		.4byte	.LASF58
 1981 04b9 01       		.byte	0x1
 1982 04ba FB05     		.2byte	0x5fb
 1983 04bc 6B000000 		.4byte	0x6b
 1984 04c0 05       		.uleb128 0x5
 1985 04c1 03       		.byte	0x3
 1986 04c2 01000000 		.4byte	tx_period.4858
 1987 04c6 00       		.byte	0
 1988 04c7 00       		.byte	0
 1989 04c8 0C       		.uleb128 0xc
 1990 04c9 8B010000 		.4byte	.LASF59
 1991 04cd 01       		.byte	0x1
 1992 04ce 4606     		.2byte	0x646
 1993 04d0 00000000 		.4byte	.LFB28
 1994 04d4 12000000 		.4byte	.LFE28-.LFB28
 1995 04d8 01       		.uleb128 0x1
 1996 04d9 9C       		.byte	0x9c
 1997 04da EE040000 		.4byte	0x4ee
 1998 04de 0D       		.uleb128 0xd
 1999 04df DA000000 		.4byte	.LASF38
 2000 04e3 01       		.byte	0x1
 2001 04e4 4606     		.2byte	0x646
 2002 04e6 6B000000 		.4byte	0x6b
 2003 04ea 02       		.uleb128 0x2
 2004 04eb 91       		.byte	0x91
 2005 04ec 77       		.sleb128 -9
 2006 04ed 00       		.byte	0
 2007 04ee 15       		.uleb128 0x15
 2008 04ef A3030000 		.4byte	.LASF63
 2009 04f3 01       		.byte	0x1
 2010 04f4 1C       		.byte	0x1c
 2011 04f5 6B000000 		.4byte	0x6b
 2012 04f9 05       		.uleb128 0x5
 2013 04fa 03       		.byte	0x3
 2014 04fb 00000000 		.4byte	UART_1_initVar
 2015 04ff 00       		.byte	0
 2016              		.section	.debug_abbrev,"",%progbits
 2017              	.Ldebug_abbrev0:
 2018 0000 01       		.uleb128 0x1
 2019 0001 11       		.uleb128 0x11
 2020 0002 01       		.byte	0x1
 2021 0003 25       		.uleb128 0x25
 2022 0004 0E       		.uleb128 0xe
 2023 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 65


 2024 0006 0B       		.uleb128 0xb
 2025 0007 03       		.uleb128 0x3
 2026 0008 0E       		.uleb128 0xe
 2027 0009 1B       		.uleb128 0x1b
 2028 000a 0E       		.uleb128 0xe
 2029 000b 55       		.uleb128 0x55
 2030 000c 17       		.uleb128 0x17
 2031 000d 11       		.uleb128 0x11
 2032 000e 01       		.uleb128 0x1
 2033 000f 10       		.uleb128 0x10
 2034 0010 17       		.uleb128 0x17
 2035 0011 00       		.byte	0
 2036 0012 00       		.byte	0
 2037 0013 02       		.uleb128 0x2
 2038 0014 24       		.uleb128 0x24
 2039 0015 00       		.byte	0
 2040 0016 0B       		.uleb128 0xb
 2041 0017 0B       		.uleb128 0xb
 2042 0018 3E       		.uleb128 0x3e
 2043 0019 0B       		.uleb128 0xb
 2044 001a 03       		.uleb128 0x3
 2045 001b 0E       		.uleb128 0xe
 2046 001c 00       		.byte	0
 2047 001d 00       		.byte	0
 2048 001e 03       		.uleb128 0x3
 2049 001f 24       		.uleb128 0x24
 2050 0020 00       		.byte	0
 2051 0021 0B       		.uleb128 0xb
 2052 0022 0B       		.uleb128 0xb
 2053 0023 3E       		.uleb128 0x3e
 2054 0024 0B       		.uleb128 0xb
 2055 0025 03       		.uleb128 0x3
 2056 0026 08       		.uleb128 0x8
 2057 0027 00       		.byte	0
 2058 0028 00       		.byte	0
 2059 0029 04       		.uleb128 0x4
 2060 002a 16       		.uleb128 0x16
 2061 002b 00       		.byte	0
 2062 002c 03       		.uleb128 0x3
 2063 002d 0E       		.uleb128 0xe
 2064 002e 3A       		.uleb128 0x3a
 2065 002f 0B       		.uleb128 0xb
 2066 0030 3B       		.uleb128 0x3b
 2067 0031 0B       		.uleb128 0xb
 2068 0032 49       		.uleb128 0x49
 2069 0033 13       		.uleb128 0x13
 2070 0034 00       		.byte	0
 2071 0035 00       		.byte	0
 2072 0036 05       		.uleb128 0x5
 2073 0037 16       		.uleb128 0x16
 2074 0038 00       		.byte	0
 2075 0039 03       		.uleb128 0x3
 2076 003a 0E       		.uleb128 0xe
 2077 003b 3A       		.uleb128 0x3a
 2078 003c 0B       		.uleb128 0xb
 2079 003d 3B       		.uleb128 0x3b
 2080 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 66


 2081 003f 49       		.uleb128 0x49
 2082 0040 13       		.uleb128 0x13
 2083 0041 00       		.byte	0
 2084 0042 00       		.byte	0
 2085 0043 06       		.uleb128 0x6
 2086 0044 35       		.uleb128 0x35
 2087 0045 00       		.byte	0
 2088 0046 49       		.uleb128 0x49
 2089 0047 13       		.uleb128 0x13
 2090 0048 00       		.byte	0
 2091 0049 00       		.byte	0
 2092 004a 07       		.uleb128 0x7
 2093 004b 2E       		.uleb128 0x2e
 2094 004c 00       		.byte	0
 2095 004d 3F       		.uleb128 0x3f
 2096 004e 19       		.uleb128 0x19
 2097 004f 03       		.uleb128 0x3
 2098 0050 0E       		.uleb128 0xe
 2099 0051 3A       		.uleb128 0x3a
 2100 0052 0B       		.uleb128 0xb
 2101 0053 3B       		.uleb128 0x3b
 2102 0054 0B       		.uleb128 0xb
 2103 0055 27       		.uleb128 0x27
 2104 0056 19       		.uleb128 0x19
 2105 0057 11       		.uleb128 0x11
 2106 0058 01       		.uleb128 0x1
 2107 0059 12       		.uleb128 0x12
 2108 005a 06       		.uleb128 0x6
 2109 005b 40       		.uleb128 0x40
 2110 005c 18       		.uleb128 0x18
 2111 005d 9642     		.uleb128 0x2116
 2112 005f 19       		.uleb128 0x19
 2113 0060 00       		.byte	0
 2114 0061 00       		.byte	0
 2115 0062 08       		.uleb128 0x8
 2116 0063 2E       		.uleb128 0x2e
 2117 0064 00       		.byte	0
 2118 0065 3F       		.uleb128 0x3f
 2119 0066 19       		.uleb128 0x19
 2120 0067 03       		.uleb128 0x3
 2121 0068 0E       		.uleb128 0xe
 2122 0069 3A       		.uleb128 0x3a
 2123 006a 0B       		.uleb128 0xb
 2124 006b 3B       		.uleb128 0x3b
 2125 006c 0B       		.uleb128 0xb
 2126 006d 27       		.uleb128 0x27
 2127 006e 19       		.uleb128 0x19
 2128 006f 11       		.uleb128 0x11
 2129 0070 01       		.uleb128 0x1
 2130 0071 12       		.uleb128 0x12
 2131 0072 06       		.uleb128 0x6
 2132 0073 40       		.uleb128 0x40
 2133 0074 18       		.uleb128 0x18
 2134 0075 9742     		.uleb128 0x2117
 2135 0077 19       		.uleb128 0x19
 2136 0078 00       		.byte	0
 2137 0079 00       		.byte	0
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 67


 2138 007a 09       		.uleb128 0x9
 2139 007b 2E       		.uleb128 0x2e
 2140 007c 01       		.byte	0x1
 2141 007d 3F       		.uleb128 0x3f
 2142 007e 19       		.uleb128 0x19
 2143 007f 03       		.uleb128 0x3
 2144 0080 0E       		.uleb128 0xe
 2145 0081 3A       		.uleb128 0x3a
 2146 0082 0B       		.uleb128 0xb
 2147 0083 3B       		.uleb128 0x3b
 2148 0084 0B       		.uleb128 0xb
 2149 0085 27       		.uleb128 0x27
 2150 0086 19       		.uleb128 0x19
 2151 0087 11       		.uleb128 0x11
 2152 0088 01       		.uleb128 0x1
 2153 0089 12       		.uleb128 0x12
 2154 008a 06       		.uleb128 0x6
 2155 008b 40       		.uleb128 0x40
 2156 008c 18       		.uleb128 0x18
 2157 008d 9642     		.uleb128 0x2116
 2158 008f 19       		.uleb128 0x19
 2159 0090 01       		.uleb128 0x1
 2160 0091 13       		.uleb128 0x13
 2161 0092 00       		.byte	0
 2162 0093 00       		.byte	0
 2163 0094 0A       		.uleb128 0xa
 2164 0095 34       		.uleb128 0x34
 2165 0096 00       		.byte	0
 2166 0097 03       		.uleb128 0x3
 2167 0098 0E       		.uleb128 0xe
 2168 0099 3A       		.uleb128 0x3a
 2169 009a 0B       		.uleb128 0xb
 2170 009b 3B       		.uleb128 0x3b
 2171 009c 0B       		.uleb128 0xb
 2172 009d 49       		.uleb128 0x49
 2173 009e 13       		.uleb128 0x13
 2174 009f 02       		.uleb128 0x2
 2175 00a0 18       		.uleb128 0x18
 2176 00a1 00       		.byte	0
 2177 00a2 00       		.byte	0
 2178 00a3 0B       		.uleb128 0xb
 2179 00a4 2E       		.uleb128 0x2e
 2180 00a5 00       		.byte	0
 2181 00a6 3F       		.uleb128 0x3f
 2182 00a7 19       		.uleb128 0x19
 2183 00a8 03       		.uleb128 0x3
 2184 00a9 0E       		.uleb128 0xe
 2185 00aa 3A       		.uleb128 0x3a
 2186 00ab 0B       		.uleb128 0xb
 2187 00ac 3B       		.uleb128 0x3b
 2188 00ad 05       		.uleb128 0x5
 2189 00ae 27       		.uleb128 0x27
 2190 00af 19       		.uleb128 0x19
 2191 00b0 49       		.uleb128 0x49
 2192 00b1 13       		.uleb128 0x13
 2193 00b2 11       		.uleb128 0x11
 2194 00b3 01       		.uleb128 0x1
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 68


 2195 00b4 12       		.uleb128 0x12
 2196 00b5 06       		.uleb128 0x6
 2197 00b6 40       		.uleb128 0x40
 2198 00b7 18       		.uleb128 0x18
 2199 00b8 9742     		.uleb128 0x2117
 2200 00ba 19       		.uleb128 0x19
 2201 00bb 00       		.byte	0
 2202 00bc 00       		.byte	0
 2203 00bd 0C       		.uleb128 0xc
 2204 00be 2E       		.uleb128 0x2e
 2205 00bf 01       		.byte	0x1
 2206 00c0 3F       		.uleb128 0x3f
 2207 00c1 19       		.uleb128 0x19
 2208 00c2 03       		.uleb128 0x3
 2209 00c3 0E       		.uleb128 0xe
 2210 00c4 3A       		.uleb128 0x3a
 2211 00c5 0B       		.uleb128 0xb
 2212 00c6 3B       		.uleb128 0x3b
 2213 00c7 05       		.uleb128 0x5
 2214 00c8 27       		.uleb128 0x27
 2215 00c9 19       		.uleb128 0x19
 2216 00ca 11       		.uleb128 0x11
 2217 00cb 01       		.uleb128 0x1
 2218 00cc 12       		.uleb128 0x12
 2219 00cd 06       		.uleb128 0x6
 2220 00ce 40       		.uleb128 0x40
 2221 00cf 18       		.uleb128 0x18
 2222 00d0 9742     		.uleb128 0x2117
 2223 00d2 19       		.uleb128 0x19
 2224 00d3 01       		.uleb128 0x1
 2225 00d4 13       		.uleb128 0x13
 2226 00d5 00       		.byte	0
 2227 00d6 00       		.byte	0
 2228 00d7 0D       		.uleb128 0xd
 2229 00d8 05       		.uleb128 0x5
 2230 00d9 00       		.byte	0
 2231 00da 03       		.uleb128 0x3
 2232 00db 0E       		.uleb128 0xe
 2233 00dc 3A       		.uleb128 0x3a
 2234 00dd 0B       		.uleb128 0xb
 2235 00de 3B       		.uleb128 0x3b
 2236 00df 05       		.uleb128 0x5
 2237 00e0 49       		.uleb128 0x49
 2238 00e1 13       		.uleb128 0x13
 2239 00e2 02       		.uleb128 0x2
 2240 00e3 18       		.uleb128 0x18
 2241 00e4 00       		.byte	0
 2242 00e5 00       		.byte	0
 2243 00e6 0E       		.uleb128 0xe
 2244 00e7 2E       		.uleb128 0x2e
 2245 00e8 01       		.byte	0x1
 2246 00e9 3F       		.uleb128 0x3f
 2247 00ea 19       		.uleb128 0x19
 2248 00eb 03       		.uleb128 0x3
 2249 00ec 0E       		.uleb128 0xe
 2250 00ed 3A       		.uleb128 0x3a
 2251 00ee 0B       		.uleb128 0xb
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 69


 2252 00ef 3B       		.uleb128 0x3b
 2253 00f0 05       		.uleb128 0x5
 2254 00f1 27       		.uleb128 0x27
 2255 00f2 19       		.uleb128 0x19
 2256 00f3 49       		.uleb128 0x49
 2257 00f4 13       		.uleb128 0x13
 2258 00f5 11       		.uleb128 0x11
 2259 00f6 01       		.uleb128 0x1
 2260 00f7 12       		.uleb128 0x12
 2261 00f8 06       		.uleb128 0x6
 2262 00f9 40       		.uleb128 0x40
 2263 00fa 18       		.uleb128 0x18
 2264 00fb 9742     		.uleb128 0x2117
 2265 00fd 19       		.uleb128 0x19
 2266 00fe 01       		.uleb128 0x1
 2267 00ff 13       		.uleb128 0x13
 2268 0100 00       		.byte	0
 2269 0101 00       		.byte	0
 2270 0102 0F       		.uleb128 0xf
 2271 0103 34       		.uleb128 0x34
 2272 0104 00       		.byte	0
 2273 0105 03       		.uleb128 0x3
 2274 0106 0E       		.uleb128 0xe
 2275 0107 3A       		.uleb128 0x3a
 2276 0108 0B       		.uleb128 0xb
 2277 0109 3B       		.uleb128 0x3b
 2278 010a 05       		.uleb128 0x5
 2279 010b 49       		.uleb128 0x49
 2280 010c 13       		.uleb128 0x13
 2281 010d 02       		.uleb128 0x2
 2282 010e 18       		.uleb128 0x18
 2283 010f 00       		.byte	0
 2284 0110 00       		.byte	0
 2285 0111 10       		.uleb128 0x10
 2286 0112 2E       		.uleb128 0x2e
 2287 0113 00       		.byte	0
 2288 0114 3F       		.uleb128 0x3f
 2289 0115 19       		.uleb128 0x19
 2290 0116 03       		.uleb128 0x3
 2291 0117 0E       		.uleb128 0xe
 2292 0118 3A       		.uleb128 0x3a
 2293 0119 0B       		.uleb128 0xb
 2294 011a 3B       		.uleb128 0x3b
 2295 011b 05       		.uleb128 0x5
 2296 011c 27       		.uleb128 0x27
 2297 011d 19       		.uleb128 0x19
 2298 011e 49       		.uleb128 0x49
 2299 011f 13       		.uleb128 0x13
 2300 0120 11       		.uleb128 0x11
 2301 0121 01       		.uleb128 0x1
 2302 0122 12       		.uleb128 0x12
 2303 0123 06       		.uleb128 0x6
 2304 0124 40       		.uleb128 0x40
 2305 0125 18       		.uleb128 0x18
 2306 0126 9642     		.uleb128 0x2116
 2307 0128 19       		.uleb128 0x19
 2308 0129 00       		.byte	0
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 70


 2309 012a 00       		.byte	0
 2310 012b 11       		.uleb128 0x11
 2311 012c 2E       		.uleb128 0x2e
 2312 012d 01       		.byte	0x1
 2313 012e 3F       		.uleb128 0x3f
 2314 012f 19       		.uleb128 0x19
 2315 0130 03       		.uleb128 0x3
 2316 0131 0E       		.uleb128 0xe
 2317 0132 3A       		.uleb128 0x3a
 2318 0133 0B       		.uleb128 0xb
 2319 0134 3B       		.uleb128 0x3b
 2320 0135 05       		.uleb128 0x5
 2321 0136 27       		.uleb128 0x27
 2322 0137 19       		.uleb128 0x19
 2323 0138 11       		.uleb128 0x11
 2324 0139 01       		.uleb128 0x1
 2325 013a 12       		.uleb128 0x12
 2326 013b 06       		.uleb128 0x6
 2327 013c 40       		.uleb128 0x40
 2328 013d 18       		.uleb128 0x18
 2329 013e 9642     		.uleb128 0x2116
 2330 0140 19       		.uleb128 0x19
 2331 0141 01       		.uleb128 0x1
 2332 0142 13       		.uleb128 0x13
 2333 0143 00       		.byte	0
 2334 0144 00       		.byte	0
 2335 0145 12       		.uleb128 0x12
 2336 0146 0F       		.uleb128 0xf
 2337 0147 00       		.byte	0
 2338 0148 0B       		.uleb128 0xb
 2339 0149 0B       		.uleb128 0xb
 2340 014a 49       		.uleb128 0x49
 2341 014b 13       		.uleb128 0x13
 2342 014c 00       		.byte	0
 2343 014d 00       		.byte	0
 2344 014e 13       		.uleb128 0x13
 2345 014f 26       		.uleb128 0x26
 2346 0150 00       		.byte	0
 2347 0151 49       		.uleb128 0x49
 2348 0152 13       		.uleb128 0x13
 2349 0153 00       		.byte	0
 2350 0154 00       		.byte	0
 2351 0155 14       		.uleb128 0x14
 2352 0156 0B       		.uleb128 0xb
 2353 0157 01       		.byte	0x1
 2354 0158 11       		.uleb128 0x11
 2355 0159 01       		.uleb128 0x1
 2356 015a 12       		.uleb128 0x12
 2357 015b 06       		.uleb128 0x6
 2358 015c 00       		.byte	0
 2359 015d 00       		.byte	0
 2360 015e 15       		.uleb128 0x15
 2361 015f 34       		.uleb128 0x34
 2362 0160 00       		.byte	0
 2363 0161 03       		.uleb128 0x3
 2364 0162 0E       		.uleb128 0xe
 2365 0163 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 71


 2366 0164 0B       		.uleb128 0xb
 2367 0165 3B       		.uleb128 0x3b
 2368 0166 0B       		.uleb128 0xb
 2369 0167 49       		.uleb128 0x49
 2370 0168 13       		.uleb128 0x13
 2371 0169 3F       		.uleb128 0x3f
 2372 016a 19       		.uleb128 0x19
 2373 016b 02       		.uleb128 0x2
 2374 016c 18       		.uleb128 0x18
 2375 016d 00       		.byte	0
 2376 016e 00       		.byte	0
 2377 016f 00       		.byte	0
 2378              		.section	.debug_aranges,"",%progbits
 2379 0000 EC000000 		.4byte	0xec
 2380 0004 0200     		.2byte	0x2
 2381 0006 00000000 		.4byte	.Ldebug_info0
 2382 000a 04       		.byte	0x4
 2383 000b 00       		.byte	0
 2384 000c 0000     		.2byte	0
 2385 000e 0000     		.2byte	0
 2386 0010 00000000 		.4byte	.LFB2
 2387 0014 24000000 		.4byte	.LFE2-.LFB2
 2388 0018 00000000 		.4byte	.LFB3
 2389 001c 3C000000 		.4byte	.LFE3-.LFB3
 2390 0020 00000000 		.4byte	.LFB4
 2391 0024 64000000 		.4byte	.LFE4-.LFB4
 2392 0028 00000000 		.4byte	.LFB5
 2393 002c 60000000 		.4byte	.LFE5-.LFB5
 2394 0030 00000000 		.4byte	.LFB6
 2395 0034 0C000000 		.4byte	.LFE6-.LFB6
 2396 0038 00000000 		.4byte	.LFB7
 2397 003c 12000000 		.4byte	.LFE7-.LFB7
 2398 0040 00000000 		.4byte	.LFB8
 2399 0044 20000000 		.4byte	.LFE8-.LFB8
 2400 0048 00000000 		.4byte	.LFB9
 2401 004c 20000000 		.4byte	.LFE9-.LFB9
 2402 0050 00000000 		.4byte	.LFB10
 2403 0054 24000000 		.4byte	.LFE10-.LFB10
 2404 0058 00000000 		.4byte	.LFB11
 2405 005c 4C000000 		.4byte	.LFE11-.LFB11
 2406 0060 00000000 		.4byte	.LFB12
 2407 0064 22000000 		.4byte	.LFE12-.LFB12
 2408 0068 00000000 		.4byte	.LFB13
 2409 006c 30000000 		.4byte	.LFE13-.LFB13
 2410 0070 00000000 		.4byte	.LFB14
 2411 0074 44000000 		.4byte	.LFE14-.LFB14
 2412 0078 00000000 		.4byte	.LFB15
 2413 007c 12000000 		.4byte	.LFE15-.LFB15
 2414 0080 00000000 		.4byte	.LFB16
 2415 0084 20000000 		.4byte	.LFE16-.LFB16
 2416 0088 00000000 		.4byte	.LFB17
 2417 008c 20000000 		.4byte	.LFE17-.LFB17
 2418 0090 00000000 		.4byte	.LFB18
 2419 0094 20000000 		.4byte	.LFE18-.LFB18
 2420 0098 00000000 		.4byte	.LFB19
 2421 009c 2C000000 		.4byte	.LFE19-.LFB19
 2422 00a0 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 72


 2423 00a4 14000000 		.4byte	.LFE20-.LFB20
 2424 00a8 00000000 		.4byte	.LFB21
 2425 00ac 34000000 		.4byte	.LFE21-.LFB21
 2426 00b0 00000000 		.4byte	.LFB22
 2427 00b4 54000000 		.4byte	.LFE22-.LFB22
 2428 00b8 00000000 		.4byte	.LFB23
 2429 00bc 58000000 		.4byte	.LFE23-.LFB23
 2430 00c0 00000000 		.4byte	.LFB24
 2431 00c4 34000000 		.4byte	.LFE24-.LFB24
 2432 00c8 00000000 		.4byte	.LFB25
 2433 00cc 48000000 		.4byte	.LFE25-.LFB25
 2434 00d0 00000000 		.4byte	.LFB26
 2435 00d4 44000000 		.4byte	.LFE26-.LFB26
 2436 00d8 00000000 		.4byte	.LFB27
 2437 00dc B8000000 		.4byte	.LFE27-.LFB27
 2438 00e0 00000000 		.4byte	.LFB28
 2439 00e4 12000000 		.4byte	.LFE28-.LFB28
 2440 00e8 00000000 		.4byte	0
 2441 00ec 00000000 		.4byte	0
 2442              		.section	.debug_ranges,"",%progbits
 2443              	.Ldebug_ranges0:
 2444 0000 00000000 		.4byte	.LFB2
 2445 0004 24000000 		.4byte	.LFE2
 2446 0008 00000000 		.4byte	.LFB3
 2447 000c 3C000000 		.4byte	.LFE3
 2448 0010 00000000 		.4byte	.LFB4
 2449 0014 64000000 		.4byte	.LFE4
 2450 0018 00000000 		.4byte	.LFB5
 2451 001c 60000000 		.4byte	.LFE5
 2452 0020 00000000 		.4byte	.LFB6
 2453 0024 0C000000 		.4byte	.LFE6
 2454 0028 00000000 		.4byte	.LFB7
 2455 002c 12000000 		.4byte	.LFE7
 2456 0030 00000000 		.4byte	.LFB8
 2457 0034 20000000 		.4byte	.LFE8
 2458 0038 00000000 		.4byte	.LFB9
 2459 003c 20000000 		.4byte	.LFE9
 2460 0040 00000000 		.4byte	.LFB10
 2461 0044 24000000 		.4byte	.LFE10
 2462 0048 00000000 		.4byte	.LFB11
 2463 004c 4C000000 		.4byte	.LFE11
 2464 0050 00000000 		.4byte	.LFB12
 2465 0054 22000000 		.4byte	.LFE12
 2466 0058 00000000 		.4byte	.LFB13
 2467 005c 30000000 		.4byte	.LFE13
 2468 0060 00000000 		.4byte	.LFB14
 2469 0064 44000000 		.4byte	.LFE14
 2470 0068 00000000 		.4byte	.LFB15
 2471 006c 12000000 		.4byte	.LFE15
 2472 0070 00000000 		.4byte	.LFB16
 2473 0074 20000000 		.4byte	.LFE16
 2474 0078 00000000 		.4byte	.LFB17
 2475 007c 20000000 		.4byte	.LFE17
 2476 0080 00000000 		.4byte	.LFB18
 2477 0084 20000000 		.4byte	.LFE18
 2478 0088 00000000 		.4byte	.LFB19
 2479 008c 2C000000 		.4byte	.LFE19
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 73


 2480 0090 00000000 		.4byte	.LFB20
 2481 0094 14000000 		.4byte	.LFE20
 2482 0098 00000000 		.4byte	.LFB21
 2483 009c 34000000 		.4byte	.LFE21
 2484 00a0 00000000 		.4byte	.LFB22
 2485 00a4 54000000 		.4byte	.LFE22
 2486 00a8 00000000 		.4byte	.LFB23
 2487 00ac 58000000 		.4byte	.LFE23
 2488 00b0 00000000 		.4byte	.LFB24
 2489 00b4 34000000 		.4byte	.LFE24
 2490 00b8 00000000 		.4byte	.LFB25
 2491 00bc 48000000 		.4byte	.LFE25
 2492 00c0 00000000 		.4byte	.LFB26
 2493 00c4 44000000 		.4byte	.LFE26
 2494 00c8 00000000 		.4byte	.LFB27
 2495 00cc B8000000 		.4byte	.LFE27
 2496 00d0 00000000 		.4byte	.LFB28
 2497 00d4 12000000 		.4byte	.LFE28
 2498 00d8 00000000 		.4byte	0
 2499 00dc 00000000 		.4byte	0
 2500              		.section	.debug_line,"",%progbits
 2501              	.Ldebug_line0:
 2502 0000 ED020000 		.section	.debug_str,"MS",%progbits,1
 2502      02004500 
 2502      00000201 
 2502      FB0E0D00 
 2502      01010101 
 2503              	.LASF10:
 2504 0000 75696E74 		.ascii	"uint16\000"
 2504      313600
 2505              	.LASF54:
 2506 0007 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2506      5F315F43 
 2506      6C656172 
 2506      54784275 
 2506      66666572 
 2507              	.LASF44:
 2508 001c 74784461 		.ascii	"txDataByte\000"
 2508      74614279 
 2508      746500
 2509              	.LASF46:
 2510 0027 55415254 		.ascii	"UART_1_PutChar\000"
 2510      5F315F50 
 2510      75744368 
 2510      617200
 2511              	.LASF48:
 2512 0036 73747269 		.ascii	"string\000"
 2512      6E6700
 2513              	.LASF55:
 2514 003d 55415254 		.ascii	"UART_1_SendBreak\000"
 2514      5F315F53 
 2514      656E6442 
 2514      7265616B 
 2514      00
 2515              	.LASF27:
 2516 004e 55415254 		.ascii	"UART_1_ReadRxData\000"
 2516      5F315F52 
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 74


 2516      65616452 
 2516      78446174 
 2516      6100
 2517              	.LASF7:
 2518 0060 6C6F6E67 		.ascii	"long long unsigned int\000"
 2518      206C6F6E 
 2518      6720756E 
 2518      7369676E 
 2518      65642069 
 2519              	.LASF53:
 2520 0077 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2520      5F315F47 
 2520      65745478 
 2520      42756666 
 2520      65725369 
 2521              	.LASF6:
 2522 008e 6C6F6E67 		.ascii	"long long int\000"
 2522      206C6F6E 
 2522      6720696E 
 2522      7400
 2523              	.LASF0:
 2524 009c 7369676E 		.ascii	"signed char\000"
 2524      65642063 
 2524      68617200 
 2525              	.LASF52:
 2526 00a8 55415254 		.ascii	"UART_1_PutCRLF\000"
 2526      5F315F50 
 2526      75744352 
 2526      4C4600
 2527              	.LASF4:
 2528 00b7 6C6F6E67 		.ascii	"long int\000"
 2528      20696E74 
 2528      00
 2529              	.LASF17:
 2530 00c0 55415254 		.ascii	"UART_1_Start\000"
 2530      5F315F53 
 2530      74617274 
 2530      00
 2531              	.LASF9:
 2532 00cd 75696E74 		.ascii	"uint8\000"
 2532      3800
 2533              	.LASF12:
 2534 00d3 646F7562 		.ascii	"double\000"
 2534      6C6500
 2535              	.LASF38:
 2536 00da 61646472 		.ascii	"addressMode\000"
 2536      6573734D 
 2536      6F646500 
 2537              	.LASF61:
 2538 00e6 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_1.c\000"
 2538      6E657261 
 2538      7465645F 
 2538      536F7572 
 2538      63655C50 
 2539              	.LASF24:
 2540 0108 636F6E74 		.ascii	"control\000"
 2540      726F6C00 
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 75


 2541              	.LASF23:
 2542 0110 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 2542      5F315F53 
 2542      65745278 
 2542      496E7465 
 2542      72727570 
 2543              	.LASF56:
 2544 012a 7265744D 		.ascii	"retMode\000"
 2544      6F646500 
 2545              	.LASF8:
 2546 0132 756E7369 		.ascii	"unsigned int\000"
 2546      676E6564 
 2546      20696E74 
 2546      00
 2547              	.LASF45:
 2548 013f 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2548      5F315F52 
 2548      65616454 
 2548      78537461 
 2548      74757300 
 2549              	.LASF5:
 2550 0153 6C6F6E67 		.ascii	"long unsigned int\000"
 2550      20756E73 
 2550      69676E65 
 2550      6420696E 
 2550      7400
 2551              	.LASF35:
 2552 0165 73697A65 		.ascii	"size\000"
 2552      00
 2553              	.LASF3:
 2554 016a 73686F72 		.ascii	"short unsigned int\000"
 2554      7420756E 
 2554      7369676E 
 2554      65642069 
 2554      6E7400
 2555              	.LASF19:
 2556 017d 55415254 		.ascii	"UART_1_Enable\000"
 2556      5F315F45 
 2556      6E61626C 
 2556      6500
 2557              	.LASF59:
 2558 018b 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2558      5F315F53 
 2558      65745478 
 2558      41646472 
 2558      6573734D 
 2559              	.LASF58:
 2560 01a3 74785F70 		.ascii	"tx_period\000"
 2560      6572696F 
 2560      6400
 2561              	.LASF25:
 2562 01ad 696E7453 		.ascii	"intSrc\000"
 2562      726300
 2563              	.LASF32:
 2564 01b4 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2564      5F315F52 
 2564      65616443 
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 76


 2564      6F6E7472 
 2564      6F6C5265 
 2565              	.LASF20:
 2566 01cf 55415254 		.ascii	"UART_1_Stop\000"
 2566      5F315F53 
 2566      746F7000 
 2567              	.LASF33:
 2568 01db 55415254 		.ascii	"UART_1_GetByte\000"
 2568      5F315F47 
 2568      65744279 
 2568      746500
 2569              	.LASF47:
 2570 01ea 55415254 		.ascii	"UART_1_PutString\000"
 2570      5F315F50 
 2570      75745374 
 2570      72696E67 
 2570      00
 2571              	.LASF43:
 2572 01fb 55415254 		.ascii	"UART_1_WriteTxData\000"
 2572      5F315F57 
 2572      72697465 
 2572      54784461 
 2572      746100
 2573              	.LASF57:
 2574 020e 746D7053 		.ascii	"tmpStat\000"
 2574      74617400 
 2575              	.LASF62:
 2576 0216 453A5C44 		.ascii	"E:\\Documents\\UROPs\\Biomech UROP\\battery board c"
 2576      6F63756D 
 2576      656E7473 
 2576      5C55524F 
 2576      50735C42 
 2577 0245 6F64655C 		.ascii	"ode\\Battery_Board.cydsn\000"
 2577      42617474 
 2577      6572795F 
 2577      426F6172 
 2577      642E6379 
 2578              	.LASF16:
 2579 025d 73697A65 		.ascii	"sizetype\000"
 2579      74797065 
 2579      00
 2580              	.LASF39:
 2581 0266 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 2581      5F315F53 
 2581      65745278 
 2581      41646472 
 2581      65737331 
 2582              	.LASF41:
 2583 027b 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 2583      5F315F53 
 2583      65745278 
 2583      41646472 
 2583      65737332 
 2584              	.LASF40:
 2585 0290 61646472 		.ascii	"address\000"
 2585      65737300 
 2586              	.LASF31:
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 77


 2587 0298 72785374 		.ascii	"rxStatus\000"
 2587      61747573 
 2587      00
 2588              	.LASF42:
 2589 02a1 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2589      5F315F53 
 2589      65745478 
 2589      496E7465 
 2589      72727570 
 2590              	.LASF11:
 2591 02bb 666C6F61 		.ascii	"float\000"
 2591      7400
 2592              	.LASF60:
 2593 02c1 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2593      4320342E 
 2593      382E3420 
 2593      32303134 
 2593      30353236 
 2594 02f4 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2594      20726576 
 2594      6973696F 
 2594      6E203231 
 2594      31333538 
 2595 0327 30202D66 		.ascii	"0 -ffunction-sections\000"
 2595      66756E63 
 2595      74696F6E 
 2595      2D736563 
 2595      74696F6E 
 2596              	.LASF36:
 2597 033d 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 2597      5F315F43 
 2597      6C656172 
 2597      52784275 
 2597      66666572 
 2598              	.LASF37:
 2599 0352 55415254 		.ascii	"UART_1_SetRxAddressMode\000"
 2599      5F315F53 
 2599      65745278 
 2599      41646472 
 2599      6573734D 
 2600              	.LASF15:
 2601 036a 72656738 		.ascii	"reg8\000"
 2601      00
 2602              	.LASF1:
 2603 036f 756E7369 		.ascii	"unsigned char\000"
 2603      676E6564 
 2603      20636861 
 2603      7200
 2604              	.LASF2:
 2605 037d 73686F72 		.ascii	"short int\000"
 2605      7420696E 
 2605      7400
 2606              	.LASF22:
 2607 0387 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 2607      5F315F57 
 2607      72697465 
 2607      436F6E74 
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 78


 2607      726F6C52 
 2608              	.LASF63:
 2609 03a3 55415254 		.ascii	"UART_1_initVar\000"
 2609      5F315F69 
 2609      6E697456 
 2609      617200
 2610              	.LASF51:
 2611 03b2 62797465 		.ascii	"byteCount\000"
 2611      436F756E 
 2611      7400
 2612              	.LASF34:
 2613 03bc 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 2613      5F315F47 
 2613      65745278 
 2613      42756666 
 2613      65725369 
 2614              	.LASF26:
 2615 03d3 72784461 		.ascii	"rxData\000"
 2615      746100
 2616              	.LASF14:
 2617 03da 63686172 		.ascii	"char\000"
 2617      00
 2618              	.LASF13:
 2619 03df 63686172 		.ascii	"char8\000"
 2619      3800
 2620              	.LASF18:
 2621 03e5 55415254 		.ascii	"UART_1_Init\000"
 2621      5F315F49 
 2621      6E697400 
 2622              	.LASF21:
 2623 03f1 656E6162 		.ascii	"enableInterrupts\000"
 2623      6C65496E 
 2623      74657272 
 2623      75707473 
 2623      00
 2624              	.LASF29:
 2625 0402 73746174 		.ascii	"status\000"
 2625      757300
 2626              	.LASF28:
 2627 0409 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 2627      5F315F52 
 2627      65616452 
 2627      78537461 
 2627      74757300 
 2628              	.LASF30:
 2629 041d 55415254 		.ascii	"UART_1_GetChar\000"
 2629      5F315F47 
 2629      65744368 
 2629      617200
 2630              	.LASF49:
 2631 042c 6275665F 		.ascii	"buf_index\000"
 2631      696E6465 
 2631      7800
 2632              	.LASF50:
 2633 0436 55415254 		.ascii	"UART_1_PutArray\000"
 2633      5F315F50 
 2633      75744172 
ARM GAS  C:\Users\Steven\AppData\Local\Temp\cc234HYa.s 			page 79


 2633      72617900 
 2634              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
