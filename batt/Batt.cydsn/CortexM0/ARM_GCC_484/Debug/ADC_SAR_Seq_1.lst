ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_SAR_Seq_1_initVar
  18              		.bss
  19              		.type	ADC_SAR_Seq_1_initVar, %object
  20              		.size	ADC_SAR_Seq_1_initVar, 1
  21              	ADC_SAR_Seq_1_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_SAR_Seq_1_offset,8,4
  24              		.comm	ADC_SAR_Seq_1_countsPer10Volt,16,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_SAR_Seq_1_channelsConfig, %object
  28              		.size	ADC_SAR_Seq_1_channelsConfig, 16
  29              	ADC_SAR_Seq_1_channelsConfig:
  30 0000 00000000 		.space	16
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_SAR_Seq_1_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_SAR_Seq_1_Start, %function
  37              	ADC_SAR_Seq_1_Start:
  38              	.LFB2:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 2


  16:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u, 0x00000000u, 0x00000000u
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 3


  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  48              		.loc 1 66 0
  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  53              		.loc 1 68 0
  54 000c FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  55              		.loc 1 69 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		mov	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  60              		.loc 1 71 0
  61 0016 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  62              		.loc 1 72 0
  63 001a BD46     		mov	sp, r7
  64              		@ sp needed
  65 001c 80BD     		pop	{r7, pc}
  66              	.L4:
  67 001e C046     		.align	2
  68              	.L3:
  69 0020 00000000 		.word	ADC_SAR_Seq_1_initVar
  70              		.cfi_endproc
  71              	.LFE2:
  72              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
  73              		.global	__aeabi_idiv
  74              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  75              		.align	2
  76              		.global	ADC_SAR_Seq_1_Init
  77              		.code	16
  78              		.thumb_func
  79              		.type	ADC_SAR_Seq_1_Init, %function
  80              	ADC_SAR_Seq_1_Init:
  81              	.LFB3:
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 4


  88:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  82              		.loc 1 95 0
  83              		.cfi_startproc
  84 0000 90B5     		push	{r4, r7, lr}
  85              		.cfi_def_cfa_offset 12
  86              		.cfi_offset 4, -12
  87              		.cfi_offset 7, -8
  88              		.cfi_offset 14, -4
  89 0002 85B0     		sub	sp, sp, #20
  90              		.cfi_def_cfa_offset 32
  91 0004 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 5


 134:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 139:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  93              		.loc 1 140 0
  94 0006 0F20     		mov	r0, #15
  95 0008 0321     		mov	r1, #3
  96 000a FFF7FEFF 		bl	CyIntSetPriority
 141:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  97              		.loc 1 141 0
  98 000e 624B     		ldr	r3, .L16
  99 0010 0F20     		mov	r0, #15
 100 0012 191C     		mov	r1, r3
 101 0014 FFF7FEFF 		bl	CyIntSetVector
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
 102              		.loc 1 145 0
 103 0018 604B     		ldr	r3, .L16+4
 104 001a 0722     		mov	r2, #7
 105 001c 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 106              		.loc 1 146 0
 107 001e 604B     		ldr	r3, .L16+8
 108 0020 5F4A     		ldr	r2, .L16+8
 109 0022 1168     		ldr	r1, [r2]
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
 110              		.loc 1 148 0
 111 0024 5F4A     		ldr	r2, .L16+12
 112 0026 1268     		ldr	r2, [r2]
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 113              		.loc 1 146 0
 114 0028 002A     		cmp	r2, #0
 115 002a 01DA     		bge	.L6
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 116              		.loc 1 146 0 is_stmt 0 discriminator 1
 117 002c 5E4A     		ldr	r2, .L16+16
 118 002e 00E0     		b	.L7
 119              	.L6:
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 120              		.loc 1 146 0 discriminator 2
 121 0030 5E4A     		ldr	r2, .L16+20
 122              	.L7:
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 123              		.loc 1 146 0 discriminator 3
 124 0032 0A43     		orr	r2, r1
 125 0034 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
 126              		.loc 1 150 0 is_stmt 1 discriminator 3
 127 0036 5E4B     		ldr	r3, .L16+24
 128 0038 5E4A     		ldr	r2, .L16+28
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 6


 129 003a 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 130              		.loc 1 151 0 discriminator 3
 131 003c 5E4B     		ldr	r3, .L16+32
 132 003e 5F4A     		ldr	r2, .L16+36
 133 0040 1A60     		str	r2, [r3]
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
 134              		.loc 1 152 0 discriminator 3
 135 0042 5F4B     		ldr	r3, .L16+40
 136 0044 0022     		mov	r2, #0
 137 0046 1A60     		str	r2, [r3]
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
 138              		.loc 1 153 0 discriminator 3
 139 0048 5E4B     		ldr	r3, .L16+44
 140 004a 5F4A     		ldr	r2, .L16+48
 141 004c 1A60     		str	r2, [r3]
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 142              		.loc 1 154 0 discriminator 3
 143 004e 5F4B     		ldr	r3, .L16+52
 144 0050 5D4A     		ldr	r2, .L16+48
 145 0052 1A60     		str	r2, [r3]
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 146              		.loc 1 158 0 discriminator 3
 147 0054 5E4B     		ldr	r3, .L16+56
 148 0056 5E4A     		ldr	r2, .L16+56
 149 0058 1268     		ldr	r2, [r2]
 150 005a 8021     		mov	r1, #128
 151 005c 4902     		lsl	r1, r1, #9
 152 005e 0A43     		orr	r2, r1
 153 0060 1A60     		str	r2, [r3]
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 154              		.loc 1 161 0 discriminator 3
 155 0062 5C4B     		ldr	r3, .L16+60
 156 0064 5B4A     		ldr	r2, .L16+60
 157 0066 1268     		ldr	r2, [r2]
 158 0068 8021     		mov	r1, #128
 159 006a 4902     		lsl	r1, r1, #9
 160 006c 0A43     		orr	r2, r1
 161 006e 1A60     		str	r2, [r3]
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 162              		.loc 1 165 0 discriminator 3
 163 0070 594B     		ldr	r3, .L16+64
 164 0072 0022     		mov	r2, #0
 165 0074 1A60     		str	r2, [r3]
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
 166              		.loc 1 166 0 discriminator 3
 167 0076 594B     		ldr	r3, .L16+68
 168 0078 0022     		mov	r2, #0
 169 007a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 7


 167:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 170              		.loc 1 167 0 discriminator 3
 171 007c 584B     		ldr	r3, .L16+72
 172 007e 0122     		mov	r2, #1
 173 0080 1A60     		str	r2, [r3]
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_PSOC4)
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_PSOC4) */
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 174              		.loc 1 174 0 discriminator 3
 175 0082 584B     		ldr	r3, .L16+76
 176 0084 1B68     		ldr	r3, [r3]
 177 0086 7B60     		str	r3, [r7, #4]
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 178              		.loc 1 175 0 discriminator 3
 179 0088 7A68     		ldr	r2, [r7, #4]
 180 008a 574B     		ldr	r3, .L16+80
 181 008c 1340     		and	r3, r2
 182 008e 7B60     		str	r3, [r7, #4]
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_PSOC4)
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 183              		.loc 1 188 0 discriminator 3
 184 0090 7B68     		ldr	r3, [r7, #4]
 185 0092 8022     		mov	r2, #128
 186 0094 9205     		lsl	r2, r2, #22
 187 0096 1343     		orr	r3, r2
 188 0098 7B60     		str	r3, [r7, #4]
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 189              		.loc 1 189 0 discriminator 3
 190 009a 7B68     		ldr	r3, [r7, #4]
 191 009c 0122     		mov	r2, #1
 192 009e 9343     		bic	r3, r2
 193 00a0 7B60     		str	r3, [r7, #4]
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_PSOC4) */
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 194              		.loc 1 194 0 discriminator 3
 195 00a2 504B     		ldr	r3, .L16+76
 196 00a4 7A68     		ldr	r2, [r7, #4]
 197 00a6 1A60     		str	r2, [r3]
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 8


 196:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 197:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 198              		.loc 1 200 0 discriminator 3
 199 00a8 0023     		mov	r3, #0
 200 00aa FB60     		str	r3, [r7, #12]
 201 00ac 6DE0     		b	.L8
 202              	.L15:
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 203              		.loc 1 202 0
 204 00ae 4F4B     		ldr	r3, .L16+84
 205 00b0 FA68     		ldr	r2, [r7, #12]
 206 00b2 9200     		lsl	r2, r2, #2
 207 00b4 D258     		ldr	r2, [r2, r3]
 208 00b6 DC23     		mov	r3, #220
 209 00b8 9B01     		lsl	r3, r3, #6
 210 00ba 1340     		and	r3, r2
 211 00bc 7B60     		str	r3, [r7, #4]
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 212              		.loc 1 204 0
 213 00be 4C4A     		ldr	r2, .L16+88
 214 00c0 FB68     		ldr	r3, [r7, #12]
 215 00c2 D318     		add	r3, r2, r3
 216 00c4 1B78     		ldrb	r3, [r3]
 217 00c6 7A68     		ldr	r2, [r7, #4]
 218 00c8 1343     		orr	r3, r2
 219 00ca 7B60     		str	r3, [r7, #4]
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 220              		.loc 1 221 0
 221 00cc FB68     		ldr	r3, [r7, #12]
 222 00ce 9B00     		lsl	r3, r3, #2
 223 00d0 484A     		ldr	r2, .L16+92
 224 00d2 9B18     		add	r3, r3, r2
 225 00d4 7A68     		ldr	r2, [r7, #4]
 226 00d6 1A60     		str	r2, [r3]
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 9


 227              		.loc 1 223 0
 228 00d8 444B     		ldr	r3, .L16+84
 229 00da FA68     		ldr	r2, [r7, #12]
 230 00dc 9200     		lsl	r2, r2, #2
 231 00de D258     		ldr	r2, [r2, r3]
 232 00e0 0123     		mov	r3, #1
 233 00e2 1340     		and	r3, r2
 234 00e4 0AD0     		beq	.L9
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 235              		.loc 1 225 0
 236 00e6 3C4B     		ldr	r3, .L16+64
 237 00e8 3B4A     		ldr	r2, .L16+64
 238 00ea 1168     		ldr	r1, [r2]
 239 00ec FA68     		ldr	r2, [r7, #12]
 240 00ee 0120     		mov	r0, #1
 241 00f0 041C     		mov	r4, r0
 242 00f2 9440     		lsl	r4, r4, r2
 243 00f4 221C     		mov	r2, r4
 244 00f6 92B2     		uxth	r2, r2
 245 00f8 0A43     		orr	r2, r1
 246 00fa 1A60     		str	r2, [r3]
 247              	.L9:
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 248              		.loc 1 228 0
 249 00fc 3B4B     		ldr	r3, .L16+84
 250 00fe FA68     		ldr	r2, [r7, #12]
 251 0100 9200     		lsl	r2, r2, #2
 252 0102 D258     		ldr	r2, [r2, r3]
 253 0104 0223     		mov	r3, #2
 254 0106 1340     		and	r3, r2
 255 0108 0AD0     		beq	.L10
 229:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 256              		.loc 1 230 0
 257 010a 344B     		ldr	r3, .L16+68
 258 010c 334A     		ldr	r2, .L16+68
 259 010e 1168     		ldr	r1, [r2]
 260 0110 FA68     		ldr	r2, [r7, #12]
 261 0112 0120     		mov	r0, #1
 262 0114 041C     		mov	r4, r0
 263 0116 9440     		lsl	r4, r4, r2
 264 0118 221C     		mov	r2, r4
 265 011a 92B2     		uxth	r2, r2
 266 011c 0A43     		orr	r2, r1
 267 011e 1A60     		str	r2, [r3]
 268              	.L10:
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 10


 239:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 269              		.loc 1 250 0
 270 0120 324B     		ldr	r3, .L16+84
 271 0122 FA68     		ldr	r2, [r7, #12]
 272 0124 9200     		lsl	r2, r2, #2
 273 0126 D258     		ldr	r2, [r2, r3]
 274 0128 8023     		mov	r3, #128
 275 012a 9B00     		lsl	r3, r3, #2
 276 012c 1340     		and	r3, r2
 277 012e 03D0     		beq	.L11
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 278              		.loc 1 252 0
 279 0130 8023     		mov	r3, #128
 280 0132 5B00     		lsl	r3, r3, #1
 281 0134 BB60     		str	r3, [r7, #8]
 282 0136 02E0     		b	.L12
 283              	.L11:
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 284              		.loc 1 256 0
 285 0138 8023     		mov	r3, #128
 286 013a 5B01     		lsl	r3, r3, #5
 287 013c BB60     		str	r3, [r7, #8]
 288              	.L12:
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 289              		.loc 1 259 0
 290 013e 2B4B     		ldr	r3, .L16+84
 291 0140 FA68     		ldr	r2, [r7, #12]
 292 0142 9200     		lsl	r2, r2, #2
 293 0144 D258     		ldr	r2, [r2, r3]
 294 0146 8023     		mov	r3, #128
 295 0148 5B00     		lsl	r3, r3, #1
 296 014a 1340     		and	r3, r2
 297 014c 05D1     		bne	.L13
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 11


 298              		.loc 1 266 0
 299 014e 2A4B     		ldr	r3, .L16+96
 300 0150 FA68     		ldr	r2, [r7, #12]
 301 0152 5200     		lsl	r2, r2, #1
 302 0154 0021     		mov	r1, #0
 303 0156 D152     		strh	r1, [r2, r3]
 304 0158 04E0     		b	.L14
 305              	.L13:
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 275:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 306              		.loc 1 275 0
 307 015a 274B     		ldr	r3, .L16+96
 308 015c FA68     		ldr	r2, [r7, #12]
 309 015e 5200     		lsl	r2, r2, #1
 310 0160 0021     		mov	r1, #0
 311 0162 D152     		strh	r1, [r2, r3]
 312              	.L14:
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 277:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 313              		.loc 1 279 0
 314 0164 BB68     		ldr	r3, [r7, #8]
 315 0166 254A     		ldr	r2, .L16+100
 316 0168 5343     		mul	r3, r2
 317 016a 254A     		ldr	r2, .L16+104
 318 016c 9B18     		add	r3, r3, r2
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 319              		.loc 1 280 0
 320 016e 181C     		mov	r0, r3
 321 0170 2449     		ldr	r1, .L16+108
 322 0172 FFF7FEFF 		bl	__aeabi_idiv
 323 0176 031C     		mov	r3, r0
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 324              		.loc 1 279 0
 325 0178 9BB2     		uxth	r3, r3
 326 017a 19B2     		sxth	r1, r3
 327 017c 224B     		ldr	r3, .L16+112
 328 017e FA68     		ldr	r2, [r7, #12]
 329 0180 9200     		lsl	r2, r2, #2
 330 0182 D150     		str	r1, [r2, r3]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 331              		.loc 1 200 0
 332 0184 FB68     		ldr	r3, [r7, #12]
 333 0186 0133     		add	r3, r3, #1
 334 0188 FB60     		str	r3, [r7, #12]
 335              	.L8:
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 336              		.loc 1 200 0 is_stmt 0 discriminator 1
 337 018a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 12


 338 018c 032B     		cmp	r3, #3
 339 018e 8ED9     		bls	.L15
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 340              		.loc 1 282 0 is_stmt 1
 341 0190 BD46     		mov	sp, r7
 342 0192 05B0     		add	sp, sp, #20
 343              		@ sp needed
 344 0194 90BD     		pop	{r4, r7, pc}
 345              	.L17:
 346 0196 C046     		.align	2
 347              	.L16:
 348 0198 00000000 		.word	ADC_SAR_Seq_1_ISR
 349 019c 20003A40 		.word	1077542944
 350 01a0 00003A40 		.word	1077542912
 351 01a4 80033A40 		.word	1077543808
 352 01a8 70201013 		.word	319823984
 353 01ac 70200013 		.word	318775408
 354 01b0 04003A40 		.word	1077542916
 355 01b4 8C000080 		.word	-2147483508
 356 01b8 18003A40 		.word	1077542936
 357 01bc 0000FF07 		.word	134152192
 358 01c0 1C003A40 		.word	1077542940
 359 01c4 10003A40 		.word	1077542928
 360 01c8 02000200 		.word	131074
 361 01cc 14003A40 		.word	1077542932
 362 01d0 00033A40 		.word	1077543680
 363 01d4 40033A40 		.word	1077543744
 364 01d8 28023A40 		.word	1077543464
 365 01dc 38023A40 		.word	1077543480
 366 01e0 18023A40 		.word	1077543448
 367 01e4 30003A40 		.word	1077542960
 368 01e8 FFFFFFDF 		.word	-536870913
 369 01ec 00000000 		.word	ADC_SAR_Seq_1_channelsConfig
 370 01f0 10000000 		.word	ADC_SAR_Seq_1_InputsPlacement.4747
 371 01f4 80003A40 		.word	1077543040
 372 01f8 00000000 		.word	ADC_SAR_Seq_1_offset
 373 01fc 10270000 		.word	10000
 374 0200 E40C0000 		.word	3300
 375 0204 C8190000 		.word	6600
 376 0208 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 377              		.cfi_endproc
 378              	.LFE3:
 379              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 380              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 381              		.align	2
 382              		.global	ADC_SAR_Seq_1_Enable
 383              		.code	16
 384              		.thumb_func
 385              		.type	ADC_SAR_Seq_1_Enable, %function
 386              	ADC_SAR_Seq_1_Enable:
 387              	.LFB4:
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 13


 288:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 388              		.loc 1 299 0
 389              		.cfi_startproc
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 396              		.loc 1 300 0
 397 0004 0A4B     		ldr	r3, .L21
 398 0006 1B68     		ldr	r3, [r3]
 399 0008 002B     		cmp	r3, #0
 400 000a 0EDB     		blt	.L18
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_PSOC4)
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 401              		.loc 1 304 0
 402 000c C046     		mov	r8, r8
 403              	.L20:
 404              		.loc 1 304 0 is_stmt 0 discriminator 1
 405 000e 094B     		ldr	r3, .L21+4
 406 0010 1B68     		ldr	r3, [r3]
 407 0012 002B     		cmp	r3, #0
 408 0014 FBDB     		blt	.L20
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle for to avoid deadlock */
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_PSOC4) */
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 409              		.loc 1 310 0 is_stmt 1
 410 0016 064B     		ldr	r3, .L21
 411 0018 054A     		ldr	r2, .L21
 412 001a 1268     		ldr	r2, [r2]
 413 001c 8021     		mov	r1, #128
 414 001e 0906     		lsl	r1, r1, #24
 415 0020 0A43     		orr	r2, r1
 416 0022 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 417              		.loc 1 313 0
 418 0024 0A20     		mov	r0, #10
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 14


 419 0026 FFF7FEFF 		bl	CyDelayUs
 420              	.L18:
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 421              		.loc 1 315 0
 422 002a BD46     		mov	sp, r7
 423              		@ sp needed
 424 002c 80BD     		pop	{r7, pc}
 425              	.L22:
 426 002e C046     		.align	2
 427              	.L21:
 428 0030 00003A40 		.word	1077542912
 429 0034 08023A40 		.word	1077543432
 430              		.cfi_endproc
 431              	.LFE4:
 432              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 433              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 434              		.align	2
 435              		.global	ADC_SAR_Seq_1_Stop
 436              		.code	16
 437              		.thumb_func
 438              		.type	ADC_SAR_Seq_1_Stop, %function
 439              	ADC_SAR_Seq_1_Stop:
 440              	.LFB5:
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 321:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 441              		.loc 1 334 0
 442              		.cfi_startproc
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 449              		.loc 1 335 0
 450 0004 034B     		ldr	r3, .L24
 451 0006 034A     		ldr	r2, .L24
 452 0008 1268     		ldr	r2, [r2]
 453 000a 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 15


 454 000c 5208     		lsr	r2, r2, #1
 455 000e 1A60     		str	r2, [r3]
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 456              		.loc 1 336 0
 457 0010 BD46     		mov	sp, r7
 458              		@ sp needed
 459 0012 80BD     		pop	{r7, pc}
 460              	.L25:
 461              		.align	2
 462              	.L24:
 463 0014 00003A40 		.word	1077542912
 464              		.cfi_endproc
 465              	.LFE5:
 466              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 467              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 468              		.align	2
 469              		.global	ADC_SAR_Seq_1_StartConvert
 470              		.code	16
 471              		.thumb_func
 472              		.type	ADC_SAR_Seq_1_StartConvert, %function
 473              	ADC_SAR_Seq_1_StartConvert:
 474              	.LFB6:
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 348:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 475              		.loc 1 360 0
 476              		.cfi_startproc
 477 0000 80B5     		push	{r7, lr}
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 483              		.loc 1 362 0
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 16


 484 0004 044B     		ldr	r3, .L27
 485 0006 044A     		ldr	r2, .L27
 486 0008 1268     		ldr	r2, [r2]
 487 000a 8021     		mov	r1, #128
 488 000c 4902     		lsl	r1, r1, #9
 489 000e 0A43     		orr	r2, r1
 490 0010 1A60     		str	r2, [r3]
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 491              		.loc 1 367 0
 492 0012 BD46     		mov	sp, r7
 493              		@ sp needed
 494 0014 80BD     		pop	{r7, pc}
 495              	.L28:
 496 0016 C046     		.align	2
 497              	.L27:
 498 0018 04003A40 		.word	1077542916
 499              		.cfi_endproc
 500              	.LFE6:
 501              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 502              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 503              		.align	2
 504              		.global	ADC_SAR_Seq_1_StopConvert
 505              		.code	16
 506              		.thumb_func
 507              		.type	ADC_SAR_Seq_1_StopConvert, %function
 508              	ADC_SAR_Seq_1_StopConvert:
 509              	.LFB7:
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 379:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 510              		.loc 1 385 0
 511              		.cfi_startproc
 512 0000 80B5     		push	{r7, lr}
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 7, -8
 515              		.cfi_offset 14, -4
 516 0002 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 17


 386:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 518              		.loc 1 387 0
 519 0004 034B     		ldr	r3, .L30
 520 0006 034A     		ldr	r2, .L30
 521 0008 1168     		ldr	r1, [r2]
 522 000a 034A     		ldr	r2, .L30+4
 523 000c 0A40     		and	r2, r1
 524 000e 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 525              		.loc 1 389 0
 526 0010 BD46     		mov	sp, r7
 527              		@ sp needed
 528 0012 80BD     		pop	{r7, pc}
 529              	.L31:
 530              		.align	2
 531              	.L30:
 532 0014 04003A40 		.word	1077542916
 533 0018 FFFFFEFF 		.word	-65537
 534              		.cfi_endproc
 535              	.LFE7:
 536              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 537              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 538              		.align	2
 539              		.global	ADC_SAR_Seq_1_IsEndConversion
 540              		.code	16
 541              		.thumb_func
 542              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 543              	ADC_SAR_Seq_1_IsEndConversion:
 544              	.LFB8:
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 409:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 18


 416:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 545              		.loc 1 419 0
 546              		.cfi_startproc
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 84B0     		sub	sp, sp, #16
 552              		.cfi_def_cfa_offset 24
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 7860     		str	r0, [r7, #4]
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 556              		.loc 1 420 0
 557 0008 0023     		mov	r3, #0
 558 000a FB60     		str	r3, [r7, #12]
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 559              		.loc 1 422 0
 560 000c 7A68     		ldr	r2, [r7, #4]
 561 000e 0323     		mov	r3, #3
 562 0010 1340     		and	r3, r2
 563 0012 11D0     		beq	.L33
 564              	.L35:
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 565              		.loc 1 426 0 discriminator 1
 566 0014 0B4B     		ldr	r3, .L37
 567 0016 1A68     		ldr	r2, [r3]
 568 0018 0123     		mov	r3, #1
 569 001a 1340     		and	r3, r2
 570 001c FB60     		str	r3, [r7, #12]
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 571              		.loc 1 427 0 discriminator 1
 572 001e FB68     		ldr	r3, [r7, #12]
 573 0020 002B     		cmp	r3, #0
 574 0022 03D1     		bne	.L34
 575 0024 7A68     		ldr	r2, [r7, #4]
 576 0026 0223     		mov	r3, #2
 577 0028 1340     		and	r3, r2
 578 002a F3D1     		bne	.L35
 579              	.L34:
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 580              		.loc 1 429 0
 581 002c FB68     		ldr	r3, [r7, #12]
 582 002e 002B     		cmp	r3, #0
 583 0030 02D0     		beq	.L33
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 584              		.loc 1 432 0
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 19


 585 0032 044B     		ldr	r3, .L37
 586 0034 0122     		mov	r2, #1
 587 0036 1A60     		str	r2, [r3]
 588              	.L33:
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 439:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 589              		.loc 1 453 0
 590 0038 FB68     		ldr	r3, [r7, #12]
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 591              		.loc 1 454 0
 592 003a 181C     		mov	r0, r3
 593 003c BD46     		mov	sp, r7
 594 003e 04B0     		add	sp, sp, #16
 595              		@ sp needed
 596 0040 80BD     		pop	{r7, pc}
 597              	.L38:
 598 0042 C046     		.align	2
 599              	.L37:
 600 0044 10023A40 		.word	1077543440
 601              		.cfi_endproc
 602              	.LFE8:
 603              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 604              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 605              		.align	2
 606              		.global	ADC_SAR_Seq_1_GetResult16
 607              		.code	16
 608              		.thumb_func
 609              		.type	ADC_SAR_Seq_1_GetResult16, %function
 610              	ADC_SAR_Seq_1_GetResult16:
 611              	.LFB9:
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 20


 463:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 612              		.loc 1 473 0
 613              		.cfi_startproc
 614 0000 80B5     		push	{r7, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 7, -8
 617              		.cfi_offset 14, -4
 618 0002 84B0     		sub	sp, sp, #16
 619              		.cfi_def_cfa_offset 24
 620 0004 00AF     		add	r7, sp, #0
 621              		.cfi_def_cfa_register 7
 622 0006 7860     		str	r0, [r7, #4]
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 623              		.loc 1 477 0
 624 0008 7B68     		ldr	r3, [r7, #4]
 625 000a 032B     		cmp	r3, #3
 626 000c 02D9     		bls	.L40
 627              		.loc 1 477 0 is_stmt 0 discriminator 1
 628 000e 0020     		mov	r0, #0
 629 0010 FFF7FEFF 		bl	CyHalt
 630              	.L40:
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 631              		.loc 1 479 0 is_stmt 1
 632 0014 7B68     		ldr	r3, [r7, #4]
 633 0016 032B     		cmp	r3, #3
 634 0018 08D8     		bhi	.L41
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 635              		.loc 1 481 0
 636 001a 7B68     		ldr	r3, [r7, #4]
 637 001c 9B00     		lsl	r3, r3, #2
 638 001e 084A     		ldr	r2, .L44
 639 0020 9B18     		add	r3, r3, r2
 640 0022 1B68     		ldr	r3, [r3]
 641 0024 1B04     		lsl	r3, r3, #16
 642 0026 1B0C     		lsr	r3, r3, #16
 643 0028 FB60     		str	r3, [r7, #12]
 644 002a 01E0     		b	.L42
 645              	.L41:
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 21


 486:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 646              		.loc 1 489 0
 647 002c 0023     		mov	r3, #0
 648 002e FB60     		str	r3, [r7, #12]
 649              	.L42:
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 650              		.loc 1 493 0
 651 0030 FB68     		ldr	r3, [r7, #12]
 652 0032 9BB2     		uxth	r3, r3
 653 0034 1BB2     		sxth	r3, r3
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 654              		.loc 1 494 0
 655 0036 181C     		mov	r0, r3
 656 0038 BD46     		mov	sp, r7
 657 003a 04B0     		add	sp, sp, #16
 658              		@ sp needed
 659 003c 80BD     		pop	{r7, pc}
 660              	.L45:
 661 003e C046     		.align	2
 662              	.L44:
 663 0040 80013A40 		.word	1077543296
 664              		.cfi_endproc
 665              	.LFE9:
 666              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 667              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 668              		.align	2
 669              		.global	ADC_SAR_Seq_1_SetChanMask
 670              		.code	16
 671              		.thumb_func
 672              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 673              	ADC_SAR_Seq_1_SetChanMask:
 674              	.LFB10:
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 496:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 501:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 22


 514:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 675              		.loc 1 518 0
 676              		.cfi_startproc
 677 0000 80B5     		push	{r7, lr}
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 82B0     		sub	sp, sp, #8
 682              		.cfi_def_cfa_offset 16
 683 0004 00AF     		add	r7, sp, #0
 684              		.cfi_def_cfa_register 7
 685 0006 7860     		str	r0, [r7, #4]
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 686              		.loc 1 519 0
 687 0008 034B     		ldr	r3, .L47
 688 000a 7968     		ldr	r1, [r7, #4]
 689 000c 0F22     		mov	r2, #15
 690 000e 0A40     		and	r2, r1
 691 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 692              		.loc 1 520 0
 693 0012 BD46     		mov	sp, r7
 694 0014 02B0     		add	sp, sp, #8
 695              		@ sp needed
 696 0016 80BD     		pop	{r7, pc}
 697              	.L48:
 698              		.align	2
 699              	.L47:
 700 0018 20003A40 		.word	1077542944
 701              		.cfi_endproc
 702              	.LFE10:
 703              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 704              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 705              		.align	2
 706              		.global	ADC_SAR_Seq_1_SetLowLimit
 707              		.code	16
 708              		.thumb_func
 709              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 710              	ADC_SAR_Seq_1_SetLowLimit:
 711              	.LFB11:
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 23


 534:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 712              		.loc 1 562 0
 713              		.cfi_startproc
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 82B0     		sub	sp, sp, #8
 719              		.cfi_def_cfa_offset 16
 720 0004 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 722 0006 7860     		str	r0, [r7, #4]
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 723              		.loc 1 563 0
 724 0008 084B     		ldr	r3, .L50
 725 000a 084A     		ldr	r2, .L50
 726 000c 1268     		ldr	r2, [r2]
 727 000e 120C     		lsr	r2, r2, #16
 728 0010 1204     		lsl	r2, r2, #16
 729 0012 1A60     		str	r2, [r3]
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 730              		.loc 1 564 0
 731 0014 054B     		ldr	r3, .L50
 732 0016 054A     		ldr	r2, .L50
 733 0018 1168     		ldr	r1, [r2]
 734 001a 7A68     		ldr	r2, [r7, #4]
 735 001c 1204     		lsl	r2, r2, #16
 736 001e 120C     		lsr	r2, r2, #16
 737 0020 0A43     		orr	r2, r1
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 24


 738 0022 1A60     		str	r2, [r3]
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 739              		.loc 1 565 0
 740 0024 BD46     		mov	sp, r7
 741 0026 02B0     		add	sp, sp, #8
 742              		@ sp needed
 743 0028 80BD     		pop	{r7, pc}
 744              	.L51:
 745 002a C046     		.align	2
 746              	.L50:
 747 002c 18003A40 		.word	1077542936
 748              		.cfi_endproc
 749              	.LFE11:
 750              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 751              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 752              		.align	2
 753              		.global	ADC_SAR_Seq_1_SetHighLimit
 754              		.code	16
 755              		.thumb_func
 756              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 757              	ADC_SAR_Seq_1_SetHighLimit:
 758              	.LFB12:
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 759              		.loc 1 583 0
 760              		.cfi_startproc
 761 0000 80B5     		push	{r7, lr}
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
 765 0002 82B0     		sub	sp, sp, #8
 766              		.cfi_def_cfa_offset 16
 767 0004 00AF     		add	r7, sp, #0
 768              		.cfi_def_cfa_register 7
 769 0006 7860     		str	r0, [r7, #4]
 584:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 770              		.loc 1 584 0
 771 0008 074B     		ldr	r3, .L53
 772 000a 074A     		ldr	r2, .L53
 773 000c 1268     		ldr	r2, [r2]
 774 000e 1204     		lsl	r2, r2, #16
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 25


 775 0010 120C     		lsr	r2, r2, #16
 776 0012 1A60     		str	r2, [r3]
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 777              		.loc 1 585 0
 778 0014 044B     		ldr	r3, .L53
 779 0016 044A     		ldr	r2, .L53
 780 0018 1168     		ldr	r1, [r2]
 781 001a 7A68     		ldr	r2, [r7, #4]
 782 001c 1204     		lsl	r2, r2, #16
 783 001e 0A43     		orr	r2, r1
 784 0020 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 785              		.loc 1 586 0
 786 0022 BD46     		mov	sp, r7
 787 0024 02B0     		add	sp, sp, #8
 788              		@ sp needed
 789 0026 80BD     		pop	{r7, pc}
 790              	.L54:
 791              		.align	2
 792              	.L53:
 793 0028 18003A40 		.word	1077542936
 794              		.cfi_endproc
 795              	.LFE12:
 796              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 797              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 798              		.align	2
 799              		.global	ADC_SAR_Seq_1_SetLimitMask
 800              		.code	16
 801              		.thumb_func
 802              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 803              	ADC_SAR_Seq_1_SetLimitMask:
 804              	.LFB13:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 607:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 805              		.loc 1 607 0
 806              		.cfi_startproc
 807 0000 80B5     		push	{r7, lr}
 808              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 26


 809              		.cfi_offset 7, -8
 810              		.cfi_offset 14, -4
 811 0002 82B0     		sub	sp, sp, #8
 812              		.cfi_def_cfa_offset 16
 813 0004 00AF     		add	r7, sp, #0
 814              		.cfi_def_cfa_register 7
 815 0006 7860     		str	r0, [r7, #4]
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 816              		.loc 1 608 0
 817 0008 034B     		ldr	r3, .L56
 818 000a 7968     		ldr	r1, [r7, #4]
 819 000c 0F22     		mov	r2, #15
 820 000e 0A40     		and	r2, r1
 821 0010 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 822              		.loc 1 609 0
 823 0012 BD46     		mov	sp, r7
 824 0014 02B0     		add	sp, sp, #8
 825              		@ sp needed
 826 0016 80BD     		pop	{r7, pc}
 827              	.L57:
 828              		.align	2
 829              	.L56:
 830 0018 38023A40 		.word	1077543480
 831              		.cfi_endproc
 832              	.LFE13:
 833              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 834              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 835              		.align	2
 836              		.global	ADC_SAR_Seq_1_SetSatMask
 837              		.code	16
 838              		.thumb_func
 839              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 840              	ADC_SAR_Seq_1_SetSatMask:
 841              	.LFB14:
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 842              		.loc 1 630 0
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 27


 843              		.cfi_startproc
 844 0000 80B5     		push	{r7, lr}
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 82B0     		sub	sp, sp, #8
 849              		.cfi_def_cfa_offset 16
 850 0004 00AF     		add	r7, sp, #0
 851              		.cfi_def_cfa_register 7
 852 0006 7860     		str	r0, [r7, #4]
 631:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 853              		.loc 1 631 0
 854 0008 034B     		ldr	r3, .L59
 855 000a 7968     		ldr	r1, [r7, #4]
 856 000c 0F22     		mov	r2, #15
 857 000e 0A40     		and	r2, r1
 858 0010 1A60     		str	r2, [r3]
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 859              		.loc 1 632 0
 860 0012 BD46     		mov	sp, r7
 861 0014 02B0     		add	sp, sp, #8
 862              		@ sp needed
 863 0016 80BD     		pop	{r7, pc}
 864              	.L60:
 865              		.align	2
 866              	.L59:
 867 0018 28023A40 		.word	1077543464
 868              		.cfi_endproc
 869              	.LFE14:
 870              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 871              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 872              		.align	2
 873              		.global	ADC_SAR_Seq_1_SetOffset
 874              		.code	16
 875              		.thumb_func
 876              		.type	ADC_SAR_Seq_1_SetOffset, %function
 877              	ADC_SAR_Seq_1_SetOffset:
 878              	.LFB15:
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 28


 652:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 879              		.loc 1 658 0
 880              		.cfi_startproc
 881 0000 80B5     		push	{r7, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 82B0     		sub	sp, sp, #8
 886              		.cfi_def_cfa_offset 16
 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 889 0006 7860     		str	r0, [r7, #4]
 890 0008 0A1C     		mov	r2, r1
 891 000a BB1C     		add	r3, r7, #2
 892 000c 1A80     		strh	r2, [r3]
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 893              		.loc 1 660 0
 894 000e 7B68     		ldr	r3, [r7, #4]
 895 0010 032B     		cmp	r3, #3
 896 0012 02D9     		bls	.L62
 897              		.loc 1 660 0 is_stmt 0 discriminator 1
 898 0014 0020     		mov	r0, #0
 899 0016 FFF7FEFF 		bl	CyHalt
 900              	.L62:
 661:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 901              		.loc 1 662 0 is_stmt 1
 902 001a 044B     		ldr	r3, .L63
 903 001c 7A68     		ldr	r2, [r7, #4]
 904 001e 5200     		lsl	r2, r2, #1
 905 0020 B91C     		add	r1, r7, #2
 906 0022 0988     		ldrh	r1, [r1]
 907 0024 D152     		strh	r1, [r2, r3]
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 908              		.loc 1 663 0
 909 0026 BD46     		mov	sp, r7
 910 0028 02B0     		add	sp, sp, #8
 911              		@ sp needed
 912 002a 80BD     		pop	{r7, pc}
 913              	.L64:
 914              		.align	2
 915              	.L63:
 916 002c 00000000 		.word	ADC_SAR_Seq_1_offset
 917              		.cfi_endproc
 918              	.LFE15:
 919              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 920              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 921              		.align	2
 922              		.global	ADC_SAR_Seq_1_SetGain
 923              		.code	16
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 29


 924              		.thumb_func
 925              		.type	ADC_SAR_Seq_1_SetGain, %function
 926              	ADC_SAR_Seq_1_SetGain:
 927              	.LFB16:
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 928              		.loc 1 692 0
 929              		.cfi_startproc
 930 0000 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
 938 0006 7860     		str	r0, [r7, #4]
 939 0008 3960     		str	r1, [r7]
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 940              		.loc 1 694 0
 941 000a 7B68     		ldr	r3, [r7, #4]
 942 000c 032B     		cmp	r3, #3
 943 000e 02D9     		bls	.L66
 944              		.loc 1 694 0 is_stmt 0 discriminator 1
 945 0010 0020     		mov	r0, #0
 946 0012 FFF7FEFF 		bl	CyHalt
 947              	.L66:
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 30


 948              		.loc 1 696 0 is_stmt 1
 949 0016 044B     		ldr	r3, .L67
 950 0018 7A68     		ldr	r2, [r7, #4]
 951 001a 9200     		lsl	r2, r2, #2
 952 001c 3968     		ldr	r1, [r7]
 953 001e D150     		str	r1, [r2, r3]
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 954              		.loc 1 697 0
 955 0020 BD46     		mov	sp, r7
 956 0022 02B0     		add	sp, sp, #8
 957              		@ sp needed
 958 0024 80BD     		pop	{r7, pc}
 959              	.L68:
 960 0026 C046     		.align	2
 961              	.L67:
 962 0028 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 963              		.cfi_endproc
 964              	.LFE16:
 965              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 966              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 967              		.align	2
 968              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 969              		.code	16
 970              		.thumb_func
 971              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 972              	ADC_SAR_Seq_1_CountsTo_mVolts:
 973              	.LFB17:
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 705:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 974              		.loc 1 725 0
 975              		.cfi_startproc
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 31


 976 0000 80B5     		push	{r7, lr}
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 7, -8
 979              		.cfi_offset 14, -4
 980 0002 84B0     		sub	sp, sp, #16
 981              		.cfi_def_cfa_offset 24
 982 0004 00AF     		add	r7, sp, #0
 983              		.cfi_def_cfa_register 7
 984 0006 7860     		str	r0, [r7, #4]
 985 0008 0A1C     		mov	r2, r1
 986 000a BB1C     		add	r3, r7, #2
 987 000c 1A80     		strh	r2, [r3]
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 988              		.loc 1 729 0
 989 000e 7B68     		ldr	r3, [r7, #4]
 990 0010 032B     		cmp	r3, #3
 991 0012 02D9     		bls	.L70
 992              		.loc 1 729 0 is_stmt 0 discriminator 1
 993 0014 0020     		mov	r0, #0
 994 0016 FFF7FEFF 		bl	CyHalt
 995              	.L70:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 996              		.loc 1 740 0 is_stmt 1
 997 001a BB1C     		add	r3, r7, #2
 998 001c 1A88     		ldrh	r2, [r3]
 999 001e 1E4B     		ldr	r3, .L76
 1000 0020 7968     		ldr	r1, [r7, #4]
 1001 0022 4900     		lsl	r1, r1, #1
 1002 0024 CB5A     		ldrh	r3, [r1, r3]
 1003 0026 9BB2     		uxth	r3, r3
 1004 0028 9BB2     		uxth	r3, r3
 1005 002a D31A     		sub	r3, r2, r3
 1006 002c 9AB2     		uxth	r2, r3
 1007 002e BB1C     		add	r3, r7, #2
 1008 0030 1A80     		strh	r2, [r3]
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1009              		.loc 1 742 0
 1010 0032 BB1C     		add	r3, r7, #2
 1011 0034 0021     		mov	r1, #0
 1012 0036 5B5E     		ldrsh	r3, [r3, r1]
 1013 0038 184A     		ldr	r2, .L76+4
 1014 003a 5A43     		mul	r2, r3
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 32


 1015              		.loc 1 743 0
 1016 003c BB1C     		add	r3, r7, #2
 1017 003e 0021     		mov	r1, #0
 1018 0040 5B5E     		ldrsh	r3, [r3, r1]
 1019 0042 002B     		cmp	r3, #0
 1020 0044 08DD     		ble	.L71
 1021              		.loc 1 743 0 is_stmt 0 discriminator 1
 1022 0046 164B     		ldr	r3, .L76+8
 1023 0048 7968     		ldr	r1, [r7, #4]
 1024 004a 8900     		lsl	r1, r1, #2
 1025 004c CB58     		ldr	r3, [r1, r3]
 1026 004e 002B     		cmp	r3, #0
 1027 0050 00DA     		bge	.L72
 1028 0052 0133     		add	r3, r3, #1
 1029              	.L72:
 1030 0054 5B10     		asr	r3, r3, #1
 1031 0056 08E0     		b	.L73
 1032              	.L71:
 1033              		.loc 1 743 0 discriminator 2
 1034 0058 114B     		ldr	r3, .L76+8
 1035 005a 7968     		ldr	r1, [r7, #4]
 1036 005c 8900     		lsl	r1, r1, #2
 1037 005e CB58     		ldr	r3, [r1, r3]
 1038 0060 002B     		cmp	r3, #0
 1039 0062 00DA     		bge	.L74
 1040 0064 0133     		add	r3, r3, #1
 1041              	.L74:
 1042 0066 5B10     		asr	r3, r3, #1
 1043 0068 5B42     		neg	r3, r3
 1044              	.L73:
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1045              		.loc 1 742 0 is_stmt 1
 1046 006a D218     		add	r2, r2, r3
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 1047              		.loc 1 744 0
 1048 006c 0C4B     		ldr	r3, .L76+8
 1049 006e 7968     		ldr	r1, [r7, #4]
 1050 0070 8900     		lsl	r1, r1, #2
 1051 0072 CB58     		ldr	r3, [r1, r3]
 1052 0074 101C     		mov	r0, r2
 1053 0076 191C     		mov	r1, r3
 1054 0078 FFF7FEFF 		bl	__aeabi_idiv
 1055 007c 031C     		mov	r3, r0
 1056 007e 1A1C     		mov	r2, r3
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1057              		.loc 1 742 0
 1058 0080 3B1C     		mov	r3, r7
 1059 0082 0E33     		add	r3, r3, #14
 1060 0084 1A80     		strh	r2, [r3]
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 1061              		.loc 1 746 0
 1062 0086 3B1C     		mov	r3, r7
 1063 0088 0E33     		add	r3, r3, #14
 1064 008a 1B88     		ldrh	r3, [r3]
 1065 008c 1BB2     		sxth	r3, r3
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 33


 1066              		.loc 1 747 0
 1067 008e 181C     		mov	r0, r3
 1068 0090 BD46     		mov	sp, r7
 1069 0092 04B0     		add	sp, sp, #16
 1070              		@ sp needed
 1071 0094 80BD     		pop	{r7, pc}
 1072              	.L77:
 1073 0096 C046     		.align	2
 1074              	.L76:
 1075 0098 00000000 		.word	ADC_SAR_Seq_1_offset
 1076 009c 10270000 		.word	10000
 1077 00a0 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1078              		.cfi_endproc
 1079              	.LFE17:
 1080              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 1081              		.global	__aeabi_lmul
 1082              		.global	__aeabi_ldivmod
 1083              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 1084              		.align	2
 1085              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 1086              		.code	16
 1087              		.thumb_func
 1088              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 1089              	ADC_SAR_Seq_1_CountsTo_uVolts:
 1090              	.LFB18:
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 34


 1091              		.loc 1 779 0
 1092              		.cfi_startproc
 1093 0000 B0B5     		push	{r4, r5, r7, lr}
 1094              		.cfi_def_cfa_offset 16
 1095              		.cfi_offset 4, -16
 1096              		.cfi_offset 5, -12
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 86B0     		sub	sp, sp, #24
 1100              		.cfi_def_cfa_offset 40
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 1103 0006 F860     		str	r0, [r7, #12]
 1104 0008 0A1C     		mov	r2, r1
 1105 000a 3B1C     		mov	r3, r7
 1106 000c 0A33     		add	r3, r3, #10
 1107 000e 1A80     		strh	r2, [r3]
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1108              		.loc 1 783 0
 1109 0010 FB68     		ldr	r3, [r7, #12]
 1110 0012 032B     		cmp	r3, #3
 1111 0014 02D9     		bls	.L79
 1112              		.loc 1 783 0 is_stmt 0 discriminator 1
 1113 0016 0020     		mov	r0, #0
 1114 0018 FFF7FEFF 		bl	CyHalt
 1115              	.L79:
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 790:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1116              		.loc 1 794 0 is_stmt 1
 1117 001c 3B1C     		mov	r3, r7
 1118 001e 0A33     		add	r3, r3, #10
 1119 0020 1A88     		ldrh	r2, [r3]
 1120 0022 1B4B     		ldr	r3, .L81+8
 1121 0024 F968     		ldr	r1, [r7, #12]
 1122 0026 4900     		lsl	r1, r1, #1
 1123 0028 CB5A     		ldrh	r3, [r1, r3]
 1124 002a 9BB2     		uxth	r3, r3
 1125 002c 9BB2     		uxth	r3, r3
 1126 002e D31A     		sub	r3, r2, r3
 1127 0030 9AB2     		uxth	r2, r3
 1128 0032 3B1C     		mov	r3, r7
 1129 0034 0A33     		add	r3, r3, #10
 1130 0036 1A80     		strh	r2, [r3]
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 35


 1131              		.loc 1 796 0
 1132 0038 3B1C     		mov	r3, r7
 1133 003a 0A33     		add	r3, r3, #10
 1134 003c 1B88     		ldrh	r3, [r3]
 1135 003e 1BB2     		sxth	r3, r3
 1136 0040 3B60     		str	r3, [r7]
 1137 0042 DB17     		asr	r3, r3, #31
 1138 0044 7B60     		str	r3, [r7, #4]
 1139 0046 3868     		ldr	r0, [r7]
 1140 0048 7968     		ldr	r1, [r7, #4]
 1141 004a 104B     		ldr	r3, .L81+4
 1142 004c 0E4A     		ldr	r2, .L81
 1143 004e FFF7FEFF 		bl	__aeabi_lmul
 1144 0052 021C     		mov	r2, r0
 1145 0054 0B1C     		mov	r3, r1
 1146 0056 0F49     		ldr	r1, .L81+12
 1147 0058 F868     		ldr	r0, [r7, #12]
 1148 005a 8000     		lsl	r0, r0, #2
 1149 005c 4158     		ldr	r1, [r0, r1]
 1150 005e 0C1C     		mov	r4, r1
 1151 0060 C917     		asr	r1, r1, #31
 1152 0062 0D1C     		mov	r5, r1
 1153 0064 101C     		mov	r0, r2
 1154 0066 191C     		mov	r1, r3
 1155 0068 221C     		mov	r2, r4
 1156 006a 2B1C     		mov	r3, r5
 1157 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1158 0070 031C     		mov	r3, r0
 1159 0072 0C1C     		mov	r4, r1
 1160 0074 3B61     		str	r3, [r7, #16]
 1161 0076 7C61     		str	r4, [r7, #20]
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 1162              		.loc 1 798 0
 1163 0078 3B69     		ldr	r3, [r7, #16]
 799:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1164              		.loc 1 799 0
 1165 007a 181C     		mov	r0, r3
 1166 007c BD46     		mov	sp, r7
 1167 007e 06B0     		add	sp, sp, #24
 1168              		@ sp needed
 1169 0080 B0BD     		pop	{r4, r5, r7, pc}
 1170              	.L82:
 1171 0082 C046C046 		.align	3
 1171      C046
 1172              	.L81:
 1173 0088 80969800 		.word	10000000
 1174 008c 00000000 		.word	0
 1175 0090 00000000 		.word	ADC_SAR_Seq_1_offset
 1176 0094 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1177              		.cfi_endproc
 1178              	.LFE18:
 1179              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 1180              		.global	__aeabi_i2f
 1181              		.global	__aeabi_fmul
 1182              		.global	__aeabi_fdiv
 1183              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 36


 1184              		.align	2
 1185              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 1186              		.code	16
 1187              		.thumb_func
 1188              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 1189              	ADC_SAR_Seq_1_CountsTo_Volts:
 1190              	.LFB19:
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 814:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 1191              		.loc 1 824 0
 1192              		.cfi_startproc
 1193 0000 90B5     		push	{r4, r7, lr}
 1194              		.cfi_def_cfa_offset 12
 1195              		.cfi_offset 4, -12
 1196              		.cfi_offset 7, -8
 1197              		.cfi_offset 14, -4
 1198 0002 85B0     		sub	sp, sp, #20
 1199              		.cfi_def_cfa_offset 32
 1200 0004 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 1202 0006 7860     		str	r0, [r7, #4]
 1203 0008 0A1C     		mov	r2, r1
 1204 000a BB1C     		add	r3, r7, #2
 1205 000c 1A80     		strh	r2, [r3]
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 828:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1206              		.loc 1 828 0
 1207 000e 7B68     		ldr	r3, [r7, #4]
 1208 0010 032B     		cmp	r3, #3
 1209 0012 02D9     		bls	.L84
 1210              		.loc 1 828 0 is_stmt 0 discriminator 1
 1211 0014 0020     		mov	r0, #0
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 37


 1212 0016 FFF7FEFF 		bl	CyHalt
 1213              	.L84:
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 833:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 839:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1214              		.loc 1 839 0 is_stmt 1
 1215 001a BB1C     		add	r3, r7, #2
 1216 001c 1A88     		ldrh	r2, [r3]
 1217 001e 154B     		ldr	r3, .L86
 1218 0020 7968     		ldr	r1, [r7, #4]
 1219 0022 4900     		lsl	r1, r1, #1
 1220 0024 CB5A     		ldrh	r3, [r1, r3]
 1221 0026 9BB2     		uxth	r3, r3
 1222 0028 9BB2     		uxth	r3, r3
 1223 002a D31A     		sub	r3, r2, r3
 1224 002c 9AB2     		uxth	r2, r3
 1225 002e BB1C     		add	r3, r7, #2
 1226 0030 1A80     		strh	r2, [r3]
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 1227              		.loc 1 841 0
 1228 0032 BB1C     		add	r3, r7, #2
 1229 0034 0022     		mov	r2, #0
 1230 0036 9B5E     		ldrsh	r3, [r3, r2]
 1231 0038 181C     		mov	r0, r3
 1232 003a FFF7FEFF 		bl	__aeabi_i2f
 1233 003e 031C     		add	r3, r0, #0
 1234 0040 181C     		add	r0, r3, #0
 1235 0042 0D49     		ldr	r1, .L86+4
 1236 0044 FFF7FEFF 		bl	__aeabi_fmul
 1237 0048 031C     		add	r3, r0, #0
 1238 004a 1C1C     		add	r4, r3, #0
 1239 004c 0B4B     		ldr	r3, .L86+8
 1240 004e 7A68     		ldr	r2, [r7, #4]
 1241 0050 9200     		lsl	r2, r2, #2
 1242 0052 D358     		ldr	r3, [r2, r3]
 1243 0054 181C     		mov	r0, r3
 1244 0056 FFF7FEFF 		bl	__aeabi_i2f
 1245 005a 031C     		add	r3, r0, #0
 1246 005c 201C     		add	r0, r4, #0
 1247 005e 191C     		add	r1, r3, #0
 1248 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1249 0064 031C     		add	r3, r0, #0
 1250 0066 FB60     		str	r3, [r7, #12]
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 1251              		.loc 1 843 0
 1252 0068 FB68     		ldr	r3, [r7, #12]
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 38


 1253              		.loc 1 844 0
 1254 006a 181C     		add	r0, r3, #0
 1255 006c BD46     		mov	sp, r7
 1256 006e 05B0     		add	sp, sp, #20
 1257              		@ sp needed
 1258 0070 90BD     		pop	{r4, r7, pc}
 1259              	.L87:
 1260 0072 C046     		.align	2
 1261              	.L86:
 1262 0074 00000000 		.word	ADC_SAR_Seq_1_offset
 1263 0078 00002041 		.word	1092616192
 1264 007c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1265              		.cfi_endproc
 1266              	.LFE19:
 1267              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 1268              		.section	.rodata
 1269              		.align	2
 1270              		.type	ADC_SAR_Seq_1_InputsPlacement.4747, %object
 1271              		.size	ADC_SAR_Seq_1_InputsPlacement.4747, 4
 1272              	ADC_SAR_Seq_1_InputsPlacement.4747:
 1273 0010 00       		.byte	0
 1274 0011 01       		.byte	1
 1275 0012 02       		.byte	2
 1276 0013 03       		.byte	3
 1277              		.text
 1278              	.Letext0:
 1279              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1280              		.section	.debug_info,"",%progbits
 1281              	.Ldebug_info0:
 1282 0000 96040000 		.4byte	0x496
 1283 0004 0400     		.2byte	0x4
 1284 0006 00000000 		.4byte	.Ldebug_abbrev0
 1285 000a 04       		.byte	0x4
 1286 000b 01       		.uleb128 0x1
 1287 000c 9B020000 		.4byte	.LASF60
 1288 0010 01       		.byte	0x1
 1289 0011 14020000 		.4byte	.LASF61
 1290 0015 CA030000 		.4byte	.LASF62
 1291 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1292 001d 00000000 		.4byte	0
 1293 0021 00000000 		.4byte	.Ldebug_line0
 1294 0025 02       		.uleb128 0x2
 1295 0026 01       		.byte	0x1
 1296 0027 06       		.byte	0x6
 1297 0028 F8000000 		.4byte	.LASF0
 1298 002c 02       		.uleb128 0x2
 1299 002d 01       		.byte	0x1
 1300 002e 08       		.byte	0x8
 1301 002f 4A030000 		.4byte	.LASF1
 1302 0033 02       		.uleb128 0x2
 1303 0034 02       		.byte	0x2
 1304 0035 05       		.byte	0x5
 1305 0036 58030000 		.4byte	.LASF2
 1306 003a 02       		.uleb128 0x2
 1307 003b 02       		.byte	0x2
 1308 003c 07       		.byte	0x7
 1309 003d D7010000 		.4byte	.LASF3
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 39


 1310 0041 02       		.uleb128 0x2
 1311 0042 04       		.byte	0x4
 1312 0043 05       		.byte	0x5
 1313 0044 43010000 		.4byte	.LASF4
 1314 0048 02       		.uleb128 0x2
 1315 0049 04       		.byte	0x4
 1316 004a 07       		.byte	0x7
 1317 004b B5010000 		.4byte	.LASF5
 1318 004f 02       		.uleb128 0x2
 1319 0050 08       		.byte	0x8
 1320 0051 05       		.byte	0x5
 1321 0052 EA000000 		.4byte	.LASF6
 1322 0056 02       		.uleb128 0x2
 1323 0057 08       		.byte	0x8
 1324 0058 07       		.byte	0x7
 1325 0059 86000000 		.4byte	.LASF7
 1326 005d 03       		.uleb128 0x3
 1327 005e 04       		.byte	0x4
 1328 005f 05       		.byte	0x5
 1329 0060 696E7400 		.ascii	"int\000"
 1330 0064 02       		.uleb128 0x2
 1331 0065 04       		.byte	0x4
 1332 0066 07       		.byte	0x7
 1333 0067 A1010000 		.4byte	.LASF8
 1334 006b 04       		.uleb128 0x4
 1335 006c 4C010000 		.4byte	.LASF9
 1336 0070 02       		.byte	0x2
 1337 0071 A1       		.byte	0xa1
 1338 0072 2C000000 		.4byte	0x2c
 1339 0076 04       		.uleb128 0x4
 1340 0077 15000000 		.4byte	.LASF10
 1341 007b 02       		.byte	0x2
 1342 007c A2       		.byte	0xa2
 1343 007d 3A000000 		.4byte	0x3a
 1344 0081 04       		.uleb128 0x4
 1345 0082 59010000 		.4byte	.LASF11
 1346 0086 02       		.byte	0x2
 1347 0087 A3       		.byte	0xa3
 1348 0088 48000000 		.4byte	0x48
 1349 008c 04       		.uleb128 0x4
 1350 008d 67040000 		.4byte	.LASF12
 1351 0091 02       		.byte	0x2
 1352 0092 A5       		.byte	0xa5
 1353 0093 33000000 		.4byte	0x33
 1354 0097 04       		.uleb128 0x4
 1355 0098 1F010000 		.4byte	.LASF13
 1356 009c 02       		.byte	0x2
 1357 009d A6       		.byte	0xa6
 1358 009e 41000000 		.4byte	0x41
 1359 00a2 04       		.uleb128 0x4
 1360 00a3 3D020000 		.4byte	.LASF14
 1361 00a7 02       		.byte	0x2
 1362 00a8 A7       		.byte	0xa7
 1363 00a9 AD000000 		.4byte	0xad
 1364 00ad 02       		.uleb128 0x2
 1365 00ae 04       		.byte	0x4
 1366 00af 04       		.byte	0x4
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 40


 1367 00b0 95020000 		.4byte	.LASF15
 1368 00b4 02       		.uleb128 0x2
 1369 00b5 08       		.byte	0x8
 1370 00b6 04       		.byte	0x4
 1371 00b7 52010000 		.4byte	.LASF16
 1372 00bb 04       		.uleb128 0x4
 1373 00bc 8F020000 		.4byte	.LASF17
 1374 00c0 02       		.byte	0x2
 1375 00c1 AC       		.byte	0xac
 1376 00c2 4F000000 		.4byte	0x4f
 1377 00c6 02       		.uleb128 0x2
 1378 00c7 01       		.byte	0x1
 1379 00c8 08       		.byte	0x8
 1380 00c9 A4030000 		.4byte	.LASF18
 1381 00cd 05       		.uleb128 0x5
 1382 00ce 0E020000 		.4byte	.LASF19
 1383 00d2 02       		.byte	0x2
 1384 00d3 4D01     		.2byte	0x14d
 1385 00d5 D9000000 		.4byte	0xd9
 1386 00d9 06       		.uleb128 0x6
 1387 00da 81000000 		.4byte	0x81
 1388 00de 02       		.uleb128 0x2
 1389 00df 04       		.byte	0x4
 1390 00e0 07       		.byte	0x7
 1391 00e1 45020000 		.4byte	.LASF20
 1392 00e5 07       		.uleb128 0x7
 1393 00e6 72000000 		.4byte	.LASF25
 1394 00ea 01       		.byte	0x1
 1395 00eb 3F       		.byte	0x3f
 1396 00ec 00000000 		.4byte	.LFB2
 1397 00f0 24000000 		.4byte	.LFE2-.LFB2
 1398 00f4 01       		.uleb128 0x1
 1399 00f5 9C       		.byte	0x9c
 1400 00f6 08       		.uleb128 0x8
 1401 00f7 1C000000 		.4byte	.LASF36
 1402 00fb 01       		.byte	0x1
 1403 00fc 5E       		.byte	0x5e
 1404 00fd 00000000 		.4byte	.LFB3
 1405 0101 0C020000 		.4byte	.LFE3-.LFB3
 1406 0105 01       		.uleb128 0x1
 1407 0106 9C       		.byte	0x9c
 1408 0107 47010000 		.4byte	0x147
 1409 010b 09       		.uleb128 0x9
 1410 010c 99030000 		.4byte	.LASF21
 1411 0110 01       		.byte	0x1
 1412 0111 60       		.byte	0x60
 1413 0112 81000000 		.4byte	0x81
 1414 0116 02       		.uleb128 0x2
 1415 0117 91       		.byte	0x91
 1416 0118 6C       		.sleb128 -20
 1417 0119 09       		.uleb128 0x9
 1418 011a CD010000 		.4byte	.LASF22
 1419 011e 01       		.byte	0x1
 1420 011f 61       		.byte	0x61
 1421 0120 81000000 		.4byte	0x81
 1422 0124 02       		.uleb128 0x2
 1423 0125 91       		.byte	0x91
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 41


 1424 0126 64       		.sleb128 -28
 1425 0127 09       		.uleb128 0x9
 1426 0128 37000000 		.4byte	.LASF23
 1427 012c 01       		.byte	0x1
 1428 012d 62       		.byte	0x62
 1429 012e 97000000 		.4byte	0x97
 1430 0132 02       		.uleb128 0x2
 1431 0133 91       		.byte	0x91
 1432 0134 68       		.sleb128 -24
 1433 0135 09       		.uleb128 0x9
 1434 0136 B2000000 		.4byte	.LASF24
 1435 013a 01       		.byte	0x1
 1436 013b 65       		.byte	0x65
 1437 013c 57010000 		.4byte	0x157
 1438 0140 05       		.uleb128 0x5
 1439 0141 03       		.byte	0x3
 1440 0142 10000000 		.4byte	ADC_SAR_Seq_1_InputsPlacement.4747
 1441 0146 00       		.byte	0
 1442 0147 0A       		.uleb128 0xa
 1443 0148 6B000000 		.4byte	0x6b
 1444 014c 57010000 		.4byte	0x157
 1445 0150 0B       		.uleb128 0xb
 1446 0151 DE000000 		.4byte	0xde
 1447 0155 03       		.byte	0x3
 1448 0156 00       		.byte	0
 1449 0157 0C       		.uleb128 0xc
 1450 0158 47010000 		.4byte	0x147
 1451 015c 0D       		.uleb128 0xd
 1452 015d 9D000000 		.4byte	.LASF26
 1453 0161 01       		.byte	0x1
 1454 0162 2A01     		.2byte	0x12a
 1455 0164 00000000 		.4byte	.LFB4
 1456 0168 38000000 		.4byte	.LFE4-.LFB4
 1457 016c 01       		.uleb128 0x1
 1458 016d 9C       		.byte	0x9c
 1459 016e 0E       		.uleb128 0xe
 1460 016f 2D030000 		.4byte	.LASF27
 1461 0173 01       		.byte	0x1
 1462 0174 4D01     		.2byte	0x14d
 1463 0176 00000000 		.4byte	.LFB5
 1464 017a 18000000 		.4byte	.LFE5-.LFB5
 1465 017e 01       		.uleb128 0x1
 1466 017f 9C       		.byte	0x9c
 1467 0180 0E       		.uleb128 0xe
 1468 0181 3E000000 		.4byte	.LASF28
 1469 0185 01       		.byte	0x1
 1470 0186 6701     		.2byte	0x167
 1471 0188 00000000 		.4byte	.LFB6
 1472 018c 1C000000 		.4byte	.LFE6-.LFB6
 1473 0190 01       		.uleb128 0x1
 1474 0191 9C       		.byte	0x9c
 1475 0192 0E       		.uleb128 0xe
 1476 0193 75020000 		.4byte	.LASF29
 1477 0197 01       		.byte	0x1
 1478 0198 8001     		.2byte	0x180
 1479 019a 00000000 		.4byte	.LFB7
 1480 019e 1C000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 42


 1481 01a2 01       		.uleb128 0x1
 1482 01a3 9C       		.byte	0x9c
 1483 01a4 0F       		.uleb128 0xf
 1484 01a5 57020000 		.4byte	.LASF31
 1485 01a9 01       		.byte	0x1
 1486 01aa A201     		.2byte	0x1a2
 1487 01ac 81000000 		.4byte	0x81
 1488 01b0 00000000 		.4byte	.LFB8
 1489 01b4 48000000 		.4byte	.LFE8-.LFB8
 1490 01b8 01       		.uleb128 0x1
 1491 01b9 9C       		.byte	0x9c
 1492 01ba DD010000 		.4byte	0x1dd
 1493 01be 10       		.uleb128 0x10
 1494 01bf 83010000 		.4byte	.LASF33
 1495 01c3 01       		.byte	0x1
 1496 01c4 A201     		.2byte	0x1a2
 1497 01c6 81000000 		.4byte	0x81
 1498 01ca 02       		.uleb128 0x2
 1499 01cb 91       		.byte	0x91
 1500 01cc 6C       		.sleb128 -20
 1501 01cd 11       		.uleb128 0x11
 1502 01ce 48040000 		.4byte	.LASF30
 1503 01d2 01       		.byte	0x1
 1504 01d3 A401     		.2byte	0x1a4
 1505 01d5 81000000 		.4byte	0x81
 1506 01d9 02       		.uleb128 0x2
 1507 01da 91       		.byte	0x91
 1508 01db 74       		.sleb128 -12
 1509 01dc 00       		.byte	0
 1510 01dd 12       		.uleb128 0x12
 1511 01de D0000000 		.4byte	.LASF32
 1512 01e2 01       		.byte	0x1
 1513 01e3 D801     		.2byte	0x1d8
 1514 01e5 8C000000 		.4byte	0x8c
 1515 01e9 00000000 		.4byte	.LFB9
 1516 01ed 44000000 		.4byte	.LFE9-.LFB9
 1517 01f1 01       		.uleb128 0x1
 1518 01f2 9C       		.byte	0x9c
 1519 01f3 16020000 		.4byte	0x216
 1520 01f7 10       		.uleb128 0x10
 1521 01f8 9F030000 		.4byte	.LASF34
 1522 01fc 01       		.byte	0x1
 1523 01fd D801     		.2byte	0x1d8
 1524 01ff 81000000 		.4byte	0x81
 1525 0203 02       		.uleb128 0x2
 1526 0204 91       		.byte	0x91
 1527 0205 6C       		.sleb128 -20
 1528 0206 11       		.uleb128 0x11
 1529 0207 88040000 		.4byte	.LASF35
 1530 020b 01       		.byte	0x1
 1531 020c DA01     		.2byte	0x1da
 1532 020e 81000000 		.4byte	0x81
 1533 0212 02       		.uleb128 0x2
 1534 0213 91       		.byte	0x91
 1535 0214 74       		.sleb128 -12
 1536 0215 00       		.byte	0
 1537 0216 13       		.uleb128 0x13
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 43


 1538 0217 7F030000 		.4byte	.LASF37
 1539 021b 01       		.byte	0x1
 1540 021c 0502     		.2byte	0x205
 1541 021e 00000000 		.4byte	.LFB10
 1542 0222 1C000000 		.4byte	.LFE10-.LFB10
 1543 0226 01       		.uleb128 0x1
 1544 0227 9C       		.byte	0x9c
 1545 0228 3C020000 		.4byte	0x23c
 1546 022c 10       		.uleb128 0x10
 1547 022d 60010000 		.4byte	.LASF38
 1548 0231 01       		.byte	0x1
 1549 0232 0502     		.2byte	0x205
 1550 0234 81000000 		.4byte	0x81
 1551 0238 02       		.uleb128 0x2
 1552 0239 91       		.byte	0x91
 1553 023a 74       		.sleb128 -12
 1554 023b 00       		.byte	0
 1555 023c 13       		.uleb128 0x13
 1556 023d A9030000 		.4byte	.LASF39
 1557 0241 01       		.byte	0x1
 1558 0242 3102     		.2byte	0x231
 1559 0244 00000000 		.4byte	.LFB11
 1560 0248 30000000 		.4byte	.LFE11-.LFB11
 1561 024c 01       		.uleb128 0x1
 1562 024d 9C       		.byte	0x9c
 1563 024e 62020000 		.4byte	0x262
 1564 0252 10       		.uleb128 0x10
 1565 0253 4E020000 		.4byte	.LASF40
 1566 0257 01       		.byte	0x1
 1567 0258 3102     		.2byte	0x231
 1568 025a 81000000 		.4byte	0x81
 1569 025e 02       		.uleb128 0x2
 1570 025f 91       		.byte	0x91
 1571 0260 74       		.sleb128 -12
 1572 0261 00       		.byte	0
 1573 0262 13       		.uleb128 0x13
 1574 0263 04010000 		.4byte	.LASF41
 1575 0267 01       		.byte	0x1
 1576 0268 4602     		.2byte	0x246
 1577 026a 00000000 		.4byte	.LFB12
 1578 026e 2C000000 		.4byte	.LFE12-.LFB12
 1579 0272 01       		.uleb128 0x1
 1580 0273 9C       		.byte	0x9c
 1581 0274 88020000 		.4byte	0x288
 1582 0278 10       		.uleb128 0x10
 1583 0279 40030000 		.4byte	.LASF42
 1584 027d 01       		.byte	0x1
 1585 027e 4602     		.2byte	0x246
 1586 0280 81000000 		.4byte	0x81
 1587 0284 02       		.uleb128 0x2
 1588 0285 91       		.byte	0x91
 1589 0286 74       		.sleb128 -12
 1590 0287 00       		.byte	0
 1591 0288 13       		.uleb128 0x13
 1592 0289 6D040000 		.4byte	.LASF43
 1593 028d 01       		.byte	0x1
 1594 028e 5E02     		.2byte	0x25e
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 44


 1595 0290 00000000 		.4byte	.LFB13
 1596 0294 1C000000 		.4byte	.LFE13-.LFB13
 1597 0298 01       		.uleb128 0x1
 1598 0299 9C       		.byte	0x9c
 1599 029a AE020000 		.4byte	0x2ae
 1600 029e 10       		.uleb128 0x10
 1601 029f 60010000 		.4byte	.LASF38
 1602 02a3 01       		.byte	0x1
 1603 02a4 5E02     		.2byte	0x25e
 1604 02a6 81000000 		.4byte	0x81
 1605 02aa 02       		.uleb128 0x2
 1606 02ab 91       		.byte	0x91
 1607 02ac 74       		.sleb128 -12
 1608 02ad 00       		.byte	0
 1609 02ae 13       		.uleb128 0x13
 1610 02af 59000000 		.4byte	.LASF44
 1611 02b3 01       		.byte	0x1
 1612 02b4 7502     		.2byte	0x275
 1613 02b6 00000000 		.4byte	.LFB14
 1614 02ba 1C000000 		.4byte	.LFE14-.LFB14
 1615 02be 01       		.uleb128 0x1
 1616 02bf 9C       		.byte	0x9c
 1617 02c0 D4020000 		.4byte	0x2d4
 1618 02c4 10       		.uleb128 0x10
 1619 02c5 60010000 		.4byte	.LASF38
 1620 02c9 01       		.byte	0x1
 1621 02ca 7502     		.2byte	0x275
 1622 02cc 81000000 		.4byte	0x81
 1623 02d0 02       		.uleb128 0x2
 1624 02d1 91       		.byte	0x91
 1625 02d2 74       		.sleb128 -12
 1626 02d3 00       		.byte	0
 1627 02d4 14       		.uleb128 0x14
 1628 02d5 4F040000 		.4byte	.LASF45
 1629 02d9 01       		.byte	0x1
 1630 02da 9102     		.2byte	0x291
 1631 02dc 00000000 		.4byte	.LFB15
 1632 02e0 30000000 		.4byte	.LFE15-.LFB15
 1633 02e4 01       		.uleb128 0x1
 1634 02e5 9C       		.byte	0x9c
 1635 02e6 09030000 		.4byte	0x309
 1636 02ea 10       		.uleb128 0x10
 1637 02eb 9F030000 		.4byte	.LASF34
 1638 02ef 01       		.byte	0x1
 1639 02f0 9102     		.2byte	0x291
 1640 02f2 81000000 		.4byte	0x81
 1641 02f6 02       		.uleb128 0x2
 1642 02f7 91       		.byte	0x91
 1643 02f8 74       		.sleb128 -12
 1644 02f9 10       		.uleb128 0x10
 1645 02fa C3030000 		.4byte	.LASF46
 1646 02fe 01       		.byte	0x1
 1647 02ff 9102     		.2byte	0x291
 1648 0301 8C000000 		.4byte	0x8c
 1649 0305 02       		.uleb128 0x2
 1650 0306 91       		.byte	0x91
 1651 0307 72       		.sleb128 -14
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 45


 1652 0308 00       		.byte	0
 1653 0309 14       		.uleb128 0x14
 1654 030a 17030000 		.4byte	.LASF47
 1655 030e 01       		.byte	0x1
 1656 030f B302     		.2byte	0x2b3
 1657 0311 00000000 		.4byte	.LFB16
 1658 0315 2C000000 		.4byte	.LFE16-.LFB16
 1659 0319 01       		.uleb128 0x1
 1660 031a 9C       		.byte	0x9c
 1661 031b 3E030000 		.4byte	0x33e
 1662 031f 10       		.uleb128 0x10
 1663 0320 9F030000 		.4byte	.LASF34
 1664 0324 01       		.byte	0x1
 1665 0325 B302     		.2byte	0x2b3
 1666 0327 81000000 		.4byte	0x81
 1667 032b 02       		.uleb128 0x2
 1668 032c 91       		.byte	0x91
 1669 032d 74       		.sleb128 -12
 1670 032e 10       		.uleb128 0x10
 1671 032f 2F000000 		.4byte	.LASF48
 1672 0333 01       		.byte	0x1
 1673 0334 B302     		.2byte	0x2b3
 1674 0336 97000000 		.4byte	0x97
 1675 033a 02       		.uleb128 0x2
 1676 033b 91       		.byte	0x91
 1677 033c 70       		.sleb128 -16
 1678 033d 00       		.byte	0
 1679 033e 12       		.uleb128 0x12
 1680 033f 65010000 		.4byte	.LASF49
 1681 0343 01       		.byte	0x1
 1682 0344 D402     		.2byte	0x2d4
 1683 0346 8C000000 		.4byte	0x8c
 1684 034a 00000000 		.4byte	.LFB17
 1685 034e A4000000 		.4byte	.LFE17-.LFB17
 1686 0352 01       		.uleb128 0x1
 1687 0353 9C       		.byte	0x9c
 1688 0354 86030000 		.4byte	0x386
 1689 0358 10       		.uleb128 0x10
 1690 0359 9F030000 		.4byte	.LASF34
 1691 035d 01       		.byte	0x1
 1692 035e D402     		.2byte	0x2d4
 1693 0360 81000000 		.4byte	0x81
 1694 0364 02       		.uleb128 0x2
 1695 0365 91       		.byte	0x91
 1696 0366 6C       		.sleb128 -20
 1697 0367 10       		.uleb128 0x10
 1698 0368 20040000 		.4byte	.LASF50
 1699 036c 01       		.byte	0x1
 1700 036d D402     		.2byte	0x2d4
 1701 036f 8C000000 		.4byte	0x8c
 1702 0373 02       		.uleb128 0x2
 1703 0374 91       		.byte	0x91
 1704 0375 6A       		.sleb128 -22
 1705 0376 11       		.uleb128 0x11
 1706 0377 07020000 		.4byte	.LASF51
 1707 037b 01       		.byte	0x1
 1708 037c D602     		.2byte	0x2d6
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 46


 1709 037e 8C000000 		.4byte	0x8c
 1710 0382 02       		.uleb128 0x2
 1711 0383 91       		.byte	0x91
 1712 0384 76       		.sleb128 -10
 1713 0385 00       		.byte	0
 1714 0386 12       		.uleb128 0x12
 1715 0387 25010000 		.4byte	.LASF52
 1716 038b 01       		.byte	0x1
 1717 038c 0A03     		.2byte	0x30a
 1718 038e 97000000 		.4byte	0x97
 1719 0392 00000000 		.4byte	.LFB18
 1720 0396 98000000 		.4byte	.LFE18-.LFB18
 1721 039a 01       		.uleb128 0x1
 1722 039b 9C       		.byte	0x9c
 1723 039c CE030000 		.4byte	0x3ce
 1724 03a0 10       		.uleb128 0x10
 1725 03a1 9F030000 		.4byte	.LASF34
 1726 03a5 01       		.byte	0x1
 1727 03a6 0A03     		.2byte	0x30a
 1728 03a8 81000000 		.4byte	0x81
 1729 03ac 02       		.uleb128 0x2
 1730 03ad 91       		.byte	0x91
 1731 03ae 64       		.sleb128 -28
 1732 03af 10       		.uleb128 0x10
 1733 03b0 20040000 		.4byte	.LASF50
 1734 03b4 01       		.byte	0x1
 1735 03b5 0A03     		.2byte	0x30a
 1736 03b7 8C000000 		.4byte	0x8c
 1737 03bb 02       		.uleb128 0x2
 1738 03bc 91       		.byte	0x91
 1739 03bd 62       		.sleb128 -30
 1740 03be 11       		.uleb128 0x11
 1741 03bf AE010000 		.4byte	.LASF53
 1742 03c3 01       		.byte	0x1
 1743 03c4 0C03     		.2byte	0x30c
 1744 03c6 BB000000 		.4byte	0xbb
 1745 03ca 02       		.uleb128 0x2
 1746 03cb 91       		.byte	0x91
 1747 03cc 68       		.sleb128 -24
 1748 03cd 00       		.byte	0
 1749 03ce 12       		.uleb128 0x12
 1750 03cf 62030000 		.4byte	.LASF54
 1751 03d3 01       		.byte	0x1
 1752 03d4 3703     		.2byte	0x337
 1753 03d6 A2000000 		.4byte	0xa2
 1754 03da 00000000 		.4byte	.LFB19
 1755 03de 80000000 		.4byte	.LFE19-.LFB19
 1756 03e2 01       		.uleb128 0x1
 1757 03e3 9C       		.byte	0x9c
 1758 03e4 16040000 		.4byte	0x416
 1759 03e8 10       		.uleb128 0x10
 1760 03e9 9F030000 		.4byte	.LASF34
 1761 03ed 01       		.byte	0x1
 1762 03ee 3703     		.2byte	0x337
 1763 03f0 81000000 		.4byte	0x81
 1764 03f4 02       		.uleb128 0x2
 1765 03f5 91       		.byte	0x91
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 47


 1766 03f6 64       		.sleb128 -28
 1767 03f7 10       		.uleb128 0x10
 1768 03f8 20040000 		.4byte	.LASF50
 1769 03fc 01       		.byte	0x1
 1770 03fd 3703     		.2byte	0x337
 1771 03ff 8C000000 		.4byte	0x8c
 1772 0403 02       		.uleb128 0x2
 1773 0404 91       		.byte	0x91
 1774 0405 62       		.sleb128 -30
 1775 0406 11       		.uleb128 0x11
 1776 0407 C7010000 		.4byte	.LASF55
 1777 040b 01       		.byte	0x1
 1778 040c 3903     		.2byte	0x339
 1779 040e A2000000 		.4byte	0xa2
 1780 0412 02       		.uleb128 0x2
 1781 0413 91       		.byte	0x91
 1782 0414 6C       		.sleb128 -20
 1783 0415 00       		.byte	0
 1784 0416 0A       		.uleb128 0xa
 1785 0417 81000000 		.4byte	0x81
 1786 041b 26040000 		.4byte	0x426
 1787 041f 0B       		.uleb128 0xb
 1788 0420 DE000000 		.4byte	0xde
 1789 0424 03       		.byte	0x3
 1790 0425 00       		.byte	0
 1791 0426 09       		.uleb128 0x9
 1792 0427 EA010000 		.4byte	.LASF56
 1793 042b 01       		.byte	0x1
 1794 042c 21       		.byte	0x21
 1795 042d 37040000 		.4byte	0x437
 1796 0431 05       		.uleb128 0x5
 1797 0432 03       		.byte	0x3
 1798 0433 00000000 		.4byte	ADC_SAR_Seq_1_channelsConfig
 1799 0437 0C       		.uleb128 0xc
 1800 0438 16040000 		.4byte	0x416
 1801 043c 15       		.uleb128 0x15
 1802 043d 8B010000 		.4byte	.LASF57
 1803 0441 01       		.byte	0x1
 1804 0442 18       		.byte	0x18
 1805 0443 6B000000 		.4byte	0x6b
 1806 0447 05       		.uleb128 0x5
 1807 0448 03       		.byte	0x3
 1808 0449 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1809 044d 0A       		.uleb128 0xa
 1810 044e 8C000000 		.4byte	0x8c
 1811 0452 5D040000 		.4byte	0x45d
 1812 0456 0B       		.uleb128 0xb
 1813 0457 DE000000 		.4byte	0xde
 1814 045b 03       		.byte	0x3
 1815 045c 00       		.byte	0
 1816 045d 15       		.uleb128 0x15
 1817 045e 00000000 		.4byte	.LASF58
 1818 0462 01       		.byte	0x1
 1819 0463 19       		.byte	0x19
 1820 0464 6E040000 		.4byte	0x46e
 1821 0468 05       		.uleb128 0x5
 1822 0469 03       		.byte	0x3
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 48


 1823 046a 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1824 046e 06       		.uleb128 0x6
 1825 046f 4D040000 		.4byte	0x44d
 1826 0473 0A       		.uleb128 0xa
 1827 0474 97000000 		.4byte	0x97
 1828 0478 83040000 		.4byte	0x483
 1829 047c 0B       		.uleb128 0xb
 1830 047d DE000000 		.4byte	0xde
 1831 0481 03       		.byte	0x3
 1832 0482 00       		.byte	0
 1833 0483 15       		.uleb128 0x15
 1834 0484 2A040000 		.4byte	.LASF59
 1835 0488 01       		.byte	0x1
 1836 0489 1A       		.byte	0x1a
 1837 048a 94040000 		.4byte	0x494
 1838 048e 05       		.uleb128 0x5
 1839 048f 03       		.byte	0x3
 1840 0490 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1841 0494 06       		.uleb128 0x6
 1842 0495 73040000 		.4byte	0x473
 1843 0499 00       		.byte	0
 1844              		.section	.debug_abbrev,"",%progbits
 1845              	.Ldebug_abbrev0:
 1846 0000 01       		.uleb128 0x1
 1847 0001 11       		.uleb128 0x11
 1848 0002 01       		.byte	0x1
 1849 0003 25       		.uleb128 0x25
 1850 0004 0E       		.uleb128 0xe
 1851 0005 13       		.uleb128 0x13
 1852 0006 0B       		.uleb128 0xb
 1853 0007 03       		.uleb128 0x3
 1854 0008 0E       		.uleb128 0xe
 1855 0009 1B       		.uleb128 0x1b
 1856 000a 0E       		.uleb128 0xe
 1857 000b 55       		.uleb128 0x55
 1858 000c 17       		.uleb128 0x17
 1859 000d 11       		.uleb128 0x11
 1860 000e 01       		.uleb128 0x1
 1861 000f 10       		.uleb128 0x10
 1862 0010 17       		.uleb128 0x17
 1863 0011 00       		.byte	0
 1864 0012 00       		.byte	0
 1865 0013 02       		.uleb128 0x2
 1866 0014 24       		.uleb128 0x24
 1867 0015 00       		.byte	0
 1868 0016 0B       		.uleb128 0xb
 1869 0017 0B       		.uleb128 0xb
 1870 0018 3E       		.uleb128 0x3e
 1871 0019 0B       		.uleb128 0xb
 1872 001a 03       		.uleb128 0x3
 1873 001b 0E       		.uleb128 0xe
 1874 001c 00       		.byte	0
 1875 001d 00       		.byte	0
 1876 001e 03       		.uleb128 0x3
 1877 001f 24       		.uleb128 0x24
 1878 0020 00       		.byte	0
 1879 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 49


 1880 0022 0B       		.uleb128 0xb
 1881 0023 3E       		.uleb128 0x3e
 1882 0024 0B       		.uleb128 0xb
 1883 0025 03       		.uleb128 0x3
 1884 0026 08       		.uleb128 0x8
 1885 0027 00       		.byte	0
 1886 0028 00       		.byte	0
 1887 0029 04       		.uleb128 0x4
 1888 002a 16       		.uleb128 0x16
 1889 002b 00       		.byte	0
 1890 002c 03       		.uleb128 0x3
 1891 002d 0E       		.uleb128 0xe
 1892 002e 3A       		.uleb128 0x3a
 1893 002f 0B       		.uleb128 0xb
 1894 0030 3B       		.uleb128 0x3b
 1895 0031 0B       		.uleb128 0xb
 1896 0032 49       		.uleb128 0x49
 1897 0033 13       		.uleb128 0x13
 1898 0034 00       		.byte	0
 1899 0035 00       		.byte	0
 1900 0036 05       		.uleb128 0x5
 1901 0037 16       		.uleb128 0x16
 1902 0038 00       		.byte	0
 1903 0039 03       		.uleb128 0x3
 1904 003a 0E       		.uleb128 0xe
 1905 003b 3A       		.uleb128 0x3a
 1906 003c 0B       		.uleb128 0xb
 1907 003d 3B       		.uleb128 0x3b
 1908 003e 05       		.uleb128 0x5
 1909 003f 49       		.uleb128 0x49
 1910 0040 13       		.uleb128 0x13
 1911 0041 00       		.byte	0
 1912 0042 00       		.byte	0
 1913 0043 06       		.uleb128 0x6
 1914 0044 35       		.uleb128 0x35
 1915 0045 00       		.byte	0
 1916 0046 49       		.uleb128 0x49
 1917 0047 13       		.uleb128 0x13
 1918 0048 00       		.byte	0
 1919 0049 00       		.byte	0
 1920 004a 07       		.uleb128 0x7
 1921 004b 2E       		.uleb128 0x2e
 1922 004c 00       		.byte	0
 1923 004d 3F       		.uleb128 0x3f
 1924 004e 19       		.uleb128 0x19
 1925 004f 03       		.uleb128 0x3
 1926 0050 0E       		.uleb128 0xe
 1927 0051 3A       		.uleb128 0x3a
 1928 0052 0B       		.uleb128 0xb
 1929 0053 3B       		.uleb128 0x3b
 1930 0054 0B       		.uleb128 0xb
 1931 0055 27       		.uleb128 0x27
 1932 0056 19       		.uleb128 0x19
 1933 0057 11       		.uleb128 0x11
 1934 0058 01       		.uleb128 0x1
 1935 0059 12       		.uleb128 0x12
 1936 005a 06       		.uleb128 0x6
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 50


 1937 005b 40       		.uleb128 0x40
 1938 005c 18       		.uleb128 0x18
 1939 005d 9642     		.uleb128 0x2116
 1940 005f 19       		.uleb128 0x19
 1941 0060 00       		.byte	0
 1942 0061 00       		.byte	0
 1943 0062 08       		.uleb128 0x8
 1944 0063 2E       		.uleb128 0x2e
 1945 0064 01       		.byte	0x1
 1946 0065 3F       		.uleb128 0x3f
 1947 0066 19       		.uleb128 0x19
 1948 0067 03       		.uleb128 0x3
 1949 0068 0E       		.uleb128 0xe
 1950 0069 3A       		.uleb128 0x3a
 1951 006a 0B       		.uleb128 0xb
 1952 006b 3B       		.uleb128 0x3b
 1953 006c 0B       		.uleb128 0xb
 1954 006d 27       		.uleb128 0x27
 1955 006e 19       		.uleb128 0x19
 1956 006f 11       		.uleb128 0x11
 1957 0070 01       		.uleb128 0x1
 1958 0071 12       		.uleb128 0x12
 1959 0072 06       		.uleb128 0x6
 1960 0073 40       		.uleb128 0x40
 1961 0074 18       		.uleb128 0x18
 1962 0075 9642     		.uleb128 0x2116
 1963 0077 19       		.uleb128 0x19
 1964 0078 01       		.uleb128 0x1
 1965 0079 13       		.uleb128 0x13
 1966 007a 00       		.byte	0
 1967 007b 00       		.byte	0
 1968 007c 09       		.uleb128 0x9
 1969 007d 34       		.uleb128 0x34
 1970 007e 00       		.byte	0
 1971 007f 03       		.uleb128 0x3
 1972 0080 0E       		.uleb128 0xe
 1973 0081 3A       		.uleb128 0x3a
 1974 0082 0B       		.uleb128 0xb
 1975 0083 3B       		.uleb128 0x3b
 1976 0084 0B       		.uleb128 0xb
 1977 0085 49       		.uleb128 0x49
 1978 0086 13       		.uleb128 0x13
 1979 0087 02       		.uleb128 0x2
 1980 0088 18       		.uleb128 0x18
 1981 0089 00       		.byte	0
 1982 008a 00       		.byte	0
 1983 008b 0A       		.uleb128 0xa
 1984 008c 01       		.uleb128 0x1
 1985 008d 01       		.byte	0x1
 1986 008e 49       		.uleb128 0x49
 1987 008f 13       		.uleb128 0x13
 1988 0090 01       		.uleb128 0x1
 1989 0091 13       		.uleb128 0x13
 1990 0092 00       		.byte	0
 1991 0093 00       		.byte	0
 1992 0094 0B       		.uleb128 0xb
 1993 0095 21       		.uleb128 0x21
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 51


 1994 0096 00       		.byte	0
 1995 0097 49       		.uleb128 0x49
 1996 0098 13       		.uleb128 0x13
 1997 0099 2F       		.uleb128 0x2f
 1998 009a 0B       		.uleb128 0xb
 1999 009b 00       		.byte	0
 2000 009c 00       		.byte	0
 2001 009d 0C       		.uleb128 0xc
 2002 009e 26       		.uleb128 0x26
 2003 009f 00       		.byte	0
 2004 00a0 49       		.uleb128 0x49
 2005 00a1 13       		.uleb128 0x13
 2006 00a2 00       		.byte	0
 2007 00a3 00       		.byte	0
 2008 00a4 0D       		.uleb128 0xd
 2009 00a5 2E       		.uleb128 0x2e
 2010 00a6 00       		.byte	0
 2011 00a7 3F       		.uleb128 0x3f
 2012 00a8 19       		.uleb128 0x19
 2013 00a9 03       		.uleb128 0x3
 2014 00aa 0E       		.uleb128 0xe
 2015 00ab 3A       		.uleb128 0x3a
 2016 00ac 0B       		.uleb128 0xb
 2017 00ad 3B       		.uleb128 0x3b
 2018 00ae 05       		.uleb128 0x5
 2019 00af 27       		.uleb128 0x27
 2020 00b0 19       		.uleb128 0x19
 2021 00b1 11       		.uleb128 0x11
 2022 00b2 01       		.uleb128 0x1
 2023 00b3 12       		.uleb128 0x12
 2024 00b4 06       		.uleb128 0x6
 2025 00b5 40       		.uleb128 0x40
 2026 00b6 18       		.uleb128 0x18
 2027 00b7 9642     		.uleb128 0x2116
 2028 00b9 19       		.uleb128 0x19
 2029 00ba 00       		.byte	0
 2030 00bb 00       		.byte	0
 2031 00bc 0E       		.uleb128 0xe
 2032 00bd 2E       		.uleb128 0x2e
 2033 00be 00       		.byte	0
 2034 00bf 3F       		.uleb128 0x3f
 2035 00c0 19       		.uleb128 0x19
 2036 00c1 03       		.uleb128 0x3
 2037 00c2 0E       		.uleb128 0xe
 2038 00c3 3A       		.uleb128 0x3a
 2039 00c4 0B       		.uleb128 0xb
 2040 00c5 3B       		.uleb128 0x3b
 2041 00c6 05       		.uleb128 0x5
 2042 00c7 27       		.uleb128 0x27
 2043 00c8 19       		.uleb128 0x19
 2044 00c9 11       		.uleb128 0x11
 2045 00ca 01       		.uleb128 0x1
 2046 00cb 12       		.uleb128 0x12
 2047 00cc 06       		.uleb128 0x6
 2048 00cd 40       		.uleb128 0x40
 2049 00ce 18       		.uleb128 0x18
 2050 00cf 9742     		.uleb128 0x2117
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 52


 2051 00d1 19       		.uleb128 0x19
 2052 00d2 00       		.byte	0
 2053 00d3 00       		.byte	0
 2054 00d4 0F       		.uleb128 0xf
 2055 00d5 2E       		.uleb128 0x2e
 2056 00d6 01       		.byte	0x1
 2057 00d7 3F       		.uleb128 0x3f
 2058 00d8 19       		.uleb128 0x19
 2059 00d9 03       		.uleb128 0x3
 2060 00da 0E       		.uleb128 0xe
 2061 00db 3A       		.uleb128 0x3a
 2062 00dc 0B       		.uleb128 0xb
 2063 00dd 3B       		.uleb128 0x3b
 2064 00de 05       		.uleb128 0x5
 2065 00df 27       		.uleb128 0x27
 2066 00e0 19       		.uleb128 0x19
 2067 00e1 49       		.uleb128 0x49
 2068 00e2 13       		.uleb128 0x13
 2069 00e3 11       		.uleb128 0x11
 2070 00e4 01       		.uleb128 0x1
 2071 00e5 12       		.uleb128 0x12
 2072 00e6 06       		.uleb128 0x6
 2073 00e7 40       		.uleb128 0x40
 2074 00e8 18       		.uleb128 0x18
 2075 00e9 9742     		.uleb128 0x2117
 2076 00eb 19       		.uleb128 0x19
 2077 00ec 01       		.uleb128 0x1
 2078 00ed 13       		.uleb128 0x13
 2079 00ee 00       		.byte	0
 2080 00ef 00       		.byte	0
 2081 00f0 10       		.uleb128 0x10
 2082 00f1 05       		.uleb128 0x5
 2083 00f2 00       		.byte	0
 2084 00f3 03       		.uleb128 0x3
 2085 00f4 0E       		.uleb128 0xe
 2086 00f5 3A       		.uleb128 0x3a
 2087 00f6 0B       		.uleb128 0xb
 2088 00f7 3B       		.uleb128 0x3b
 2089 00f8 05       		.uleb128 0x5
 2090 00f9 49       		.uleb128 0x49
 2091 00fa 13       		.uleb128 0x13
 2092 00fb 02       		.uleb128 0x2
 2093 00fc 18       		.uleb128 0x18
 2094 00fd 00       		.byte	0
 2095 00fe 00       		.byte	0
 2096 00ff 11       		.uleb128 0x11
 2097 0100 34       		.uleb128 0x34
 2098 0101 00       		.byte	0
 2099 0102 03       		.uleb128 0x3
 2100 0103 0E       		.uleb128 0xe
 2101 0104 3A       		.uleb128 0x3a
 2102 0105 0B       		.uleb128 0xb
 2103 0106 3B       		.uleb128 0x3b
 2104 0107 05       		.uleb128 0x5
 2105 0108 49       		.uleb128 0x49
 2106 0109 13       		.uleb128 0x13
 2107 010a 02       		.uleb128 0x2
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 53


 2108 010b 18       		.uleb128 0x18
 2109 010c 00       		.byte	0
 2110 010d 00       		.byte	0
 2111 010e 12       		.uleb128 0x12
 2112 010f 2E       		.uleb128 0x2e
 2113 0110 01       		.byte	0x1
 2114 0111 3F       		.uleb128 0x3f
 2115 0112 19       		.uleb128 0x19
 2116 0113 03       		.uleb128 0x3
 2117 0114 0E       		.uleb128 0xe
 2118 0115 3A       		.uleb128 0x3a
 2119 0116 0B       		.uleb128 0xb
 2120 0117 3B       		.uleb128 0x3b
 2121 0118 05       		.uleb128 0x5
 2122 0119 27       		.uleb128 0x27
 2123 011a 19       		.uleb128 0x19
 2124 011b 49       		.uleb128 0x49
 2125 011c 13       		.uleb128 0x13
 2126 011d 11       		.uleb128 0x11
 2127 011e 01       		.uleb128 0x1
 2128 011f 12       		.uleb128 0x12
 2129 0120 06       		.uleb128 0x6
 2130 0121 40       		.uleb128 0x40
 2131 0122 18       		.uleb128 0x18
 2132 0123 9642     		.uleb128 0x2116
 2133 0125 19       		.uleb128 0x19
 2134 0126 01       		.uleb128 0x1
 2135 0127 13       		.uleb128 0x13
 2136 0128 00       		.byte	0
 2137 0129 00       		.byte	0
 2138 012a 13       		.uleb128 0x13
 2139 012b 2E       		.uleb128 0x2e
 2140 012c 01       		.byte	0x1
 2141 012d 3F       		.uleb128 0x3f
 2142 012e 19       		.uleb128 0x19
 2143 012f 03       		.uleb128 0x3
 2144 0130 0E       		.uleb128 0xe
 2145 0131 3A       		.uleb128 0x3a
 2146 0132 0B       		.uleb128 0xb
 2147 0133 3B       		.uleb128 0x3b
 2148 0134 05       		.uleb128 0x5
 2149 0135 27       		.uleb128 0x27
 2150 0136 19       		.uleb128 0x19
 2151 0137 11       		.uleb128 0x11
 2152 0138 01       		.uleb128 0x1
 2153 0139 12       		.uleb128 0x12
 2154 013a 06       		.uleb128 0x6
 2155 013b 40       		.uleb128 0x40
 2156 013c 18       		.uleb128 0x18
 2157 013d 9742     		.uleb128 0x2117
 2158 013f 19       		.uleb128 0x19
 2159 0140 01       		.uleb128 0x1
 2160 0141 13       		.uleb128 0x13
 2161 0142 00       		.byte	0
 2162 0143 00       		.byte	0
 2163 0144 14       		.uleb128 0x14
 2164 0145 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 54


 2165 0146 01       		.byte	0x1
 2166 0147 3F       		.uleb128 0x3f
 2167 0148 19       		.uleb128 0x19
 2168 0149 03       		.uleb128 0x3
 2169 014a 0E       		.uleb128 0xe
 2170 014b 3A       		.uleb128 0x3a
 2171 014c 0B       		.uleb128 0xb
 2172 014d 3B       		.uleb128 0x3b
 2173 014e 05       		.uleb128 0x5
 2174 014f 27       		.uleb128 0x27
 2175 0150 19       		.uleb128 0x19
 2176 0151 11       		.uleb128 0x11
 2177 0152 01       		.uleb128 0x1
 2178 0153 12       		.uleb128 0x12
 2179 0154 06       		.uleb128 0x6
 2180 0155 40       		.uleb128 0x40
 2181 0156 18       		.uleb128 0x18
 2182 0157 9642     		.uleb128 0x2116
 2183 0159 19       		.uleb128 0x19
 2184 015a 01       		.uleb128 0x1
 2185 015b 13       		.uleb128 0x13
 2186 015c 00       		.byte	0
 2187 015d 00       		.byte	0
 2188 015e 15       		.uleb128 0x15
 2189 015f 34       		.uleb128 0x34
 2190 0160 00       		.byte	0
 2191 0161 03       		.uleb128 0x3
 2192 0162 0E       		.uleb128 0xe
 2193 0163 3A       		.uleb128 0x3a
 2194 0164 0B       		.uleb128 0xb
 2195 0165 3B       		.uleb128 0x3b
 2196 0166 0B       		.uleb128 0xb
 2197 0167 49       		.uleb128 0x49
 2198 0168 13       		.uleb128 0x13
 2199 0169 3F       		.uleb128 0x3f
 2200 016a 19       		.uleb128 0x19
 2201 016b 02       		.uleb128 0x2
 2202 016c 18       		.uleb128 0x18
 2203 016d 00       		.byte	0
 2204 016e 00       		.byte	0
 2205 016f 00       		.byte	0
 2206              		.section	.debug_aranges,"",%progbits
 2207 0000 A4000000 		.4byte	0xa4
 2208 0004 0200     		.2byte	0x2
 2209 0006 00000000 		.4byte	.Ldebug_info0
 2210 000a 04       		.byte	0x4
 2211 000b 00       		.byte	0
 2212 000c 0000     		.2byte	0
 2213 000e 0000     		.2byte	0
 2214 0010 00000000 		.4byte	.LFB2
 2215 0014 24000000 		.4byte	.LFE2-.LFB2
 2216 0018 00000000 		.4byte	.LFB3
 2217 001c 0C020000 		.4byte	.LFE3-.LFB3
 2218 0020 00000000 		.4byte	.LFB4
 2219 0024 38000000 		.4byte	.LFE4-.LFB4
 2220 0028 00000000 		.4byte	.LFB5
 2221 002c 18000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 55


 2222 0030 00000000 		.4byte	.LFB6
 2223 0034 1C000000 		.4byte	.LFE6-.LFB6
 2224 0038 00000000 		.4byte	.LFB7
 2225 003c 1C000000 		.4byte	.LFE7-.LFB7
 2226 0040 00000000 		.4byte	.LFB8
 2227 0044 48000000 		.4byte	.LFE8-.LFB8
 2228 0048 00000000 		.4byte	.LFB9
 2229 004c 44000000 		.4byte	.LFE9-.LFB9
 2230 0050 00000000 		.4byte	.LFB10
 2231 0054 1C000000 		.4byte	.LFE10-.LFB10
 2232 0058 00000000 		.4byte	.LFB11
 2233 005c 30000000 		.4byte	.LFE11-.LFB11
 2234 0060 00000000 		.4byte	.LFB12
 2235 0064 2C000000 		.4byte	.LFE12-.LFB12
 2236 0068 00000000 		.4byte	.LFB13
 2237 006c 1C000000 		.4byte	.LFE13-.LFB13
 2238 0070 00000000 		.4byte	.LFB14
 2239 0074 1C000000 		.4byte	.LFE14-.LFB14
 2240 0078 00000000 		.4byte	.LFB15
 2241 007c 30000000 		.4byte	.LFE15-.LFB15
 2242 0080 00000000 		.4byte	.LFB16
 2243 0084 2C000000 		.4byte	.LFE16-.LFB16
 2244 0088 00000000 		.4byte	.LFB17
 2245 008c A4000000 		.4byte	.LFE17-.LFB17
 2246 0090 00000000 		.4byte	.LFB18
 2247 0094 98000000 		.4byte	.LFE18-.LFB18
 2248 0098 00000000 		.4byte	.LFB19
 2249 009c 80000000 		.4byte	.LFE19-.LFB19
 2250 00a0 00000000 		.4byte	0
 2251 00a4 00000000 		.4byte	0
 2252              		.section	.debug_ranges,"",%progbits
 2253              	.Ldebug_ranges0:
 2254 0000 00000000 		.4byte	.LFB2
 2255 0004 24000000 		.4byte	.LFE2
 2256 0008 00000000 		.4byte	.LFB3
 2257 000c 0C020000 		.4byte	.LFE3
 2258 0010 00000000 		.4byte	.LFB4
 2259 0014 38000000 		.4byte	.LFE4
 2260 0018 00000000 		.4byte	.LFB5
 2261 001c 18000000 		.4byte	.LFE5
 2262 0020 00000000 		.4byte	.LFB6
 2263 0024 1C000000 		.4byte	.LFE6
 2264 0028 00000000 		.4byte	.LFB7
 2265 002c 1C000000 		.4byte	.LFE7
 2266 0030 00000000 		.4byte	.LFB8
 2267 0034 48000000 		.4byte	.LFE8
 2268 0038 00000000 		.4byte	.LFB9
 2269 003c 44000000 		.4byte	.LFE9
 2270 0040 00000000 		.4byte	.LFB10
 2271 0044 1C000000 		.4byte	.LFE10
 2272 0048 00000000 		.4byte	.LFB11
 2273 004c 30000000 		.4byte	.LFE11
 2274 0050 00000000 		.4byte	.LFB12
 2275 0054 2C000000 		.4byte	.LFE12
 2276 0058 00000000 		.4byte	.LFB13
 2277 005c 1C000000 		.4byte	.LFE13
 2278 0060 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 56


 2279 0064 1C000000 		.4byte	.LFE14
 2280 0068 00000000 		.4byte	.LFB15
 2281 006c 30000000 		.4byte	.LFE15
 2282 0070 00000000 		.4byte	.LFB16
 2283 0074 2C000000 		.4byte	.LFE16
 2284 0078 00000000 		.4byte	.LFB17
 2285 007c A4000000 		.4byte	.LFE17
 2286 0080 00000000 		.4byte	.LFB18
 2287 0084 98000000 		.4byte	.LFE18
 2288 0088 00000000 		.4byte	.LFB19
 2289 008c 80000000 		.4byte	.LFE19
 2290 0090 00000000 		.4byte	0
 2291 0094 00000000 		.4byte	0
 2292              		.section	.debug_line,"",%progbits
 2293              	.Ldebug_line0:
 2294 0000 93020000 		.section	.debug_str,"MS",%progbits,1
 2294      02004C00 
 2294      00000201 
 2294      FB0E0D00 
 2294      01010101 
 2295              	.LASF58:
 2296 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2296      5341525F 
 2296      5365715F 
 2296      315F6F66 
 2296      66736574 
 2297              	.LASF10:
 2298 0015 75696E74 		.ascii	"uint16\000"
 2298      313600
 2299              	.LASF36:
 2300 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2300      5341525F 
 2300      5365715F 
 2300      315F496E 
 2300      697400
 2301              	.LASF48:
 2302 002f 61646347 		.ascii	"adcGain\000"
 2302      61696E00 
 2303              	.LASF23:
 2304 0037 636F756E 		.ascii	"counts\000"
 2304      747300
 2305              	.LASF28:
 2306 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2306      5341525F 
 2306      5365715F 
 2306      315F5374 
 2306      61727443 
 2307              	.LASF44:
 2308 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2308      5341525F 
 2308      5365715F 
 2308      315F5365 
 2308      74536174 
 2309              	.LASF25:
 2310 0072 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2310      5341525F 
 2310      5365715F 
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 57


 2310      315F5374 
 2310      61727400 
 2311              	.LASF7:
 2312 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 2312      206C6F6E 
 2312      6720756E 
 2312      7369676E 
 2312      65642069 
 2313              	.LASF26:
 2314 009d 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2314      5341525F 
 2314      5365715F 
 2314      315F456E 
 2314      61626C65 
 2315              	.LASF24:
 2316 00b2 4144435F 		.ascii	"ADC_SAR_Seq_1_InputsPlacement\000"
 2316      5341525F 
 2316      5365715F 
 2316      315F496E 
 2316      70757473 
 2317              	.LASF32:
 2318 00d0 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2318      5341525F 
 2318      5365715F 
 2318      315F4765 
 2318      74526573 
 2319              	.LASF6:
 2320 00ea 6C6F6E67 		.ascii	"long long int\000"
 2320      206C6F6E 
 2320      6720696E 
 2320      7400
 2321              	.LASF0:
 2322 00f8 7369676E 		.ascii	"signed char\000"
 2322      65642063 
 2322      68617200 
 2323              	.LASF41:
 2324 0104 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2324      5341525F 
 2324      5365715F 
 2324      315F5365 
 2324      74486967 
 2325              	.LASF13:
 2326 011f 696E7433 		.ascii	"int32\000"
 2326      3200
 2327              	.LASF52:
 2328 0125 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2328      5341525F 
 2328      5365715F 
 2328      315F436F 
 2328      756E7473 
 2329              	.LASF4:
 2330 0143 6C6F6E67 		.ascii	"long int\000"
 2330      20696E74 
 2330      00
 2331              	.LASF9:
 2332 014c 75696E74 		.ascii	"uint8\000"
 2332      3800
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 58


 2333              	.LASF16:
 2334 0152 646F7562 		.ascii	"double\000"
 2334      6C6500
 2335              	.LASF11:
 2336 0159 75696E74 		.ascii	"uint32\000"
 2336      333200
 2337              	.LASF38:
 2338 0160 6D61736B 		.ascii	"mask\000"
 2338      00
 2339              	.LASF49:
 2340 0165 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2340      5341525F 
 2340      5365715F 
 2340      315F436F 
 2340      756E7473 
 2341              	.LASF33:
 2342 0183 7265744D 		.ascii	"retMode\000"
 2342      6F646500 
 2343              	.LASF57:
 2344 018b 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2344      5341525F 
 2344      5365715F 
 2344      315F696E 
 2344      69745661 
 2345              	.LASF8:
 2346 01a1 756E7369 		.ascii	"unsigned int\000"
 2346      676E6564 
 2346      20696E74 
 2346      00
 2347              	.LASF53:
 2348 01ae 75566F6C 		.ascii	"uVolts\000"
 2348      747300
 2349              	.LASF5:
 2350 01b5 6C6F6E67 		.ascii	"long unsigned int\000"
 2350      20756E73 
 2350      69676E65 
 2350      6420696E 
 2350      7400
 2351              	.LASF55:
 2352 01c7 766F6C74 		.ascii	"volts\000"
 2352      7300
 2353              	.LASF22:
 2354 01cd 746D7052 		.ascii	"tmpRegVal\000"
 2354      65675661 
 2354      6C00
 2355              	.LASF3:
 2356 01d7 73686F72 		.ascii	"short unsigned int\000"
 2356      7420756E 
 2356      7369676E 
 2356      65642069 
 2356      6E7400
 2357              	.LASF56:
 2358 01ea 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2358      5341525F 
 2358      5365715F 
 2358      315F6368 
 2358      616E6E65 
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 59


 2359              	.LASF51:
 2360 0207 6D566F6C 		.ascii	"mVolts\000"
 2360      747300
 2361              	.LASF19:
 2362 020e 72656733 		.ascii	"reg32\000"
 2362      3200
 2363              	.LASF61:
 2364 0214 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2364      6E657261 
 2364      7465645F 
 2364      536F7572 
 2364      63655C50 
 2365              	.LASF14:
 2366 023d 666C6F61 		.ascii	"float32\000"
 2366      74333200 
 2367              	.LASF20:
 2368 0245 73697A65 		.ascii	"sizetype\000"
 2368      74797065 
 2368      00
 2369              	.LASF40:
 2370 024e 6C6F774C 		.ascii	"lowLimit\000"
 2370      696D6974 
 2370      00
 2371              	.LASF31:
 2372 0257 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2372      5341525F 
 2372      5365715F 
 2372      315F4973 
 2372      456E6443 
 2373              	.LASF29:
 2374 0275 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2374      5341525F 
 2374      5365715F 
 2374      315F5374 
 2374      6F70436F 
 2375              	.LASF17:
 2376 028f 696E7436 		.ascii	"int64\000"
 2376      3400
 2377              	.LASF15:
 2378 0295 666C6F61 		.ascii	"float\000"
 2378      7400
 2379              	.LASF60:
 2380 029b 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2380      4320342E 
 2380      382E3420 
 2380      32303134 
 2380      30353236 
 2381 02ce 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2381      20726576 
 2381      6973696F 
 2381      6E203231 
 2381      31333538 
 2382 0301 30202D66 		.ascii	"0 -ffunction-sections\000"
 2382      66756E63 
 2382      74696F6E 
 2382      2D736563 
 2382      74696F6E 
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 60


 2383              	.LASF47:
 2384 0317 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2384      5341525F 
 2384      5365715F 
 2384      315F5365 
 2384      74476169 
 2385              	.LASF27:
 2386 032d 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2386      5341525F 
 2386      5365715F 
 2386      315F5374 
 2386      6F7000
 2387              	.LASF42:
 2388 0340 68696768 		.ascii	"highLimit\000"
 2388      4C696D69 
 2388      7400
 2389              	.LASF1:
 2390 034a 756E7369 		.ascii	"unsigned char\000"
 2390      676E6564 
 2390      20636861 
 2390      7200
 2391              	.LASF2:
 2392 0358 73686F72 		.ascii	"short int\000"
 2392      7420696E 
 2392      7400
 2393              	.LASF54:
 2394 0362 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2394      5341525F 
 2394      5365715F 
 2394      315F436F 
 2394      756E7473 
 2395              	.LASF37:
 2396 037f 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2396      5341525F 
 2396      5365715F 
 2396      315F5365 
 2396      74436861 
 2397              	.LASF21:
 2398 0399 63684E75 		.ascii	"chNum\000"
 2398      6D00
 2399              	.LASF34:
 2400 039f 6368616E 		.ascii	"chan\000"
 2400      00
 2401              	.LASF18:
 2402 03a4 63686172 		.ascii	"char\000"
 2402      00
 2403              	.LASF39:
 2404 03a9 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2404      5341525F 
 2404      5365715F 
 2404      315F5365 
 2404      744C6F77 
 2405              	.LASF46:
 2406 03c3 6F666673 		.ascii	"offset\000"
 2406      657400
 2407              	.LASF62:
 2408 03ca 433A5C55 		.ascii	"C:\\Users\\JFDuval\\Desktop\\Work_Folder\\Biomech-E"
ARM GAS  C:\Users\JFDuval\AppData\Local\Temp\ccL5Nsgr.s 			page 61


 2408      73657273 
 2408      5C4A4644 
 2408      7576616C 
 2408      5C446573 
 2409 03f8 452D5356 		.ascii	"E-SVN2\\Code\\flexsea_1_0\\batt\\Batt.cydsn\000"
 2409      4E325C43 
 2409      6F64655C 
 2409      666C6578 
 2409      7365615F 
 2410              	.LASF50:
 2411 0420 61646343 		.ascii	"adcCounts\000"
 2411      6F756E74 
 2411      7300
 2412              	.LASF59:
 2413 042a 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2413      5341525F 
 2413      5365715F 
 2413      315F636F 
 2413      756E7473 
 2414              	.LASF30:
 2415 0448 73746174 		.ascii	"status\000"
 2415      757300
 2416              	.LASF45:
 2417 044f 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2417      5341525F 
 2417      5365715F 
 2417      315F5365 
 2417      744F6666 
 2418              	.LASF12:
 2419 0467 696E7431 		.ascii	"int16\000"
 2419      3600
 2420              	.LASF43:
 2421 046d 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2421      5341525F 
 2421      5365715F 
 2421      315F5365 
 2421      744C696D 
 2422              	.LASF35:
 2423 0488 72657375 		.ascii	"result\000"
 2423      6C7400
 2424              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
